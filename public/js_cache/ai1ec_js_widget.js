		/******** Called once Require.js has loaded ******/

		(function() {

			var timely_css = document.createElement( 'style' );
			timely_css.innerHTML = '.ai1ec-btn-lg{padding:10px 16px;font-size:17px;line-height:1.33;border-radius:6px;}.ai1ec-btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}.ai1ec-btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px;}@font-face{font-family:\'Timely_FontAwesome\';src:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/font/fontawesome-webfont.eot?v=4.0.3\');src:url(data:application/x-font-woff;charset=utf-8;base64,) format(\'woff\'), url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/font/fontawesome-webfont.eot?#iefix&v=4.0.3\') format(\'embedded-opentype\');font-weight:normal;font-style:normal;}.ai1ec-fa{display:inline-block;font-family:FontAwesome;font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.ai1ec-fa-lg{font-size:1.33333333333em;line-height:0.75em;vertical-align:-15%;}.ai1ec-fa-2x{font-size:2em;}.ai1ec-fa-3x{font-size:3em;}.ai1ec-fa-4x{font-size:4em;}.ai1ec-fa-5x{font-size:5em;}.ai1ec-fa-fw{width:1.28571428571em;text-align:center;}.ai1ec-fa-ul{padding-left:0;margin-left:2.14285714286em;list-style-type:none;}.ai1ec-fa-ul > li{position:relative;}.ai1ec-fa-li{position:absolute;left:-2.14285714286em;width:2.14285714286em;top:0.142857142857em;text-align:center;}.ai1ec-fa-li.ai1ec-fa-lg{left:-1.85714285714em;}.ai1ec-fa-spin{-webkit-animation:spin 2s infinite linear;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;animation:spin 2s infinite linear;}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg);}100%{-moz-transform:rotate(359deg);}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);}100%{-webkit-transform:rotate(359deg);}}@-o-keyframes spin{0%{-o-transform:rotate(0deg);}100%{-o-transform:rotate(359deg);}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg);}100%{-ms-transform:rotate(359deg);}}@keyframes spin{0%{transform:rotate(0deg);}100%{transform:rotate(359deg);}}.ai1ec-fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle;}.ai1ec-fa-stack-1x,.ai1ec-fa-stack-2x{position:absolute;left:0;width:100%;text-align:center;}.ai1ec-fa-stack-1x{line-height:inherit;}.ai1ec-fa-stack-2x{font-size:2em;}.ai1ec-fa-inverse{color:#fff;}.ai1ec-fa-glass:before{content:\"\\f000\";}.ai1ec-fa-music:before{content:\"\\f001\";}.ai1ec-fa-search:before{content:\"\\f002\";}.ai1ec-fa-envelope-o:before{content:\"\\f003\";}.ai1ec-fa-heart:before{content:\"\\f004\";}.ai1ec-fa-star:before{content:\"\\f005\";}.ai1ec-fa-star-o:before{content:\"\\f006\";}.ai1ec-fa-user:before{content:\"\\f007\";}.ai1ec-fa-film:before{content:\"\\f008\";}.ai1ec-fa-th-large:before{content:\"\\f009\";}.ai1ec-fa-th:before{content:\"\\f00a\";}.ai1ec-fa-th-list:before{content:\"\\f00b\";}.ai1ec-fa-check:before{content:\"\\f00c\";}.ai1ec-fa-times:before{content:\"\\f00d\";}.ai1ec-fa-search-plus:before{content:\"\\f00e\";}.ai1ec-fa-search-minus:before{content:\"\\f010\";}.ai1ec-fa-power-off:before{content:\"\\f011\";}.ai1ec-fa-signal:before{content:\"\\f012\";}.ai1ec-fa-gear:before,.ai1ec-fa-cog:before{content:\"\\f013\";}.ai1ec-fa-trash-o:before{content:\"\\f014\";}.ai1ec-fa-home:before{content:\"\\f015\";}.ai1ec-fa-file-o:before{content:\"\\f016\";}.ai1ec-fa-clock-o:before{content:\"\\f017\";}.ai1ec-fa-road:before{content:\"\\f018\";}.ai1ec-fa-download:before{content:\"\\f019\";}.ai1ec-fa-arrow-circle-o-down:before{content:\"\\f01a\";}.ai1ec-fa-arrow-circle-o-up:before{content:\"\\f01b\";}.ai1ec-fa-inbox:before{content:\"\\f01c\";}.ai1ec-fa-play-circle-o:before{content:\"\\f01d\";}.ai1ec-fa-rotate-right:before,.ai1ec-fa-repeat:before{content:\"\\f01e\";}.ai1ec-fa-refresh:before{content:\"\\f021\";}.ai1ec-fa-list-alt:before{content:\"\\f022\";}.ai1ec-fa-lock:before{content:\"\\f023\";}.ai1ec-fa-flag:before{content:\"\\f024\";}.ai1ec-fa-headphones:before{content:\"\\f025\";}.ai1ec-fa-volume-off:before{content:\"\\f026\";}.ai1ec-fa-volume-down:before{content:\"\\f027\";}.ai1ec-fa-volume-up:before{content:\"\\f028\";}.ai1ec-fa-qrcode:before{content:\"\\f029\";}.ai1ec-fa-barcode:before{content:\"\\f02a\";}.ai1ec-fa-tag:before{content:\"\\f02b\";}.ai1ec-fa-tags:before{content:\"\\f02c\";}.ai1ec-fa-book:before{content:\"\\f02d\";}.ai1ec-fa-bookmark:before{content:\"\\f02e\";}.ai1ec-fa-print:before{content:\"\\f02f\";}.ai1ec-fa-camera:before{content:\"\\f030\";}.ai1ec-fa-font:before{content:\"\\f031\";}.ai1ec-fa-bold:before{content:\"\\f032\";}.ai1ec-fa-italic:before{content:\"\\f033\";}.ai1ec-fa-text-height:before{content:\"\\f034\";}.ai1ec-fa-text-width:before{content:\"\\f035\";}.ai1ec-fa-align-left:before{content:\"\\f036\";}.ai1ec-fa-align-center:before{content:\"\\f037\";}.ai1ec-fa-align-right:before{content:\"\\f038\";}.ai1ec-fa-align-justify:before{content:\"\\f039\";}.ai1ec-fa-list:before{content:\"\\f03a\";}.ai1ec-fa-dedent:before,.ai1ec-fa-outdent:before{content:\"\\f03b\";}.ai1ec-fa-indent:before{content:\"\\f03c\";}.ai1ec-fa-video-camera:before{content:\"\\f03d\";}.ai1ec-fa-picture-o:before{content:\"\\f03e\";}.ai1ec-fa-pencil:before{content:\"\\f040\";}.ai1ec-fa-map-marker:before{content:\"\\f041\";}.ai1ec-fa-adjust:before{content:\"\\f042\";}.ai1ec-fa-tint:before{content:\"\\f043\";}.ai1ec-fa-edit:before,.ai1ec-fa-pencil-square-o:before{content:\"\\f044\";}.ai1ec-fa-share-square-o:before{content:\"\\f045\";}.ai1ec-fa-check-square-o:before{content:\"\\f046\";}.ai1ec-fa-arrows:before{content:\"\\f047\";}.ai1ec-fa-step-backward:before{content:\"\\f048\";}.ai1ec-fa-fast-backward:before{content:\"\\f049\";}.ai1ec-fa-backward:before{content:\"\\f04a\";}.ai1ec-fa-play:before{content:\"\\f04b\";}.ai1ec-fa-pause:before{content:\"\\f04c\";}.ai1ec-fa-stop:before{content:\"\\f04d\";}.ai1ec-fa-forward:before{content:\"\\f04e\";}.ai1ec-fa-fast-forward:before{content:\"\\f050\";}.ai1ec-fa-step-forward:before{content:\"\\f051\";}.ai1ec-fa-eject:before{content:\"\\f052\";}.ai1ec-fa-chevron-left:before{content:\"\\f053\";}.ai1ec-fa-chevron-right:before{content:\"\\f054\";}.ai1ec-fa-plus-circle:before{content:\"\\f055\";}.ai1ec-fa-minus-circle:before{content:\"\\f056\";}.ai1ec-fa-times-circle:before{content:\"\\f057\";}.ai1ec-fa-check-circle:before{content:\"\\f058\";}.ai1ec-fa-question-circle:before{content:\"\\f059\";}.ai1ec-fa-info-circle:before{content:\"\\f05a\";}.ai1ec-fa-crosshairs:before{content:\"\\f05b\";}.ai1ec-fa-times-circle-o:before{content:\"\\f05c\";}.ai1ec-fa-check-circle-o:before{content:\"\\f05d\";}.ai1ec-fa-ban:before{content:\"\\f05e\";}.ai1ec-fa-arrow-left:before{content:\"\\f060\";}.ai1ec-fa-arrow-right:before{content:\"\\f061\";}.ai1ec-fa-arrow-up:before{content:\"\\f062\";}.ai1ec-fa-arrow-down:before{content:\"\\f063\";}.ai1ec-fa-mail-forward:before,.ai1ec-fa-share:before{content:\"\\f064\";}.ai1ec-fa-expand:before{content:\"\\f065\";}.ai1ec-fa-compress:before{content:\"\\f066\";}.ai1ec-fa-plus:before{content:\"\\f067\";}.ai1ec-fa-minus:before{content:\"\\f068\";}.ai1ec-fa-asterisk:before{content:\"\\f069\";}.ai1ec-fa-exclamation-circle:before{content:\"\\f06a\";}.ai1ec-fa-gift:before{content:\"\\f06b\";}.ai1ec-fa-leaf:before{content:\"\\f06c\";}.ai1ec-fa-fire:before{content:\"\\f06d\";}.ai1ec-fa-eye:before{content:\"\\f06e\";}.ai1ec-fa-eye-slash:before{content:\"\\f070\";}.ai1ec-fa-warning:before,.ai1ec-fa-exclamation-triangle:before{content:\"\\f071\";}.ai1ec-fa-plane:before{content:\"\\f072\";}.ai1ec-fa-calendar:before{content:\"\\f073\";}.ai1ec-fa-random:before{content:\"\\f074\";}.ai1ec-fa-comment:before{content:\"\\f075\";}.ai1ec-fa-magnet:before{content:\"\\f076\";}.ai1ec-fa-chevron-up:before{content:\"\\f077\";}.ai1ec-fa-chevron-down:before{content:\"\\f078\";}.ai1ec-fa-retweet:before{content:\"\\f079\";}.ai1ec-fa-shopping-cart:before{content:\"\\f07a\";}.ai1ec-fa-folder:before{content:\"\\f07b\";}.ai1ec-fa-folder-open:before{content:\"\\f07c\";}.ai1ec-fa-arrows-v:before{content:\"\\f07d\";}.ai1ec-fa-arrows-h:before{content:\"\\f07e\";}.ai1ec-fa-bar-chart-o:before{content:\"\\f080\";}.ai1ec-fa-twitter-square:before{content:\"\\f081\";}.ai1ec-fa-facebook-square:before{content:\"\\f082\";}.ai1ec-fa-camera-retro:before{content:\"\\f083\";}.ai1ec-fa-key:before{content:\"\\f084\";}.ai1ec-fa-gears:before,.ai1ec-fa-cogs:before{content:\"\\f085\";}.ai1ec-fa-comments:before{content:\"\\f086\";}.ai1ec-fa-thumbs-o-up:before{content:\"\\f087\";}.ai1ec-fa-thumbs-o-down:before{content:\"\\f088\";}.ai1ec-fa-star-half:before{content:\"\\f089\";}.ai1ec-fa-heart-o:before{content:\"\\f08a\";}.ai1ec-fa-sign-out:before{content:\"\\f08b\";}.ai1ec-fa-linkedin-square:before{content:\"\\f08c\";}.ai1ec-fa-thumb-tack:before{content:\"\\f08d\";}.ai1ec-fa-external-link:before{content:\"\\f08e\";}.ai1ec-fa-sign-in:before{content:\"\\f090\";}.ai1ec-fa-trophy:before{content:\"\\f091\";}.ai1ec-fa-github-square:before{content:\"\\f092\";}.ai1ec-fa-upload:before{content:\"\\f093\";}.ai1ec-fa-lemon-o:before{content:\"\\f094\";}.ai1ec-fa-phone:before{content:\"\\f095\";}.ai1ec-fa-square-o:before{content:\"\\f096\";}.ai1ec-fa-bookmark-o:before{content:\"\\f097\";}.ai1ec-fa-phone-square:before{content:\"\\f098\";}.ai1ec-fa-twitter:before{content:\"\\f099\";}.ai1ec-fa-facebook:before{content:\"\\f09a\";}.ai1ec-fa-github:before{content:\"\\f09b\";}.ai1ec-fa-unlock:before{content:\"\\f09c\";}.ai1ec-fa-credit-card:before{content:\"\\f09d\";}.ai1ec-fa-rss:before{content:\"\\f09e\";}.ai1ec-fa-hdd-o:before{content:\"\\f0a0\";}.ai1ec-fa-bullhorn:before{content:\"\\f0a1\";}.ai1ec-fa-bell:before{content:\"\\f0f3\";}.ai1ec-fa-certificate:before{content:\"\\f0a3\";}.ai1ec-fa-hand-o-right:before{content:\"\\f0a4\";}.ai1ec-fa-hand-o-left:before{content:\"\\f0a5\";}.ai1ec-fa-hand-o-up:before{content:\"\\f0a6\";}.ai1ec-fa-hand-o-down:before{content:\"\\f0a7\";}.ai1ec-fa-arrow-circle-left:before{content:\"\\f0a8\";}.ai1ec-fa-arrow-circle-right:before{content:\"\\f0a9\";}.ai1ec-fa-arrow-circle-up:before{content:\"\\f0aa\";}.ai1ec-fa-arrow-circle-down:before{content:\"\\f0ab\";}.ai1ec-fa-globe:before{content:\"\\f0ac\";}.ai1ec-fa-wrench:before{content:\"\\f0ad\";}.ai1ec-fa-tasks:before{content:\"\\f0ae\";}.ai1ec-fa-filter:before{content:\"\\f0b0\";}.ai1ec-fa-briefcase:before{content:\"\\f0b1\";}.ai1ec-fa-arrows-alt:before{content:\"\\f0b2\";}.ai1ec-fa-group:before,.ai1ec-fa-users:before{content:\"\\f0c0\";}.ai1ec-fa-chain:before,.ai1ec-fa-link:before{content:\"\\f0c1\";}.ai1ec-fa-cloud:before{content:\"\\f0c2\";}.ai1ec-fa-flask:before{content:\"\\f0c3\";}.ai1ec-fa-cut:before,.ai1ec-fa-scissors:before{content:\"\\f0c4\";}.ai1ec-fa-copy:before,.ai1ec-fa-files-o:before{content:\"\\f0c5\";}.ai1ec-fa-paperclip:before{content:\"\\f0c6\";}.ai1ec-fa-save:before,.ai1ec-fa-floppy-o:before{content:\"\\f0c7\";}.ai1ec-fa-square:before{content:\"\\f0c8\";}.ai1ec-fa-bars:before{content:\"\\f0c9\";}.ai1ec-fa-list-ul:before{content:\"\\f0ca\";}.ai1ec-fa-list-ol:before{content:\"\\f0cb\";}.ai1ec-fa-strikethrough:before{content:\"\\f0cc\";}.ai1ec-fa-underline:before{content:\"\\f0cd\";}.ai1ec-fa-table:before{content:\"\\f0ce\";}.ai1ec-fa-magic:before{content:\"\\f0d0\";}.ai1ec-fa-truck:before{content:\"\\f0d1\";}.ai1ec-fa-pinterest:before{content:\"\\f0d2\";}.ai1ec-fa-pinterest-square:before{content:\"\\f0d3\";}.ai1ec-fa-google-plus-square:before{content:\"\\f0d4\";}.ai1ec-fa-google-plus:before{content:\"\\f0d5\";}.ai1ec-fa-money:before{content:\"\\f0d6\";}.ai1ec-fa-caret-down:before{content:\"\\f0d7\";}.ai1ec-fa-caret-up:before{content:\"\\f0d8\";}.ai1ec-fa-caret-left:before{content:\"\\f0d9\";}.ai1ec-fa-caret-right:before{content:\"\\f0da\";}.ai1ec-fa-columns:before{content:\"\\f0db\";}.ai1ec-fa-unsorted:before,.ai1ec-fa-sort:before{content:\"\\f0dc\";}.ai1ec-fa-sort-down:before,.ai1ec-fa-sort-asc:before{content:\"\\f0dd\";}.ai1ec-fa-sort-up:before,.ai1ec-fa-sort-desc:before{content:\"\\f0de\";}.ai1ec-fa-envelope:before{content:\"\\f0e0\";}.ai1ec-fa-linkedin:before{content:\"\\f0e1\";}.ai1ec-fa-rotate-left:before,.ai1ec-fa-undo:before{content:\"\\f0e2\";}.ai1ec-fa-legal:before,.ai1ec-fa-gavel:before{content:\"\\f0e3\";}.ai1ec-fa-dashboard:before,.ai1ec-fa-tachometer:before{content:\"\\f0e4\";}.ai1ec-fa-comment-o:before{content:\"\\f0e5\";}.ai1ec-fa-comments-o:before{content:\"\\f0e6\";}.ai1ec-fa-flash:before,.ai1ec-fa-bolt:before{content:\"\\f0e7\";}.ai1ec-fa-sitemap:before{content:\"\\f0e8\";}.ai1ec-fa-umbrella:before{content:\"\\f0e9\";}.ai1ec-fa-paste:before,.ai1ec-fa-clipboard:before{content:\"\\f0ea\";}.ai1ec-fa-lightbulb-o:before{content:\"\\f0eb\";}.ai1ec-fa-exchange:before{content:\"\\f0ec\";}.ai1ec-fa-cloud-download:before{content:\"\\f0ed\";}.ai1ec-fa-cloud-upload:before{content:\"\\f0ee\";}.ai1ec-fa-user-md:before{content:\"\\f0f0\";}.ai1ec-fa-stethoscope:before{content:\"\\f0f1\";}.ai1ec-fa-suitcase:before{content:\"\\f0f2\";}.ai1ec-fa-bell-o:before{content:\"\\f0a2\";}.ai1ec-fa-coffee:before{content:\"\\f0f4\";}.ai1ec-fa-cutlery:before{content:\"\\f0f5\";}.ai1ec-fa-file-text-o:before{content:\"\\f0f6\";}.ai1ec-fa-building-o:before{content:\"\\f0f7\";}.ai1ec-fa-hospital-o:before{content:\"\\f0f8\";}.ai1ec-fa-ambulance:before{content:\"\\f0f9\";}.ai1ec-fa-medkit:before{content:\"\\f0fa\";}.ai1ec-fa-fighter-jet:before{content:\"\\f0fb\";}.ai1ec-fa-beer:before{content:\"\\f0fc\";}.ai1ec-fa-h-square:before{content:\"\\f0fd\";}.ai1ec-fa-plus-square:before{content:\"\\f0fe\";}.ai1ec-fa-angle-double-left:before{content:\"\\f100\";}.ai1ec-fa-angle-double-right:before{content:\"\\f101\";}.ai1ec-fa-angle-double-up:before{content:\"\\f102\";}.ai1ec-fa-angle-double-down:before{content:\"\\f103\";}.ai1ec-fa-angle-left:before{content:\"\\f104\";}.ai1ec-fa-angle-right:before{content:\"\\f105\";}.ai1ec-fa-angle-up:before{content:\"\\f106\";}.ai1ec-fa-angle-down:before{content:\"\\f107\";}.ai1ec-fa-desktop:before{content:\"\\f108\";}.ai1ec-fa-laptop:before{content:\"\\f109\";}.ai1ec-fa-tablet:before{content:\"\\f10a\";}.ai1ec-fa-mobile-phone:before,.ai1ec-fa-mobile:before{content:\"\\f10b\";}.ai1ec-fa-circle-o:before{content:\"\\f10c\";}.ai1ec-fa-quote-left:before{content:\"\\f10d\";}.ai1ec-fa-quote-right:before{content:\"\\f10e\";}.ai1ec-fa-spinner:before{content:\"\\f110\";}.ai1ec-fa-circle:before{content:\"\\f111\";}.ai1ec-fa-mail-reply:before,.ai1ec-fa-reply:before{content:\"\\f112\";}.ai1ec-fa-github-alt:before{content:\"\\f113\";}.ai1ec-fa-folder-o:before{content:\"\\f114\";}.ai1ec-fa-folder-open-o:before{content:\"\\f115\";}.ai1ec-fa-smile-o:before{content:\"\\f118\";}.ai1ec-fa-frown-o:before{content:\"\\f119\";}.ai1ec-fa-meh-o:before{content:\"\\f11a\";}.ai1ec-fa-gamepad:before{content:\"\\f11b\";}.ai1ec-fa-keyboard-o:before{content:\"\\f11c\";}.ai1ec-fa-flag-o:before{content:\"\\f11d\";}.ai1ec-fa-flag-checkered:before{content:\"\\f11e\";}.ai1ec-fa-terminal:before{content:\"\\f120\";}.ai1ec-fa-code:before{content:\"\\f121\";}.ai1ec-fa-reply-all:before{content:\"\\f122\";}.ai1ec-fa-mail-reply-all:before{content:\"\\f122\";}.ai1ec-fa-star-half-empty:before,.ai1ec-fa-star-half-full:before,.ai1ec-fa-star-half-o:before{content:\"\\f123\";}.ai1ec-fa-location-arrow:before{content:\"\\f124\";}.ai1ec-fa-crop:before{content:\"\\f125\";}.ai1ec-fa-code-fork:before{content:\"\\f126\";}.ai1ec-fa-unlink:before,.ai1ec-fa-chain-broken:before{content:\"\\f127\";}.ai1ec-fa-question:before{content:\"\\f128\";}.ai1ec-fa-info:before{content:\"\\f129\";}.ai1ec-fa-exclamation:before{content:\"\\f12a\";}.ai1ec-fa-superscript:before{content:\"\\f12b\";}.ai1ec-fa-subscript:before{content:\"\\f12c\";}.ai1ec-fa-eraser:before{content:\"\\f12d\";}.ai1ec-fa-puzzle-piece:before{content:\"\\f12e\";}.ai1ec-fa-microphone:before{content:\"\\f130\";}.ai1ec-fa-microphone-slash:before{content:\"\\f131\";}.ai1ec-fa-shield:before{content:\"\\f132\";}.ai1ec-fa-calendar-o:before{content:\"\\f133\";}.ai1ec-fa-fire-extinguisher:before{content:\"\\f134\";}.ai1ec-fa-rocket:before{content:\"\\f135\";}.ai1ec-fa-maxcdn:before{content:\"\\f136\";}.ai1ec-fa-chevron-circle-left:before{content:\"\\f137\";}.ai1ec-fa-chevron-circle-right:before{content:\"\\f138\";}.ai1ec-fa-chevron-circle-up:before{content:\"\\f139\";}.ai1ec-fa-chevron-circle-down:before{content:\"\\f13a\";}.ai1ec-fa-html5:before{content:\"\\f13b\";}.ai1ec-fa-css3:before{content:\"\\f13c\";}.ai1ec-fa-anchor:before{content:\"\\f13d\";}.ai1ec-fa-unlock-alt:before{content:\"\\f13e\";}.ai1ec-fa-bullseye:before{content:\"\\f140\";}.ai1ec-fa-ellipsis-h:before{content:\"\\f141\";}.ai1ec-fa-ellipsis-v:before{content:\"\\f142\";}.ai1ec-fa-rss-square:before{content:\"\\f143\";}.ai1ec-fa-play-circle:before{content:\"\\f144\";}.ai1ec-fa-ticket:before{content:\"\\f145\";}.ai1ec-fa-minus-square:before{content:\"\\f146\";}.ai1ec-fa-minus-square-o:before{content:\"\\f147\";}.ai1ec-fa-level-up:before{content:\"\\f148\";}.ai1ec-fa-level-down:before{content:\"\\f149\";}.ai1ec-fa-check-square:before{content:\"\\f14a\";}.ai1ec-fa-pencil-square:before{content:\"\\f14b\";}.ai1ec-fa-external-link-square:before{content:\"\\f14c\";}.ai1ec-fa-share-square:before{content:\"\\f14d\";}.ai1ec-fa-compass:before{content:\"\\f14e\";}.ai1ec-fa-toggle-down:before,.ai1ec-fa-caret-square-o-down:before{content:\"\\f150\";}.ai1ec-fa-toggle-up:before,.ai1ec-fa-caret-square-o-up:before{content:\"\\f151\";}.ai1ec-fa-toggle-right:before,.ai1ec-fa-caret-square-o-right:before{content:\"\\f152\";}.ai1ec-fa-euro:before,.ai1ec-fa-eur:before{content:\"\\f153\";}.ai1ec-fa-gbp:before{content:\"\\f154\";}.ai1ec-fa-dollar:before,.ai1ec-fa-usd:before{content:\"\\f155\";}.ai1ec-fa-rupee:before,.ai1ec-fa-inr:before{content:\"\\f156\";}.ai1ec-fa-cny:before,.ai1ec-fa-rmb:before,.ai1ec-fa-yen:before,.ai1ec-fa-jpy:before{content:\"\\f157\";}.ai1ec-fa-ruble:before,.ai1ec-fa-rouble:before,.ai1ec-fa-rub:before{content:\"\\f158\";}.ai1ec-fa-won:before,.ai1ec-fa-krw:before{content:\"\\f159\";}.ai1ec-fa-bitcoin:before,.ai1ec-fa-btc:before{content:\"\\f15a\";}.ai1ec-fa-file:before{content:\"\\f15b\";}.ai1ec-fa-file-text:before{content:\"\\f15c\";}.ai1ec-fa-sort-alpha-asc:before{content:\"\\f15d\";}.ai1ec-fa-sort-alpha-desc:before{content:\"\\f15e\";}.ai1ec-fa-sort-amount-asc:before{content:\"\\f160\";}.ai1ec-fa-sort-amount-desc:before{content:\"\\f161\";}.ai1ec-fa-sort-numeric-asc:before{content:\"\\f162\";}.ai1ec-fa-sort-numeric-desc:before{content:\"\\f163\";}.ai1ec-fa-thumbs-up:before{content:\"\\f164\";}.ai1ec-fa-thumbs-down:before{content:\"\\f165\";}.ai1ec-fa-youtube-square:before{content:\"\\f166\";}.ai1ec-fa-youtube:before{content:\"\\f167\";}.ai1ec-fa-xing:before{content:\"\\f168\";}.ai1ec-fa-xing-square:before{content:\"\\f169\";}.ai1ec-fa-youtube-play:before{content:\"\\f16a\";}.ai1ec-fa-dropbox:before{content:\"\\f16b\";}.ai1ec-fa-stack-overflow:before{content:\"\\f16c\";}.ai1ec-fa-instagram:before{content:\"\\f16d\";}.ai1ec-fa-flickr:before{content:\"\\f16e\";}.ai1ec-fa-adn:before{content:\"\\f170\";}.ai1ec-fa-bitbucket:before{content:\"\\f171\";}.ai1ec-fa-bitbucket-square:before{content:\"\\f172\";}.ai1ec-fa-tumblr:before{content:\"\\f173\";}.ai1ec-fa-tumblr-square:before{content:\"\\f174\";}.ai1ec-fa-long-arrow-down:before{content:\"\\f175\";}.ai1ec-fa-long-arrow-up:before{content:\"\\f176\";}.ai1ec-fa-long-arrow-left:before{content:\"\\f177\";}.ai1ec-fa-long-arrow-right:before{content:\"\\f178\";}.ai1ec-fa-apple:before{content:\"\\f179\";}.ai1ec-fa-windows:before{content:\"\\f17a\";}.ai1ec-fa-android:before{content:\"\\f17b\";}.ai1ec-fa-linux:before{content:\"\\f17c\";}.ai1ec-fa-dribbble:before{content:\"\\f17d\";}.ai1ec-fa-skype:before{content:\"\\f17e\";}.ai1ec-fa-foursquare:before{content:\"\\f180\";}.ai1ec-fa-trello:before{content:\"\\f181\";}.ai1ec-fa-female:before{content:\"\\f182\";}.ai1ec-fa-male:before{content:\"\\f183\";}.ai1ec-fa-gittip:before{content:\"\\f184\";}.ai1ec-fa-sun-o:before{content:\"\\f185\";}.ai1ec-fa-moon-o:before{content:\"\\f186\";}.ai1ec-fa-archive:before{content:\"\\f187\";}.ai1ec-fa-bug:before{content:\"\\f188\";}.ai1ec-fa-vk:before{content:\"\\f189\";}.ai1ec-fa-weibo:before{content:\"\\f18a\";}.ai1ec-fa-renren:before{content:\"\\f18b\";}.ai1ec-fa-pagelines:before{content:\"\\f18c\";}.ai1ec-fa-stack-exchange:before{content:\"\\f18d\";}.ai1ec-fa-arrow-circle-o-right:before{content:\"\\f18e\";}.ai1ec-fa-arrow-circle-o-left:before{content:\"\\f190\";}.ai1ec-fa-toggle-left:before,.ai1ec-fa-caret-square-o-left:before{content:\"\\f191\";}.ai1ec-fa-dot-circle-o:before{content:\"\\f192\";}.ai1ec-fa-wheelchair:before{content:\"\\f193\";}.ai1ec-fa-vimeo-square:before{content:\"\\f194\";}.ai1ec-fa-turkish-lira:before,.ai1ec-fa-try:before{content:\"\\f195\";}.ai1ec-fa-plus-square-o:before{content:\"\\f196\";}.ai1ec-fa{font-family:Timely_FontAwesome;}a.ai1ec-fa.ai1ec-hide{display:none;}li .ai1ec-fa,li .ai1ec-fa-lg:before{width:auto;}.timely small.ai1ec-fa-stack{font-size:90%;height:1.53em;vertical-align:-11%;top:-0.1em;}.ai1ec-fa-stack .ai1ec-icon-timely{left:0.05em;top:-0.05em;}@font-face{font-family:\'Timely Logo Icon\';src:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/font/ai1ec-icons.eot\');src:url(data:application/x-font-woff;charset=utf-8;base64,d09GRk9UVE8AABDcAAoAAAAAEJQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAADRMAAA0TdzGeU09TLzIAAA4IAAAAYAAAAGAIIwgwY21hcAAADmgAAABsAAAAbPr2r4RnYXNwAAAO1AAAAAgAAAAIAAAAEGhlYWQAAA7cAAAANgAAADYAllVxaGhlYQAADxQAAAAkAAAAJAPiAfFobXR4AAAPOAAAAEAAAABAF7oBY21heHAAAA94AAAABgAAAAYAEFAAbmFtZQAAD4AAAAE5AAABOUQYtNZwb3N0AAAQvAAAACAAAAAgAAMAAAEABAQAAQEBCGljb21vb24AAQIAAQA6+BwC+BsD+BgEHgoAGVP/i4seCgAZU/+LiwwHi2v4lPh0BR0AAAC2Dx0AAAC7ER0AAAAJHQAADQoSABEBAQgPERMWGR4jKC0yNzxBRktQaWNvbW9vbmljb21vb251MHUxdTIwdTIxdUU2MDB1RTYwMXVFNjAydUU2MDN1RTYwNHVFNjA1dUYwNzN1RjA5RXVGMEQ1dUYxNzl1RjE3QQAAAgGJAA4AEAIAAQAEAAcACgANAZoCbAL7BCUE+AXdBmYIHQkrCyQL6Qwr/JQO/JQO/JQO+5QO9zH3nRWKhYmFiYWKh4uIioiHeIRboG6RgpOHlYuRi5GNkY6ZkJmWlpWdnJ2jmaCco5qfm6MIj4+OkY+QqLW80cKolI+YkJKMg5V2kXmFioqJi4qLVX52Wm5ii4x9lYmMgpKBkYCPCISNhY2EjYuLi4uLi3+Of41/hX6EhHyOfI2AkoKVh42KjoqNio6Kj4uOipWIloeUhgiQiZCHkId/eWZWa2qHh4aHiId/gYGFhYuKi4qLioyIjYmXi5GLk4yTi5MIjIwFjaSOopClCIyMBY2WjZWOlYuNjIyLjIyNjIyLjYyNjI2MjY6QjJKJkoeWhJGAi4iLiIqIinuHe4Z7hAhwf3B3dHJcWHRHlU2UVa9cvXOkgKaFp4vLi8yqurzT1K/3A0XcCIiPBYuLcWiDfwiKiI2JBa5keVB1ZXRlbGtgdHF8aoRti2qLbZR0nmindLCPwpLYx9zUnoqKioeLi4qIiomLiQiLi4uKi4uLi4uLi4uKhoqGjIWMho2GjIaNgIiAiYGKh4qIiogIDvcO9/sV2ouLTzyLi8cF64sV2YuLPT2Li9kF64sV2ouLTzyLi8cF+1Q9FdqLiz88i4vXBet2FdmLiyw9i4vqBeugFdqLiz88i4vXBYspFdqLiyw8i4vqBStkFdmLi1M9i4vDBSuyFdqLiyw8i4vqBfei+ygV+6GLBXWLeJyLoAiL97kFi6CenKGLCPehiwWhi516i3YIi/u5BYt2eXp1iwj7offyFX+LgoKLgQiL+7kFi4GUg5eLCPehiwWXi5STi5UIi/e5BYuVgpR/iwj7oYsFDvci9+8V93mLi1H7eYuLxQWLLRX3eYuLUft5i4vFBYwoFfd5i4tR+3mLi8UF9437BhX7oYsFdYt4nIufCIv3uQWLoJ6coYsI96GLBaGLnXqLdgiL+7kFi3d5enWLCPuh9/EVf4uCgouBCIv7uQWLgZSDl4sI96GLBZeLlJOLlQiL97kFi5WClH+LCPuhiwUO+G34KBX8QYsFeYt9fot6CIv7zAWLepl+nYsI+EGLBZ2LmpiLnAiL98wFi5x8mHmLCPuuRhXGi4tSUIuLxAWLPRXGi4tSUIuLxAU+ixXGi4tSUIuLxAU+ixXFi4tSUYuLxAWLQBXFi4tSUYuLxAXG+xoVUYuLxMWLi1IFnfcaFcaLi1JQi4vEBcb7GhVRi4vExYuLUgWd9xoVxouLUlCLi8QFx/saFVCLi8TGi4tSBdeLFVCLi8TGi4tSBYvYFVCLi8TGi4tSBYvWFVCLi8TGi4tSBYvZFVCLi8TGi4tSBdj7LRVRi4vExYuLUgWL1hVRi4vExYuLUgWL2RVRi4vExYuLUgXX+y0VUYuLxMWLi1IFi9YVUYuLxMWLi1IFi9kVUYuLxMWLi1IFDvdv98UV9y6Li3j7LouLngX3LrMV+3uLi1DEi4ux90KLBfsuLBX3LouLePsui4ueBYv7CBX3LouLePsui4ueBfcu9y8V+3uLi1HEi4uw90KLBfsuKxX3LouLePsui4ueBfcushX7e4uLUcSLi7D3QosFnvsaFfuhiwV1i3ici6AIi/e5BYugnpuhiwj3oYsFoYude4t2CIv7uQWLdnl6dYsI+6H38RV/i4KDi4EIi/u5BYuBlIKXiwj3oYsFl4uUlIuVCIv3uQWLlYKTf4sI+6GLBQ7eyBWL8Ivwi/CLi4uMi4uOl5KTlpCOjY+Mjozpi+mL6YuMioyLjIuchpZ8i3uLKosriysIi4iLh4qIh3t8gHmLMYsyizKLiouJi4qLfY2BkYSXio6Kj4qOCJrBFfSL84v0i4uei56LnyKLIosji4t3i3iLeAj3zvdlFSKLI4sii4t3i3iLePSL84v0i4uei56LnwiLPxUiiyOLIouLeIt4i3j0i/OL9IuLnouei54Ii/srFSKLIosji4uAioCMgIuFj4aQiJCIkIqRi+OL44vii46LjouNjJWMk5OLk4uWi5aLlggO+G34KBX8QYsFeYt9fot6CIv7zAWLepl+nYsI+EGLBZ2LmpiLnAiL98wFi5x8mHmLCPuuRhXGi4v7s1CLi/ezBSz7sxVRi4v3tMWLi/u0BdiLFVGLi/e0xYuL+7QF9y6LFVCLi/ezxouL+7MF2IsVUYuL97PFi4v7swXXixVRi4v3s8WLi/uzBQ5nsJAV3YuL3TmLizkF74sV54uL3S+LizkFJ+8V3YuL5zmLiy8F74sV54uL5y+Liy8FJ/cCFd2Li905i4s5Bfdm+2YV5ouL3TCLizkF+wL3ZhXni4vdL4uLOQX3cPtmFd2Li905i4s5BfsC7xXmi4vnMIuLLwUm94sVi90Fi46KjYqNiY2Ji4iLCHmLBYiLiYuJiYqJiomLiAiLOQWLiYyIjIqNiY2KjosInYsFjouNjI2NjIyMjouNCPdn+4sV3YuL5zmLiy8F+wL3AhXmi4vdMIuLOQX3AosV3YuL3TmLizkFlPcdFYvdBYuOio2JjYmNiYuJiwh4iwWJi4mLiYmJiYqJi4gIizkFi4mMiI2KjYmNio2LCJ6LBY2LjYyNjY2MjI6LjQj3AZ0Vi/wBBYuBiIKEhIOEg4eBiwj8JosFgYuCj4SShJKHlIuVCIv4AQWLlY+UkpKSkpSPlYsIr4uLpgWLmJCWlJSUlJWPmIsInYsFmIuVh5SClIKQgIt+CItw9wKLi6YFi5iPlpSUlJSWj5eLCJ6LBZeLloeUgpSCj4CLfgiLcLCLBZWLk4eThJKEjoKLgQgO+wH3AusVi3yFfoGAgIB+hnyLfIt+kICWgJaGmIuai5qQmJaWlpaYkJqLmouYhpaAlYCRfot8CPcmaBWLhoqGh4eIh4aJhosIZIsFhouHjYiOh46Kj4qQh7Z5sWyqbKpmnGCPhoyHjYiOiI6JkIuPCIuyBYuQjZCPjo6Pj4yQiwiNiwWpiaiDp36nfqR6oHWhdpxymG+Yb5NujW0I9yaKFYyGiYeHh4iHhomGiwhiiwWGi4eNh46IjomQi4+JtIGyerB6sHWrcKZwpmuhZpxmnGSVYo2Gi4eNiI+IjomQi48Ii7QFi5CNkI+Ojo+PjJCLCIyLBb2Ju4C4drl3tG+uZ69op2KfXp9dl1uNWQgOZ/eOyBWLj4uPio+Kj4qOio6KjoqPiI6Jj4mNiY6KjYiOiI6Hj4mNiY2JjIiOh46GjoiNiowIiY2IjYaOh46IjYqMh4uHjISLgYuBioGKgYmBiYCHgYiBh4OFg4aFhIaChYKJgYt/CIt+joCSgZKAlIOWhpaFloaXiZeIl4mXi5eLlYyVjpaNlI+UkJSQkpKQlJGUjZWLlwhp94sVi5aJl4iYiJiHl4WXhZeDlYGTgZN/j3+LeYt9hIJ+gX6Ge4t5i4KMgo2BjYGPgY+BCJCBkIKRg5KDkoWUhpOGlYmUi56LmJCUl5OWj5uLnghm9xsV9xCLZXVkiwWZgpV/k3ySe497i3uLfIl/hoCHgIaChIWFhIWFhIWFhoaFhoWHhYmEi4SLhoyHj4YIjoaPh5CGkIeQhpKGkYeRhZGGkYWRhJCFkISPg46BjoKNgYuAi219cHFzbnJjf1iLCH+LgIx/jYCNf46Aj3+QgZCCkoKSg5OGlYWWiJaLmIuXj5iSmZGXlJWXlJeUmZKakAibj5qPmY2ZjZmMmox+m4WZi5eLjouNjI2LjYyNi42MjIyNjI6MjYuNjI2DioSKhosIbotzlXeddp6Bo4uni6WUo52gnaCimaWRnY+djJ2LCPe8QhWLZ0KLi0Jni4vUQouLr9SLi9Svi4tC1IsFDvsB+CL3GRWEc39ze3NyZnN4couCi36OeZJ7kX2OfouAi32IfIR7hX+IgYtui26jb71vvH27i7kIi7eWrqCnoaemmKuLmYuciJ+Gn4WYiJGLlIuZjp2Sn5Gbj5mLoYughJ1/lISVgpV+CHx/gH+Fgn55hXeLdotzknaYeJh4mn+chggg9+MVi3+IfoV9hn2Cfn9/gICBhYGHhImBiX6KjKiSo5mgmp+ima2Ti4qLioyKi4mLiouLCIuKi4qLioyKi4qLiggOZ/dX91UVi/tO+1eli/c091eLBYv3aBWL+1D7V4uL9zUF+G/7TRWL+3X7l6+L91H3l4sFi/eOFYv7dvuXi4v3UwUO+JQU+JQViwwKAAADAgABkAAFAAABTAFmAAAARwFMAWYAAAD1ABkAhAAAAAAAAAAAAAAAAAAAAAEQAAAAAAAAAAAAAAAAAAAAAEAAAPF6AeD/4P/gAeAAIAAAAAEAAAAAAAAAAAAAACAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAWAAAABIAEAADAAIAAQAh5gXwc/Ce8NXxev/9//8AAAAAACDmAPBz8J7w1fF5//3//wAB/+MaBQ+YD24POA6VAAMAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAH//wAPAAEAAAABAADKJX6LXw889QALAgAAAAAAz7uKWgAAAADPu4paAAD/4AIAAeAAAAAIAAIAAAAAAAAAAQAAAeD/4AAAAgAAAAAAAgAAAQAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAABAAAAAgAAAgIAAFICAABSAgAADAIAAFICAABTAgAADAHcAAABkwAAAdwAAAGTAAAB3AAAAABQAAAQAAAAAAAOAK4AAQAAAAAAAQAOAAAAAQAAAAAAAgAOAEcAAQAAAAAAAwAOACQAAQAAAAAABAAOAFUAAQAAAAAABQAWAA4AAQAAAAAABgAHADIAAQAAAAAACgAoAGMAAwABBAkAAQAOAAAAAwABBAkAAgAOAEcAAwABBAkAAwAOACQAAwABBAkABAAOAFUAAwABBAkABQAWAA4AAwABBAkABgAOADkAAwABBAkACgAoAGMAaQBjAG8AbQBvAG8AbgBWAGUAcgBzAGkAbwBuACAAMQAuADAAaQBjAG8AbQBvAG8Abmljb21vb24AaQBjAG8AbQBvAG8AbgBSAGUAZwB1AGwAYQByAGkAYwBvAG0AbwBvAG4ARwBlAG4AZQByAGEAdABlAGQAIABiAHkAIABJAGMAbwBNAG8AbwBuAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=) format(\'woff\'), url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/font/ai1ec-icons.eot?#iefix&v=4.0.3\') format(\'embedded-opentype\');font-weight:normal;font-style:normal;}[class^=\"ai1ec-icon-\"]:before,[class*=\" ai1ec-icon-\"]:before{display:inline-block;font-family:\'Timely Logo Icon\';font-style:normal;font-weight:normal;speak:none;vertical-align:baseline;}.ai1ec-icon-agenda:before{content:\"\\e603\";}.ai1ec-icon-oneday:before{content:\"\\e604\";}.ai1ec-icon-month:before{content:\"\\e602\";}.ai1ec-icon-week:before{content:\"\\e605\";}.ai1ec-icon-posterboard:before{content:\"\\e600\";}.ai1ec-icon-stream:before{content:\"\\e601\";}.ai1ec-icon-calendar:before{content:\"\\f073\";}.ai1ec-icon-rss:before{content:\"\\f09e\";}.ai1ec-icon-google:before{content:\"\\f0d5\";}.ai1ec-icon-apple:before{content:\"\\f179\";}.ai1ec-icon-windows:before{content:\"\\f17a\";}.ai1ec-icon-timely:before{content:\"\\21\";}.timely-icon-timely-logomark:before{content:\"\\21\";}.timely-icon-import-events:before{content:\"\\22\";}.timely-icon-export-events:before{content:\"\\23\";}.timely-icon-facebook-sync:before{content:\"\\24\";}.timely-icon-filter-tag-category:before{content:\"\\25\";}.timely-icon-subscribe-events:before{content:\"\\26\";}.timely-icon-recurring-events:before{content:\"\\27\";}.timely-icon-multiple-views:before{content:\"\\28\";}.timely-icon-customizable-views:before{content:\"\\29\";}.timely-icon-upcoming-events-widget:before{content:\"\\2a\";}.timely-icon-locations-maps:before{content:\"\\2b\";}.timely-icon-seo-optimized:before{content:\"\\2c\";}.timely-icon-dedicated-support:before{content:\"\\2d\";}.timely-icon-plus-sign:before{content:\"\\2e\";}.timely-icon-minus-sign:before{content:\"\\2f\";}.timely-icon-chevron-right:before{content:\"\\30\";}.timely-icon-chevron-left:before{content:\"\\31\";}.timely-icon-chevron-down:before{content:\"\\32\";}.timely-icon-chevron-up:before{content:\"\\33\";}.timely-icon-arrow-right:before{content:\"\\34\";}.timely-icon-arrow-left:before{content:\"\\35\";}.timely-icon-arrow-up:before{content:\"\\36\";}.timely-icon-arrow-down:before{content:\"\\37\";}.timely-icon-pencil:before{content:\"\\3c\";}.timely-icon-gear:before{content:\"\\3e\";}.timely-icon-tag:before{content:\"\\3f\";}.timely-icon-forward:before{content:\"\\3b\";}.timely-icon-close:before{content:\"\\3a\";}.timely-icon-heart:before{content:\"\\3d\";}.timely-icon-folder:before{content:\"\\40\";}.timely-icon-grid:before{content:\"\\41\";}.timely-icon-plus:before{content:\"\\42\";}.timely-icon-minus:before{content:\"\\43\";}.timely-icon-print:before{content:\"\\38\";}.timely article,.timely aside,.timely details,.timely figcaption,.timely figure,.timely footer,.timely header,.timely hgroup,.timely main,.timely nav,.timely section,.timely summary{display:block;}.timely audio,.timely canvas,.timely video{display:inline-block;}.timely audio:not([controls]){display:none;height:0;}.timely [hidden],.timely template{display:none;}.timely html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}.timely body{margin:0;}.timely a{background:transparent;}.timely a:focus{outline:thin dotted;}.timely a:active,.timely a:hover{outline:0;}.timely h1{font-size:2em;margin:0.67em 0;}.timely abbr[title]{border-bottom:1px dotted;}.timely b,.timely strong{font-weight:bold;}.timely dfn{font-style:italic;}.timely hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}.timely mark{background:#ff0;color:#000;}.timely code,.timely kbd,.timely pre,.timely samp{font-family:monospace, serif;font-size:1em;}.timely pre{white-space:pre-wrap;}.timely q{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\";}.timely small{font-size:80%;}.timely sub,.timely sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}.timely sup{top:-0.5em;}.timely sub{bottom:-0.25em;}.timely img{border:0;}.timely svg:not(:root){overflow:hidden;}.timely figure{margin:0;}.timely fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}.timely legend{border:0;padding:0;}.timely button,.timely input,.timely select,.timely textarea{font-family:inherit;font-size:100%;margin:0;}.timely button,.timely input{line-height:normal;}.timely button,.timely select{text-transform:none;}.timely button,.timely html input[type=\"button\"],.timely input[type=\"reset\"],.timely input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer;}.timely button[disabled],.timely html input[disabled]{cursor:default;}.timely input[type=\"checkbox\"],.timely input[type=\"radio\"]{box-sizing:border-box;padding:0;}.timely input[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}.timely input[type=\"search\"]::-webkit-search-cancel-button,.timely input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none;}.timely button::-moz-focus-inner,.timely input::-moz-focus-inner{border:0;padding:0;}.timely textarea{overflow:auto;vertical-align:top;}.timely table{border-collapse:collapse;border-spacing:0;}@media print{.timely *{text-shadow:none !important;color:#000 !important;background:transparent !important;box-shadow:none !important;}.timely a,.timely a:visited{text-decoration:underline;}.timely a[href]:after{content:\" (\" attr(href) \")\";}.timely abbr[title]:after{content:\" (\" attr(title) \")\";}.timely a[href^=\"javascript:\"]:after,.timely a[href^=\"#\"]:after{content:\"\";}.timely pre,.timely blockquote{border:1px solid #999;page-break-inside:avoid;}.timely thead{display:table-header-group;}.timely tr,.timely img{page-break-inside:avoid;}.timely img{max-width:100% !important;}@page{margin:2cm .5cm;}.timely p,.timely h2,.timely h3{orphans:3;widows:3;}.timely h2,.timely h3{page-break-after:avoid;}.timely select{background:#fff !important;}.timely .ai1ec-navbar{display:none;}.timely .ai1ec-table td,.timely .ai1ec-table th{background-color:#fff !important;}.timely .ai1ec-btn > .ai1ec-caret,.timely .ai1ec-dropup > .ai1ec-btn > .ai1ec-caret{border-top-color:#000 !important;}.timely .ai1ec-label{border:1px solid #000;}.timely .ai1ec-table{border-collapse:collapse !important;}.timely .ai1ec-table-bordered th,.timely .ai1ec-table-bordered td{border:1px solid #ddd !important;}}.timely *,.timely *:before,.timely *:after{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}.timely html{font-size:62.5%;-webkit-tap-highlight-color:rgba(0,0,0,0);}.timely body{font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;font-size:13px;line-height:1.428571429;color:#333;background-color:#fff;}.timely input,.timely button,.timely select,.timely textarea{font-family:inherit;font-size:inherit;line-height:inherit;}.timely a{color:#3d6b99;text-decoration:none;}.timely a:hover,.timely a:focus{color:#335980;text-decoration:underline;}.timely a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}.timely img{vertical-align:middle;}.timely .ai1ec-img-responsive{display:block;max-width:100%;height:auto;}.timely .ai1ec-img-rounded{border-radius:6px;}.timely .ai1ec-img-thumbnail{padding:4px;line-height:1.428571429;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;display:inline-block;max-width:100%;height:auto;}.timely .ai1ec-img-circle{border-radius:50%;}.timely hr{margin-top:18px;margin-bottom:18px;border:0;border-top:1px solid #eee;}.timely .ai1ec-sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0;}.ai1ec-container{margin-right:auto;margin-left:auto;padding-left:15px;padding-right:15px;}.ai1ec-container:before,.ai1ec-container:after{content:\" \";display:table;}.ai1ec-container:after{clear:both;}.ai1ec-container:before,.ai1ec-container:after{content:\" \";display:table;}.ai1ec-container:after{clear:both;}@media (min-width: 768px){.ai1ec-container{width:750px;}}@media (min-width: 992px){.ai1ec-container{width:970px;}}@media (min-width: 1200px){.ai1ec-container{width:1170px;}}.ai1ec-row{margin-left:-15px;margin-right:-15px;}.ai1ec-row:before,.ai1ec-row:after{content:\" \";display:table;}.ai1ec-row:after{clear:both;}.ai1ec-row:before,.ai1ec-row:after{content:\" \";display:table;}.ai1ec-row:after{clear:both;}.ai1ec-col-xs-1, .ai1ec-col-sm-1, .ai1ec-col-md-1, .ai1ec-col-lg-1, .ai1ec-col-xs-2, .ai1ec-col-sm-2, .ai1ec-col-md-2, .ai1ec-col-lg-2, .ai1ec-col-xs-3, .ai1ec-col-sm-3, .ai1ec-col-md-3, .ai1ec-col-lg-3, .ai1ec-col-xs-4, .ai1ec-col-sm-4, .ai1ec-col-md-4, .ai1ec-col-lg-4, .ai1ec-col-xs-5, .ai1ec-col-sm-5, .ai1ec-col-md-5, .ai1ec-col-lg-5, .ai1ec-col-xs-6, .ai1ec-col-sm-6, .ai1ec-col-md-6, .ai1ec-col-lg-6, .ai1ec-col-xs-7, .ai1ec-col-sm-7, .ai1ec-col-md-7, .ai1ec-col-lg-7, .ai1ec-col-xs-8, .ai1ec-col-sm-8, .ai1ec-col-md-8, .ai1ec-col-lg-8, .ai1ec-col-xs-9, .ai1ec-col-sm-9, .ai1ec-col-md-9, .ai1ec-col-lg-9, .ai1ec-col-xs-10, .ai1ec-col-sm-10, .ai1ec-col-md-10, .ai1ec-col-lg-10, .ai1ec-col-xs-11, .ai1ec-col-sm-11, .ai1ec-col-md-11, .ai1ec-col-lg-11, .ai1ec-col-xs-12, .ai1ec-col-sm-12, .ai1ec-col-md-12, .ai1ec-col-lg-12{position:relative;min-height:1px;padding-left:15px;padding-right:15px;}.ai1ec-col-xs-1, .ai1ec-col-xs-2, .ai1ec-col-xs-3, .ai1ec-col-xs-4, .ai1ec-col-xs-5, .ai1ec-col-xs-6, .ai1ec-col-xs-7, .ai1ec-col-xs-8, .ai1ec-col-xs-9, .ai1ec-col-xs-10, .ai1ec-col-xs-11, .ai1ec-col-xs-12{float:left;}.ai1ec-col-xs-12{width:100%;}.ai1ec-col-xs-11{width:91.6666666667%;}.ai1ec-col-xs-10{width:83.3333333333%;}.ai1ec-col-xs-9{width:75%;}.ai1ec-col-xs-8{width:66.6666666667%;}.ai1ec-col-xs-7{width:58.3333333333%;}.ai1ec-col-xs-6{width:50%;}.ai1ec-col-xs-5{width:41.6666666667%;}.ai1ec-col-xs-4{width:33.3333333333%;}.ai1ec-col-xs-3{width:25%;}.ai1ec-col-xs-2{width:16.6666666667%;}.ai1ec-col-xs-1{width:8.33333333333%;}.ai1ec-col-xs-pull-12{right:100%;}.ai1ec-col-xs-pull-11{right:91.6666666667%;}.ai1ec-col-xs-pull-10{right:83.3333333333%;}.ai1ec-col-xs-pull-9{right:75%;}.ai1ec-col-xs-pull-8{right:66.6666666667%;}.ai1ec-col-xs-pull-7{right:58.3333333333%;}.ai1ec-col-xs-pull-6{right:50%;}.ai1ec-col-xs-pull-5{right:41.6666666667%;}.ai1ec-col-xs-pull-4{right:33.3333333333%;}.ai1ec-col-xs-pull-3{right:25%;}.ai1ec-col-xs-pull-2{right:16.6666666667%;}.ai1ec-col-xs-pull-1{right:8.33333333333%;}.ai1ec-col-xs-pull-0{right:0%;}.ai1ec-col-xs-push-12{left:100%;}.ai1ec-col-xs-push-11{left:91.6666666667%;}.ai1ec-col-xs-push-10{left:83.3333333333%;}.ai1ec-col-xs-push-9{left:75%;}.ai1ec-col-xs-push-8{left:66.6666666667%;}.ai1ec-col-xs-push-7{left:58.3333333333%;}.ai1ec-col-xs-push-6{left:50%;}.ai1ec-col-xs-push-5{left:41.6666666667%;}.ai1ec-col-xs-push-4{left:33.3333333333%;}.ai1ec-col-xs-push-3{left:25%;}.ai1ec-col-xs-push-2{left:16.6666666667%;}.ai1ec-col-xs-push-1{left:8.33333333333%;}.ai1ec-col-xs-push-0{left:0%;}.ai1ec-col-xs-offset-12{margin-left:100%;}.ai1ec-col-xs-offset-11{margin-left:91.6666666667%;}.ai1ec-col-xs-offset-10{margin-left:83.3333333333%;}.ai1ec-col-xs-offset-9{margin-left:75%;}.ai1ec-col-xs-offset-8{margin-left:66.6666666667%;}.ai1ec-col-xs-offset-7{margin-left:58.3333333333%;}.ai1ec-col-xs-offset-6{margin-left:50%;}.ai1ec-col-xs-offset-5{margin-left:41.6666666667%;}.ai1ec-col-xs-offset-4{margin-left:33.3333333333%;}.ai1ec-col-xs-offset-3{margin-left:25%;}.ai1ec-col-xs-offset-2{margin-left:16.6666666667%;}.ai1ec-col-xs-offset-1{margin-left:8.33333333333%;}.ai1ec-col-xs-offset-0{margin-left:0%;}@media (min-width: 768px){.ai1ec-col-sm-1, .ai1ec-col-sm-2, .ai1ec-col-sm-3, .ai1ec-col-sm-4, .ai1ec-col-sm-5, .ai1ec-col-sm-6, .ai1ec-col-sm-7, .ai1ec-col-sm-8, .ai1ec-col-sm-9, .ai1ec-col-sm-10, .ai1ec-col-sm-11, .ai1ec-col-sm-12{float:left;}.ai1ec-col-sm-12{width:100%;}.ai1ec-col-sm-11{width:91.6666666667%;}.ai1ec-col-sm-10{width:83.3333333333%;}.ai1ec-col-sm-9{width:75%;}.ai1ec-col-sm-8{width:66.6666666667%;}.ai1ec-col-sm-7{width:58.3333333333%;}.ai1ec-col-sm-6{width:50%;}.ai1ec-col-sm-5{width:41.6666666667%;}.ai1ec-col-sm-4{width:33.3333333333%;}.ai1ec-col-sm-3{width:25%;}.ai1ec-col-sm-2{width:16.6666666667%;}.ai1ec-col-sm-1{width:8.33333333333%;}.ai1ec-col-sm-pull-12{right:100%;}.ai1ec-col-sm-pull-11{right:91.6666666667%;}.ai1ec-col-sm-pull-10{right:83.3333333333%;}.ai1ec-col-sm-pull-9{right:75%;}.ai1ec-col-sm-pull-8{right:66.6666666667%;}.ai1ec-col-sm-pull-7{right:58.3333333333%;}.ai1ec-col-sm-pull-6{right:50%;}.ai1ec-col-sm-pull-5{right:41.6666666667%;}.ai1ec-col-sm-pull-4{right:33.3333333333%;}.ai1ec-col-sm-pull-3{right:25%;}.ai1ec-col-sm-pull-2{right:16.6666666667%;}.ai1ec-col-sm-pull-1{right:8.33333333333%;}.ai1ec-col-sm-pull-0{right:0%;}.ai1ec-col-sm-push-12{left:100%;}.ai1ec-col-sm-push-11{left:91.6666666667%;}.ai1ec-col-sm-push-10{left:83.3333333333%;}.ai1ec-col-sm-push-9{left:75%;}.ai1ec-col-sm-push-8{left:66.6666666667%;}.ai1ec-col-sm-push-7{left:58.3333333333%;}.ai1ec-col-sm-push-6{left:50%;}.ai1ec-col-sm-push-5{left:41.6666666667%;}.ai1ec-col-sm-push-4{left:33.3333333333%;}.ai1ec-col-sm-push-3{left:25%;}.ai1ec-col-sm-push-2{left:16.6666666667%;}.ai1ec-col-sm-push-1{left:8.33333333333%;}.ai1ec-col-sm-push-0{left:0%;}.ai1ec-col-sm-offset-12{margin-left:100%;}.ai1ec-col-sm-offset-11{margin-left:91.6666666667%;}.ai1ec-col-sm-offset-10{margin-left:83.3333333333%;}.ai1ec-col-sm-offset-9{margin-left:75%;}.ai1ec-col-sm-offset-8{margin-left:66.6666666667%;}.ai1ec-col-sm-offset-7{margin-left:58.3333333333%;}.ai1ec-col-sm-offset-6{margin-left:50%;}.ai1ec-col-sm-offset-5{margin-left:41.6666666667%;}.ai1ec-col-sm-offset-4{margin-left:33.3333333333%;}.ai1ec-col-sm-offset-3{margin-left:25%;}.ai1ec-col-sm-offset-2{margin-left:16.6666666667%;}.ai1ec-col-sm-offset-1{margin-left:8.33333333333%;}.ai1ec-col-sm-offset-0{margin-left:0%;}}@media (min-width: 992px){.ai1ec-col-md-1, .ai1ec-col-md-2, .ai1ec-col-md-3, .ai1ec-col-md-4, .ai1ec-col-md-5, .ai1ec-col-md-6, .ai1ec-col-md-7, .ai1ec-col-md-8, .ai1ec-col-md-9, .ai1ec-col-md-10, .ai1ec-col-md-11, .ai1ec-col-md-12{float:left;}.ai1ec-col-md-12{width:100%;}.ai1ec-col-md-11{width:91.6666666667%;}.ai1ec-col-md-10{width:83.3333333333%;}.ai1ec-col-md-9{width:75%;}.ai1ec-col-md-8{width:66.6666666667%;}.ai1ec-col-md-7{width:58.3333333333%;}.ai1ec-col-md-6{width:50%;}.ai1ec-col-md-5{width:41.6666666667%;}.ai1ec-col-md-4{width:33.3333333333%;}.ai1ec-col-md-3{width:25%;}.ai1ec-col-md-2{width:16.6666666667%;}.ai1ec-col-md-1{width:8.33333333333%;}.ai1ec-col-md-pull-12{right:100%;}.ai1ec-col-md-pull-11{right:91.6666666667%;}.ai1ec-col-md-pull-10{right:83.3333333333%;}.ai1ec-col-md-pull-9{right:75%;}.ai1ec-col-md-pull-8{right:66.6666666667%;}.ai1ec-col-md-pull-7{right:58.3333333333%;}.ai1ec-col-md-pull-6{right:50%;}.ai1ec-col-md-pull-5{right:41.6666666667%;}.ai1ec-col-md-pull-4{right:33.3333333333%;}.ai1ec-col-md-pull-3{right:25%;}.ai1ec-col-md-pull-2{right:16.6666666667%;}.ai1ec-col-md-pull-1{right:8.33333333333%;}.ai1ec-col-md-pull-0{right:0%;}.ai1ec-col-md-push-12{left:100%;}.ai1ec-col-md-push-11{left:91.6666666667%;}.ai1ec-col-md-push-10{left:83.3333333333%;}.ai1ec-col-md-push-9{left:75%;}.ai1ec-col-md-push-8{left:66.6666666667%;}.ai1ec-col-md-push-7{left:58.3333333333%;}.ai1ec-col-md-push-6{left:50%;}.ai1ec-col-md-push-5{left:41.6666666667%;}.ai1ec-col-md-push-4{left:33.3333333333%;}.ai1ec-col-md-push-3{left:25%;}.ai1ec-col-md-push-2{left:16.6666666667%;}.ai1ec-col-md-push-1{left:8.33333333333%;}.ai1ec-col-md-push-0{left:0%;}.ai1ec-col-md-offset-12{margin-left:100%;}.ai1ec-col-md-offset-11{margin-left:91.6666666667%;}.ai1ec-col-md-offset-10{margin-left:83.3333333333%;}.ai1ec-col-md-offset-9{margin-left:75%;}.ai1ec-col-md-offset-8{margin-left:66.6666666667%;}.ai1ec-col-md-offset-7{margin-left:58.3333333333%;}.ai1ec-col-md-offset-6{margin-left:50%;}.ai1ec-col-md-offset-5{margin-left:41.6666666667%;}.ai1ec-col-md-offset-4{margin-left:33.3333333333%;}.ai1ec-col-md-offset-3{margin-left:25%;}.ai1ec-col-md-offset-2{margin-left:16.6666666667%;}.ai1ec-col-md-offset-1{margin-left:8.33333333333%;}.ai1ec-col-md-offset-0{margin-left:0%;}}@media (min-width: 1200px){.ai1ec-col-lg-1, .ai1ec-col-lg-2, .ai1ec-col-lg-3, .ai1ec-col-lg-4, .ai1ec-col-lg-5, .ai1ec-col-lg-6, .ai1ec-col-lg-7, .ai1ec-col-lg-8, .ai1ec-col-lg-9, .ai1ec-col-lg-10, .ai1ec-col-lg-11, .ai1ec-col-lg-12{float:left;}.ai1ec-col-lg-12{width:100%;}.ai1ec-col-lg-11{width:91.6666666667%;}.ai1ec-col-lg-10{width:83.3333333333%;}.ai1ec-col-lg-9{width:75%;}.ai1ec-col-lg-8{width:66.6666666667%;}.ai1ec-col-lg-7{width:58.3333333333%;}.ai1ec-col-lg-6{width:50%;}.ai1ec-col-lg-5{width:41.6666666667%;}.ai1ec-col-lg-4{width:33.3333333333%;}.ai1ec-col-lg-3{width:25%;}.ai1ec-col-lg-2{width:16.6666666667%;}.ai1ec-col-lg-1{width:8.33333333333%;}.ai1ec-col-lg-pull-12{right:100%;}.ai1ec-col-lg-pull-11{right:91.6666666667%;}.ai1ec-col-lg-pull-10{right:83.3333333333%;}.ai1ec-col-lg-pull-9{right:75%;}.ai1ec-col-lg-pull-8{right:66.6666666667%;}.ai1ec-col-lg-pull-7{right:58.3333333333%;}.ai1ec-col-lg-pull-6{right:50%;}.ai1ec-col-lg-pull-5{right:41.6666666667%;}.ai1ec-col-lg-pull-4{right:33.3333333333%;}.ai1ec-col-lg-pull-3{right:25%;}.ai1ec-col-lg-pull-2{right:16.6666666667%;}.ai1ec-col-lg-pull-1{right:8.33333333333%;}.ai1ec-col-lg-pull-0{right:0%;}.ai1ec-col-lg-push-12{left:100%;}.ai1ec-col-lg-push-11{left:91.6666666667%;}.ai1ec-col-lg-push-10{left:83.3333333333%;}.ai1ec-col-lg-push-9{left:75%;}.ai1ec-col-lg-push-8{left:66.6666666667%;}.ai1ec-col-lg-push-7{left:58.3333333333%;}.ai1ec-col-lg-push-6{left:50%;}.ai1ec-col-lg-push-5{left:41.6666666667%;}.ai1ec-col-lg-push-4{left:33.3333333333%;}.ai1ec-col-lg-push-3{left:25%;}.ai1ec-col-lg-push-2{left:16.6666666667%;}.ai1ec-col-lg-push-1{left:8.33333333333%;}.ai1ec-col-lg-push-0{left:0%;}.ai1ec-col-lg-offset-12{margin-left:100%;}.ai1ec-col-lg-offset-11{margin-left:91.6666666667%;}.ai1ec-col-lg-offset-10{margin-left:83.3333333333%;}.ai1ec-col-lg-offset-9{margin-left:75%;}.ai1ec-col-lg-offset-8{margin-left:66.6666666667%;}.ai1ec-col-lg-offset-7{margin-left:58.3333333333%;}.ai1ec-col-lg-offset-6{margin-left:50%;}.ai1ec-col-lg-offset-5{margin-left:41.6666666667%;}.ai1ec-col-lg-offset-4{margin-left:33.3333333333%;}.ai1ec-col-lg-offset-3{margin-left:25%;}.ai1ec-col-lg-offset-2{margin-left:16.6666666667%;}.ai1ec-col-lg-offset-1{margin-left:8.33333333333%;}.ai1ec-col-lg-offset-0{margin-left:0%;}}.timely fieldset{padding:0;margin:0;border:0;}.timely legend{display:block;width:100%;padding:0;margin-bottom:18px;font-size:19.5px;line-height:inherit;color:#333;border:0;border-bottom:1px solid #e5e5e5;}.timely label{display:inline-block;margin-bottom:5px;font-weight:bold;}.timely input[type=\"search\"]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}.timely input[type=\"radio\"],.timely input[type=\"checkbox\"]{margin:4px 0 0;margin-top:1px \\9;line-height:normal;}.timely input[type=\"file\"]{display:block;}.timely select[multiple],.timely select[size]{height:auto;}.timely select optgroup{font-size:inherit;font-style:inherit;font-family:inherit;}.timely input[type=\"file\"]:focus,.timely input[type=\"radio\"]:focus,.timely input[type=\"checkbox\"]:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}.timely input[type=\"number\"]::-webkit-outer-spin-button,.timely input[type=\"number\"]::-webkit-inner-spin-button{height:auto;}.timely output{display:block;padding-top:7px;font-size:13px;line-height:1.428571429;color:#555;vertical-align:middle;}.timely .ai1ec-form-control{display:block;width:100%;height:32px;padding:6px 12px;font-size:13px;line-height:1.428571429;color:#555;vertical-align:middle;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);-webkit-transition:border-color ease-in-out .15s, box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s, box-shadow ease-in-out .15s;}.timely .ai1ec-form-control:focus{border-color:rgba(82,168,236,0.8);outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,0.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,0.6);}.timely .ai1ec-form-control:-moz-placeholder{color:#999;}.timely .ai1ec-form-control::-moz-placeholder{color:#999;opacity:1;}.timely .ai1ec-form-control:-ms-input-placeholder{color:#999;}.timely .ai1ec-form-control::-webkit-input-placeholder{color:#999;}.timely .ai1ec-form-control[disabled],.timely .ai1ec-form-control[readonly],fieldset[disabled] .timely .ai1ec-form-control{cursor:not-allowed;background-color:#eee;}textarea.timely .ai1ec-form-control{height:auto;}.timely .ai1ec-form-group{margin-bottom:15px;}.timely .ai1ec-radio,.timely .ai1ec-checkbox{display:block;min-height:18px;margin-top:10px;margin-bottom:10px;padding-left:20px;vertical-align:middle;}.timely .ai1ec-radio label,.timely .ai1ec-checkbox label{display:inline;margin-bottom:0;font-weight:normal;cursor:pointer;}.timely .ai1ec-radio input[type=\"radio\"],.timely .ai1ec-radio-inline input[type=\"radio\"],.timely .ai1ec-checkbox input[type=\"checkbox\"],.timely .ai1ec-checkbox-inline input[type=\"checkbox\"]{float:left;margin-left:-20px;}.timely .ai1ec-radio + .ai1ec-radio,.timely .ai1ec-checkbox + .ai1ec-checkbox{margin-top:-5px;}.timely .ai1ec-radio-inline,.timely .ai1ec-checkbox-inline{display:inline-block;padding-left:20px;margin-bottom:0;vertical-align:middle;font-weight:normal;cursor:pointer;}.timely .ai1ec-radio-inline + .ai1ec-radio-inline,.timely .ai1ec-checkbox-inline + .ai1ec-checkbox-inline{margin-top:0;margin-left:10px;}.timely input[type=\"radio\"][disabled],fieldset[disabled] .timely input[type=\"radio\"],.timely input[type=\"checkbox\"][disabled],fieldset[disabled] .timely input[type=\"checkbox\"],.timely .ai1ec-radio[disabled],fieldset[disabled] .timely .ai1ec-radio,.timely .ai1ec-radio-inline[disabled],fieldset[disabled] .timely .ai1ec-radio-inline,.timely .ai1ec-checkbox[disabled],fieldset[disabled] .timely .ai1ec-checkbox,.timely .ai1ec-checkbox-inline[disabled],fieldset[disabled] .timely .ai1ec-checkbox-inline{cursor:not-allowed;}.timely .ai1ec-input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}select.timely .ai1ec-input-sm{height:30px;line-height:30px;}textarea.timely .ai1ec-input-sm{height:auto;}.timely .ai1ec-input-lg{height:45px;padding:10px 16px;font-size:17px;line-height:1.33;border-radius:6px;}select.timely .ai1ec-input-lg{height:45px;line-height:45px;}textarea.timely .ai1ec-input-lg{height:auto;}.timely .ai1ec-has-warning .ai1ec-help-block,.timely .ai1ec-has-warning .ai1ec-control-label,.timely .ai1ec-has-warning .ai1ec-radio,.timely .ai1ec-has-warning .ai1ec-checkbox,.timely .ai1ec-has-warning .ai1ec-radio-inline,.timely .ai1ec-has-warning .ai1ec-checkbox-inline{color:#8a6d3b;}.timely .ai1ec-has-warning .ai1ec-form-control{border-color:#8a6d3b;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);}.timely .ai1ec-has-warning .ai1ec-form-control:focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #c0a16b;}.timely .ai1ec-has-warning .ai1ec-input-group-addon{color:#8a6d3b;border-color:#8a6d3b;background-color:#fcf8e3;}.timely .ai1ec-has-error .ai1ec-help-block,.timely .ai1ec-has-error .ai1ec-control-label,.timely .ai1ec-has-error .ai1ec-radio,.timely .ai1ec-has-error .ai1ec-checkbox,.timely .ai1ec-has-error .ai1ec-radio-inline,.timely .ai1ec-has-error .ai1ec-checkbox-inline{color:#a94442;}.timely .ai1ec-has-error .ai1ec-form-control{border-color:#a94442;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);}.timely .ai1ec-has-error .ai1ec-form-control:focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #ce8483;}.timely .ai1ec-has-error .ai1ec-input-group-addon{color:#a94442;border-color:#a94442;background-color:#f2dede;}.timely .ai1ec-has-success .ai1ec-help-block,.timely .ai1ec-has-success .ai1ec-control-label,.timely .ai1ec-has-success .ai1ec-radio,.timely .ai1ec-has-success .ai1ec-checkbox,.timely .ai1ec-has-success .ai1ec-radio-inline,.timely .ai1ec-has-success .ai1ec-checkbox-inline{color:#3c763d;}.timely .ai1ec-has-success .ai1ec-form-control{border-color:#3c763d;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);}.timely .ai1ec-has-success .ai1ec-form-control:focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0,0,0,0.075), 0 0 6px #67b168;}.timely .ai1ec-has-success .ai1ec-input-group-addon{color:#3c763d;border-color:#3c763d;background-color:#dff0d8;}.timely .ai1ec-form-control-static{margin-bottom:0;}.timely .ai1ec-help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373;}@media (min-width: 768px){.timely .ai1ec-form-inline .ai1ec-form-group{display:inline-block;margin-bottom:0;vertical-align:middle;}.timely .ai1ec-form-inline .ai1ec-form-control{display:inline-block;}.timely .ai1ec-form-inline select.ai1ec-form-control{width:auto;}.timely .ai1ec-form-inline .ai1ec-radio,.timely .ai1ec-form-inline .ai1ec-checkbox{display:inline-block;margin-top:0;margin-bottom:0;padding-left:0;}.timely .ai1ec-form-inline .ai1ec-radio input[type=\"radio\"],.timely .ai1ec-form-inline .ai1ec-checkbox input[type=\"checkbox\"]{float:none;margin-left:0;}}.timely .ai1ec-form-horizontal .ai1ec-control-label,.timely .ai1ec-form-horizontal .ai1ec-radio,.timely .ai1ec-form-horizontal .ai1ec-checkbox,.timely .ai1ec-form-horizontal .ai1ec-radio-inline,.timely .ai1ec-form-horizontal .ai1ec-checkbox-inline{margin-top:0;margin-bottom:0;padding-top:7px;}.timely .ai1ec-form-horizontal .ai1ec-radio,.timely .ai1ec-form-horizontal .ai1ec-checkbox{min-height:25px;}.timely .ai1ec-form-horizontal .ai1ec-form-group{margin-left:-15px;margin-right:-15px;}.timely .ai1ec-form-horizontal .ai1ec-form-group:before,.timely .ai1ec-form-horizontal .ai1ec-form-group:after{content:\" \";display:table;}.timely .ai1ec-form-horizontal .ai1ec-form-group:after{clear:both;}.timely .ai1ec-form-horizontal .ai1ec-form-group:before,.timely .ai1ec-form-horizontal .ai1ec-form-group:after{content:\" \";display:table;}.timely .ai1ec-form-horizontal .ai1ec-form-group:after{clear:both;}.timely .ai1ec-form-horizontal .ai1ec-form-control-static{padding-top:7px;}@media (min-width: 768px){.timely .ai1ec-form-horizontal .ai1ec-control-label{text-align:right;}}.timely .ai1ec-btn{display:inline-block;margin-bottom:0;font-weight:normal;text-align:center;vertical-align:middle;cursor:pointer;background-image:none;border:1px solid transparent;white-space:nowrap;padding:6px 12px;font-size:13px;line-height:1.428571429;border-radius:4px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;}.timely .ai1ec-btn:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px;}.timely .ai1ec-btn:hover,.timely .ai1ec-btn:focus{color:#333;text-decoration:none;}.timely .ai1ec-btn:active,.timely .ai1ec-btn.ai1ec-active{outline:0;background-image:none;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,0.125);box-shadow:inset 0 3px 5px rgba(0,0,0,0.125);}.timely .ai1ec-btn.ai1ec-disabled,.timely .ai1ec-btn[disabled],fieldset[disabled] .timely .ai1ec-btn{cursor:not-allowed;pointer-events:none;opacity:.65;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;}.timely .ai1ec-btn-default{color:#333;background-color:#fff;border-color:#ccc;}.timely .ai1ec-btn-default:hover,.timely .ai1ec-btn-default:focus,.timely .ai1ec-btn-default:active,.timely .ai1ec-btn-default.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-default{color:#333;background-color:#ebebeb;border-color:#adadad;}.timely .ai1ec-btn-default:active,.timely .ai1ec-btn-default.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-default{background-image:none;}.timely .ai1ec-btn-default.ai1ec-disabled,.timely .ai1ec-btn-default.ai1ec-disabled:hover,.timely .ai1ec-btn-default.ai1ec-disabled:focus,.timely .ai1ec-btn-default.ai1ec-disabled:active,.timely .ai1ec-btn-default.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-default[disabled],.timely .ai1ec-btn-default[disabled]:hover,.timely .ai1ec-btn-default[disabled]:focus,.timely .ai1ec-btn-default[disabled]:active,.timely .ai1ec-btn-default[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-default,fieldset[disabled] .timely .ai1ec-btn-default:hover,fieldset[disabled] .timely .ai1ec-btn-default:focus,fieldset[disabled] .timely .ai1ec-btn-default:active,fieldset[disabled] .timely .ai1ec-btn-default.ai1ec-active{background-color:#fff;border-color:#ccc;}.timely .ai1ec-btn-default .ai1ec-badge{color:#fff;background-color:#fff;}.timely .ai1ec-btn-primary{color:#fff;background-color:#6dbb4f;border-color:#61ad43;}.timely .ai1ec-btn-primary:hover,.timely .ai1ec-btn-primary:focus,.timely .ai1ec-btn-primary:active,.timely .ai1ec-btn-primary.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-primary{color:#fff;background-color:#5aa23f;border-color:#488132;}.timely .ai1ec-btn-primary:active,.timely .ai1ec-btn-primary.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-primary{background-image:none;}.timely .ai1ec-btn-primary.ai1ec-disabled,.timely .ai1ec-btn-primary.ai1ec-disabled:hover,.timely .ai1ec-btn-primary.ai1ec-disabled:focus,.timely .ai1ec-btn-primary.ai1ec-disabled:active,.timely .ai1ec-btn-primary.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-primary[disabled],.timely .ai1ec-btn-primary[disabled]:hover,.timely .ai1ec-btn-primary[disabled]:focus,.timely .ai1ec-btn-primary[disabled]:active,.timely .ai1ec-btn-primary[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-primary,fieldset[disabled] .timely .ai1ec-btn-primary:hover,fieldset[disabled] .timely .ai1ec-btn-primary:focus,fieldset[disabled] .timely .ai1ec-btn-primary:active,fieldset[disabled] .timely .ai1ec-btn-primary.ai1ec-active{background-color:#6dbb4f;border-color:#61ad43;}.timely .ai1ec-btn-primary .ai1ec-badge{color:#6dbb4f;background-color:#fff;}.timely .ai1ec-btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236;}.timely .ai1ec-btn-warning:hover,.timely .ai1ec-btn-warning:focus,.timely .ai1ec-btn-warning:active,.timely .ai1ec-btn-warning.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-warning{color:#fff;background-color:#ed9c28;border-color:#d58512;}.timely .ai1ec-btn-warning:active,.timely .ai1ec-btn-warning.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-warning{background-image:none;}.timely .ai1ec-btn-warning.ai1ec-disabled,.timely .ai1ec-btn-warning.ai1ec-disabled:hover,.timely .ai1ec-btn-warning.ai1ec-disabled:focus,.timely .ai1ec-btn-warning.ai1ec-disabled:active,.timely .ai1ec-btn-warning.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-warning[disabled],.timely .ai1ec-btn-warning[disabled]:hover,.timely .ai1ec-btn-warning[disabled]:focus,.timely .ai1ec-btn-warning[disabled]:active,.timely .ai1ec-btn-warning[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-warning,fieldset[disabled] .timely .ai1ec-btn-warning:hover,fieldset[disabled] .timely .ai1ec-btn-warning:focus,fieldset[disabled] .timely .ai1ec-btn-warning:active,fieldset[disabled] .timely .ai1ec-btn-warning.ai1ec-active{background-color:#f0ad4e;border-color:#eea236;}.timely .ai1ec-btn-warning .ai1ec-badge{color:#f0ad4e;background-color:#fff;}.timely .ai1ec-btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a;}.timely .ai1ec-btn-danger:hover,.timely .ai1ec-btn-danger:focus,.timely .ai1ec-btn-danger:active,.timely .ai1ec-btn-danger.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-danger{color:#fff;background-color:#d2322d;border-color:#ac2925;}.timely .ai1ec-btn-danger:active,.timely .ai1ec-btn-danger.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-danger{background-image:none;}.timely .ai1ec-btn-danger.ai1ec-disabled,.timely .ai1ec-btn-danger.ai1ec-disabled:hover,.timely .ai1ec-btn-danger.ai1ec-disabled:focus,.timely .ai1ec-btn-danger.ai1ec-disabled:active,.timely .ai1ec-btn-danger.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-danger[disabled],.timely .ai1ec-btn-danger[disabled]:hover,.timely .ai1ec-btn-danger[disabled]:focus,.timely .ai1ec-btn-danger[disabled]:active,.timely .ai1ec-btn-danger[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-danger,fieldset[disabled] .timely .ai1ec-btn-danger:hover,fieldset[disabled] .timely .ai1ec-btn-danger:focus,fieldset[disabled] .timely .ai1ec-btn-danger:active,fieldset[disabled] .timely .ai1ec-btn-danger.ai1ec-active{background-color:#d9534f;border-color:#d43f3a;}.timely .ai1ec-btn-danger .ai1ec-badge{color:#d9534f;background-color:#fff;}.timely .ai1ec-btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c;}.timely .ai1ec-btn-success:hover,.timely .ai1ec-btn-success:focus,.timely .ai1ec-btn-success:active,.timely .ai1ec-btn-success.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-success{color:#fff;background-color:#47a447;border-color:#398439;}.timely .ai1ec-btn-success:active,.timely .ai1ec-btn-success.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-success{background-image:none;}.timely .ai1ec-btn-success.ai1ec-disabled,.timely .ai1ec-btn-success.ai1ec-disabled:hover,.timely .ai1ec-btn-success.ai1ec-disabled:focus,.timely .ai1ec-btn-success.ai1ec-disabled:active,.timely .ai1ec-btn-success.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-success[disabled],.timely .ai1ec-btn-success[disabled]:hover,.timely .ai1ec-btn-success[disabled]:focus,.timely .ai1ec-btn-success[disabled]:active,.timely .ai1ec-btn-success[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-success,fieldset[disabled] .timely .ai1ec-btn-success:hover,fieldset[disabled] .timely .ai1ec-btn-success:focus,fieldset[disabled] .timely .ai1ec-btn-success:active,fieldset[disabled] .timely .ai1ec-btn-success.ai1ec-active{background-color:#5cb85c;border-color:#4cae4c;}.timely .ai1ec-btn-success .ai1ec-badge{color:#5cb85c;background-color:#fff;}.timely .ai1ec-btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da;}.timely .ai1ec-btn-info:hover,.timely .ai1ec-btn-info:focus,.timely .ai1ec-btn-info:active,.timely .ai1ec-btn-info.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-info{color:#fff;background-color:#39b3d7;border-color:#269abc;}.timely .ai1ec-btn-info:active,.timely .ai1ec-btn-info.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.timely .ai1ec-btn-info{background-image:none;}.timely .ai1ec-btn-info.ai1ec-disabled,.timely .ai1ec-btn-info.ai1ec-disabled:hover,.timely .ai1ec-btn-info.ai1ec-disabled:focus,.timely .ai1ec-btn-info.ai1ec-disabled:active,.timely .ai1ec-btn-info.ai1ec-disabled.ai1ec-active,.timely .ai1ec-btn-info[disabled],.timely .ai1ec-btn-info[disabled]:hover,.timely .ai1ec-btn-info[disabled]:focus,.timely .ai1ec-btn-info[disabled]:active,.timely .ai1ec-btn-info[disabled].ai1ec-active,fieldset[disabled] .timely .ai1ec-btn-info,fieldset[disabled] .timely .ai1ec-btn-info:hover,fieldset[disabled] .timely .ai1ec-btn-info:focus,fieldset[disabled] .timely .ai1ec-btn-info:active,fieldset[disabled] .timely .ai1ec-btn-info.ai1ec-active{background-color:#5bc0de;border-color:#46b8da;}.timely .ai1ec-btn-info .ai1ec-badge{color:#5bc0de;background-color:#fff;}.timely .ai1ec-btn-inactive{cursor:default;opacity:.65;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;}.timely .ai1ec-btn-link{color:#3d6b99;font-weight:normal;cursor:pointer;border-radius:0;}.timely .ai1ec-btn-link,.timely .ai1ec-btn-link:active,.timely .ai1ec-btn-link[disabled],fieldset[disabled] .timely .ai1ec-btn-link{background-color:transparent;-webkit-box-shadow:none;box-shadow:none;}.timely .ai1ec-btn-link,.timely .ai1ec-btn-link:hover,.timely .ai1ec-btn-link:focus,.timely .ai1ec-btn-link:active{border-color:transparent;}.timely .ai1ec-btn-link:hover,.timely .ai1ec-btn-link:focus{color:#335980;text-decoration:underline;background-color:transparent;}.timely .ai1ec-btn-link[disabled]:hover,.timely .ai1ec-btn-link[disabled]:focus,fieldset[disabled] .timely .ai1ec-btn-link:hover,fieldset[disabled] .timely .ai1ec-btn-link:focus{color:#999;text-decoration:none;}.timely .ai1ec-btn-lg{padding:10px 16px;font-size:17px;line-height:1.33;border-radius:6px;}.timely .ai1ec-btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}.timely .ai1ec-btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px;}.timely .ai1ec-btn-block{display:block;width:100%;padding-left:0;padding-right:0;}.timely .ai1ec-btn-block + .ai1ec-btn-block{margin-top:5px;}.timely input[type=\"submit\"].ai1ec-btn-block,.timely input[type=\"reset\"].ai1ec-btn-block,.timely input[type=\"button\"].ai1ec-btn-block{width:100%;}.timely h1,.timely h2,.timely h3,.timely h4,.timely h5,.timely h6,.timely .ai1ec-h1,.timely .ai1ec-h2,.timely .ai1ec-h3,.timely .ai1ec-h4,.timely .ai1ec-h5,.timely .ai1ec-h6{font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;font-weight:500;line-height:1.1;color:;}.timely h1 small,.timely h1 .ai1ec-small,.timely h2 small,.timely h2 .ai1ec-small,.timely h3 small,.timely h3 .ai1ec-small,.timely h4 small,.timely h4 .ai1ec-small,.timely h5 small,.timely h5 .ai1ec-small,.timely h6 small,.timely h6 .ai1ec-small,.timely .ai1ec-h1 small,.timely .ai1ec-h1 .ai1ec-small,.timely .ai1ec-h2 small,.timely .ai1ec-h2 .ai1ec-small,.timely .ai1ec-h3 small,.timely .ai1ec-h3 .ai1ec-small,.timely .ai1ec-h4 small,.timely .ai1ec-h4 .ai1ec-small,.timely .ai1ec-h5 small,.timely .ai1ec-h5 .ai1ec-small,.timely .ai1ec-h6 small,.timely .ai1ec-h6 .ai1ec-small{font-weight:normal;line-height:1;color:#999;}.timely h1,.timely h2,.timely h3{margin-top:18px;margin-bottom:9px;}.timely h1 small,.timely h1 .ai1ec-small,.timely h2 small,.timely h2 .ai1ec-small,.timely h3 small,.timely h3 .ai1ec-small{font-size:65%;}.timely h4,.timely h5,.timely h6{margin-top:9px;margin-bottom:9px;}.timely h4 small,.timely h4 .ai1ec-small,.timely h5 small,.timely h5 .ai1ec-small,.timely h6 small,.timely h6 .ai1ec-small{font-size:75%;}.timely h1,.timely .ai1ec-h1{font-size:33px;}.timely h2,.timely .ai1ec-h2{font-size:27px;}.timely h3,.timely .ai1ec-h3{font-size:23px;}.timely h4,.timely .ai1ec-h4{font-size:17px;}.timely h5,.timely .ai1ec-h5{font-size:13px;}.timely h6,.timely .ai1ec-h6{font-size:12px;}.timely p{margin:0 0 9px;}.timely .ai1ec-lead{margin-bottom:18px;font-size:14px;font-weight:200;line-height:1.4;}@media (min-width: 768px){.timely .ai1ec-lead{font-size:19.5px;}}.timely small,.timely .ai1ec-small{font-size:85%;}.timely cite{font-style:normal;}.timely .ai1ec-text-muted{color:#858585;}.timely .ai1ec-text-primary{color:#6dbb4f;}.timely .ai1ec-text-primary:hover{color:#569b3c;}.timely .ai1ec-text-warning{color:#8a6d3b;}.timely .ai1ec-text-warning:hover{color:#66512c;}.timely .ai1ec-text-danger{color:#a94442;}.timely .ai1ec-text-danger:hover{color:#843534;}.timely .ai1ec-text-success{color:#3c763d;}.timely .ai1ec-text-success:hover{color:#2b542c;}.timely .ai1ec-text-info{color:#418cc7;}.timely .ai1ec-text-info:hover{color:#3071a5;}.timely .ai1ec-text-left{text-align:left;}.timely .ai1ec-text-right{text-align:right;}.timely .ai1ec-text-center{text-align:center;}.timely .ai1ec-page-header{padding-bottom:8px;margin:36px 0 18px;border-bottom:1px solid #eee;}.timely ul,.timely ol{margin-top:0;margin-bottom:9px;}.timely ul ul,.timely ul ol,.timely ol ul,.timely ol ol{margin-bottom:0;}.timely .ai1ec-list-unstyled{padding-left:0;list-style:none;}.timely .ai1ec-list-inline{padding-left:0;list-style:none;}.timely .ai1ec-list-inline > li{display:inline-block;padding-left:5px;padding-right:5px;}.timely .ai1ec-list-inline > li:first-child{padding-left:0;}.timely dl{margin-top:0;margin-bottom:18px;}.timely dt,.timely dd{line-height:1.428571429;}.timely dt{font-weight:bold;}.timely dd{margin-left:0;}@media (min-width: 768px){.timely .ai1ec-dl-horizontal dt{float:left;width:160px;clear:left;text-align:right;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}.timely .ai1ec-dl-horizontal dd{margin-left:180px;}.timely .ai1ec-dl-horizontal dd:before,.timely .ai1ec-dl-horizontal dd:after{content:\" \";display:table;}.timely .ai1ec-dl-horizontal dd:after{clear:both;}.timely .ai1ec-dl-horizontal dd:before,.timely .ai1ec-dl-horizontal dd:after{content:\" \";display:table;}.timely .ai1ec-dl-horizontal dd:after{clear:both;}}.timely abbr[title],.timely abbr[data-original-title]{cursor:help;border-bottom:1px dotted #999;}.timely .ai1ec-initialism{font-size:90%;text-transform:uppercase;}.timely blockquote{padding:9px 18px;margin:0 0 18px;border-left:5px solid #eee;}.timely blockquote p{font-size:16.25px;font-weight:300;line-height:1.25;}.timely blockquote p:last-child{margin-bottom:0;}.timely blockquote small,.timely blockquote .ai1ec-small{display:block;line-height:1.428571429;color:#999;}.timely blockquote small:before,.timely blockquote .ai1ec-small:before{content:\'\\2014 \\00A0\';}.timely blockquote.ai1ec-pull-right{padding-right:15px;padding-left:0;border-right:5px solid #eee;border-left:0;}.timely blockquote.ai1ec-pull-right p,.timely blockquote.ai1ec-pull-right small,.timely blockquote.ai1ec-pull-right .ai1ec-small{text-align:right;}.timely blockquote.ai1ec-pull-right small:before,.timely blockquote.ai1ec-pull-right .ai1ec-small:before{content:\'\';}.timely blockquote.ai1ec-pull-right small:after,.timely blockquote.ai1ec-pull-right .ai1ec-small:after{content:\'\\00A0 \\2014\';}.timely blockquote:before,.timely blockquote:after{content:\"\";}.timely address{margin-bottom:18px;font-style:normal;line-height:1.428571429;}.ai1ec-fade{opacity:0;-webkit-transition:opacity .15s linear;transition:opacity .15s linear;}.ai1ec-fade.ai1ec-in{opacity:1;}.ai1ec-collapse{display:none;}.ai1ec-collapse.ai1ec-in{display:block;}.ai1ec-collapsing{position:relative;height:0;overflow:hidden;-webkit-transition:height .35s ease;transition:height .35s ease;}.ai1ec-caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px solid;border-right:4px solid transparent;border-left:4px solid transparent;}.ai1ec-dropdown{position:relative;}.ai1ec-dropdown-toggle:focus{outline:0;}.ai1ec-dropdown-menu{position:absolute;top:100%;left:0;z-index:10000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;list-style:none;font-size:13px;background-color:#fff;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.15);border-radius:4px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,0.175);box-shadow:0 6px 12px rgba(0,0,0,0.175);background-clip:padding-box;}.ai1ec-dropdown-menu.ai1ec-pull-right{right:0;left:auto;}.ai1ec-dropdown-menu .ai1ec-divider{height:1px;margin:8px 0;overflow:hidden;background-color:#e5e5e5;}.ai1ec-dropdown-menu > li > a{display:block;padding:3px 20px;clear:both;font-weight:normal;line-height:1.428571429;color:#333;white-space:nowrap;}.ai1ec-dropdown-menu > li > a:hover,.ai1ec-dropdown-menu > li > a:focus{text-decoration:none;color:#262626;background-color:#f5f5f5;}.ai1ec-dropdown-menu > .ai1ec-active > a,.ai1ec-dropdown-menu > .ai1ec-active > a:hover,.ai1ec-dropdown-menu > .ai1ec-active > a:focus{color:#fff;text-decoration:none;outline:0;background-color:#6489ad;}.ai1ec-dropdown-menu > .ai1ec-disabled > a,.ai1ec-dropdown-menu > .ai1ec-disabled > a:hover,.ai1ec-dropdown-menu > .ai1ec-disabled > a:focus{color:#999;}.ai1ec-dropdown-menu > .ai1ec-disabled > a:hover,.ai1ec-dropdown-menu > .ai1ec-disabled > a:focus{text-decoration:none;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled = false);cursor:not-allowed;}.ai1ec-open > .ai1ec-dropdown-menu{display:block;}.ai1ec-open > a{outline:0;}.ai1ec-dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.428571429;color:#999;}.ai1ec-dropdown-backdrop{position:fixed;left:0;right:0;bottom:0;top:0;z-index:9990;}.ai1ec-pull-right > .ai1ec-dropdown-menu{right:0;left:auto;}.ai1ec-dropup .ai1ec-caret,.ai1ec-navbar-fixed-bottom .ai1ec-dropdown .ai1ec-caret{border-top:0;border-bottom:4px solid;content:\"\";}.ai1ec-dropup .ai1ec-dropdown-menu,.ai1ec-navbar-fixed-bottom .ai1ec-dropdown .ai1ec-dropdown-menu{top:auto;bottom:100%;margin-bottom:1px;}.ai1ec-btn-group,.ai1ec-btn-group-vertical{position:relative;display:inline-block;vertical-align:middle;}.ai1ec-btn-group > .ai1ec-btn,.ai1ec-btn-group-vertical > .ai1ec-btn{position:relative;float:left;}.ai1ec-btn-group > .ai1ec-btn:hover,.ai1ec-btn-group > .ai1ec-btn:focus,.ai1ec-btn-group > .ai1ec-btn:active,.ai1ec-btn-group > .ai1ec-btn.ai1ec-active,.ai1ec-btn-group-vertical > .ai1ec-btn:hover,.ai1ec-btn-group-vertical > .ai1ec-btn:focus,.ai1ec-btn-group-vertical > .ai1ec-btn:active,.ai1ec-btn-group-vertical > .ai1ec-btn.ai1ec-active{z-index:2;}.ai1ec-btn-group > .ai1ec-btn:focus,.ai1ec-btn-group-vertical > .ai1ec-btn:focus{outline:none;}.ai1ec-btn-group .ai1ec-btn + .ai1ec-btn,.ai1ec-btn-group .ai1ec-btn + .ai1ec-btn-group,.ai1ec-btn-group .ai1ec-btn-group + .ai1ec-btn,.ai1ec-btn-group .ai1ec-btn-group + .ai1ec-btn-group{margin-left:-1px;}.ai1ec-btn-toolbar:before,.ai1ec-btn-toolbar:after{content:\" \";display:table;}.ai1ec-btn-toolbar:after{clear:both;}.ai1ec-btn-toolbar:before,.ai1ec-btn-toolbar:after{content:\" \";display:table;}.ai1ec-btn-toolbar:after{clear:both;}.ai1ec-btn-toolbar .ai1ec-btn-group{float:left;}.ai1ec-btn-toolbar > .ai1ec-btn + .ai1ec-btn,.ai1ec-btn-toolbar > .ai1ec-btn + .ai1ec-btn-group,.ai1ec-btn-toolbar > .ai1ec-btn-group + .ai1ec-btn,.ai1ec-btn-toolbar > .ai1ec-btn-group + .ai1ec-btn-group{margin-left:5px;}.ai1ec-btn-group > .ai1ec-btn:not(:first-child):not(:last-child):not(.ai1ec-dropdown-toggle){border-radius:0;}.ai1ec-btn-group > .ai1ec-btn:first-child{margin-left:0;}.ai1ec-btn-group > .ai1ec-btn:first-child:not(:last-child):not(.ai1ec-dropdown-toggle){border-bottom-right-radius:0;border-top-right-radius:0;}.ai1ec-btn-group > .ai1ec-btn:last-child:not(:first-child),.ai1ec-btn-group > .ai1ec-dropdown-toggle:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;}.ai1ec-btn-group > .ai1ec-btn-group{float:left;}.ai1ec-btn-group > .ai1ec-btn-group:not(:first-child):not(:last-child) > .ai1ec-btn{border-radius:0;}.ai1ec-btn-group > .ai1ec-btn-group:first-child > .ai1ec-btn:last-child,.ai1ec-btn-group > .ai1ec-btn-group:first-child > .ai1ec-dropdown-toggle{border-bottom-right-radius:0;border-top-right-radius:0;}.ai1ec-btn-group > .ai1ec-btn-group:last-child > .ai1ec-btn:first-child{border-bottom-left-radius:0;border-top-left-radius:0;}.ai1ec-btn-group .ai1ec-dropdown-toggle:active,.ai1ec-btn-group.ai1ec-open .ai1ec-dropdown-toggle{outline:0;}.ai1ec-btn-group-xs > .ai1ec-btn{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px;}.ai1ec-btn-group-sm > .ai1ec-btn{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px;}.ai1ec-btn-group-lg > .ai1ec-btn{padding:10px 16px;font-size:17px;line-height:1.33;border-radius:6px;}.ai1ec-btn-group > .ai1ec-btn + .ai1ec-dropdown-toggle{padding-left:8px;padding-right:8px;}.ai1ec-btn-group > .ai1ec-btn-lg + .ai1ec-dropdown-toggle{padding-left:12px;padding-right:12px;}.ai1ec-btn-group.ai1ec-open .ai1ec-dropdown-toggle{-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,0.125);box-shadow:inset 0 3px 5px rgba(0,0,0,0.125);}.ai1ec-btn-group.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-btn-link{-webkit-box-shadow:none;box-shadow:none;}.ai1ec-btn .ai1ec-caret{margin-left:0;}.ai1ec-btn-lg .ai1ec-caret{border-width:5px 5px 0;border-bottom-width:0;}.ai1ec-dropup .ai1ec-btn-lg .ai1ec-caret{border-width:0 5px 5px;}.ai1ec-btn-group-vertical > .ai1ec-btn,.ai1ec-btn-group-vertical > .ai1ec-btn-group,.ai1ec-btn-group-vertical > .ai1ec-btn-group > .ai1ec-btn{display:block;float:none;width:100%;max-width:100%;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:before,.ai1ec-btn-group-vertical > .ai1ec-btn-group:after{content:\" \";display:table;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:after{clear:both;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:before,.ai1ec-btn-group-vertical > .ai1ec-btn-group:after{content:\" \";display:table;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:after{clear:both;}.ai1ec-btn-group-vertical > .ai1ec-btn-group > .ai1ec-btn{float:none;}.ai1ec-btn-group-vertical > .ai1ec-btn + .ai1ec-btn,.ai1ec-btn-group-vertical > .ai1ec-btn + .ai1ec-btn-group,.ai1ec-btn-group-vertical > .ai1ec-btn-group + .ai1ec-btn,.ai1ec-btn-group-vertical > .ai1ec-btn-group + .ai1ec-btn-group{margin-top:-1px;margin-left:0;}.ai1ec-btn-group-vertical > .ai1ec-btn:not(:first-child):not(:last-child){border-radius:0;}.ai1ec-btn-group-vertical > .ai1ec-btn:first-child:not(:last-child){border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0;}.ai1ec-btn-group-vertical > .ai1ec-btn:last-child:not(:first-child){border-bottom-left-radius:4px;border-top-right-radius:0;border-top-left-radius:0;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:not(:first-child):not(:last-child) > .ai1ec-btn{border-radius:0;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:first-child > .ai1ec-btn:last-child,.ai1ec-btn-group-vertical > .ai1ec-btn-group:first-child > .ai1ec-dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0;}.ai1ec-btn-group-vertical > .ai1ec-btn-group:last-child > .ai1ec-btn:first-child{border-top-right-radius:0;border-top-left-radius:0;}.ai1ec-btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate;}.ai1ec-btn-group-justified > .ai1ec-btn,.ai1ec-btn-group-justified > .ai1ec-btn-group{float:none;display:table-cell;width:1%;}.ai1ec-btn-group-justified > .ai1ec-btn-group .ai1ec-btn{width:100%;}[data-toggle=\"buttons\"] > .ai1ec-btn > input[type=\"radio\"],[data-toggle=\"buttons\"] > .ai1ec-btn > input[type=\"checkbox\"]{display:none;}.timely .ai1ec-nav{margin-bottom:0;padding-left:0;list-style:none;}.timely .ai1ec-nav:before,.timely .ai1ec-nav:after{content:\" \";display:table;}.timely .ai1ec-nav:after{clear:both;}.timely .ai1ec-nav:before,.timely .ai1ec-nav:after{content:\" \";display:table;}.timely .ai1ec-nav:after{clear:both;}.timely .ai1ec-nav > li{position:relative;display:block;}.timely .ai1ec-nav > li > a{position:relative;display:block;padding:10px 15px;}.timely .ai1ec-nav > li > a:hover,.timely .ai1ec-nav > li > a:focus{text-decoration:none;background-color:#eee;}.timely .ai1ec-nav > li.ai1ec-disabled > a{color:#999;}.timely .ai1ec-nav > li.ai1ec-disabled > a:hover,.timely .ai1ec-nav > li.ai1ec-disabled > a:focus{color:#999;text-decoration:none;background-color:transparent;cursor:not-allowed;}.timely .ai1ec-nav .ai1ec-open > a,.timely .ai1ec-nav .ai1ec-open > a:hover,.timely .ai1ec-nav .ai1ec-open > a:focus{background-color:#eee;border-color:#3d6b99;}.timely .ai1ec-nav .ai1ec-nav-divider{height:1px;margin:8px 0;overflow:hidden;background-color:#e5e5e5;}.timely .ai1ec-nav > li > a > img{max-width:none;}.timely .ai1ec-nav-tabs{border-bottom:1px solid #ddd;}.timely .ai1ec-nav-tabs > li{float:left;margin-bottom:-1px;}.timely .ai1ec-nav-tabs > li > a{margin-right:2px;line-height:1.428571429;border:1px solid transparent;border-radius:4px 4px 0 0;}.timely .ai1ec-nav-tabs > li > a:hover{border-color:#eee #eee #ddd;}.timely .ai1ec-nav-tabs > li.ai1ec-active > a,.timely .ai1ec-nav-tabs > li.ai1ec-active > a:hover,.timely .ai1ec-nav-tabs > li.ai1ec-active > a:focus{color:#555;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent;cursor:default;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified{width:100%;border-bottom:0;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li{float:none;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li > a{text-align:center;margin-bottom:5px;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-dropdown .ai1ec-dropdown-menu{top:auto;left:auto;}@media (min-width: 768px){.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li{display:table-cell;width:1%;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li > a{margin-bottom:0;}}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li > a{margin-right:0;border-radius:4px;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a,.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a:hover,.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a:focus{border:1px solid #ddd;}@media (min-width: 768px){.timely .ai1ec-nav-tabs.ai1ec-nav-justified > li > a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0;}.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a,.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a:hover,.timely .ai1ec-nav-tabs.ai1ec-nav-justified > .ai1ec-active > a:focus{border-bottom-color:#fff;}}.timely .ai1ec-nav-pills > li{float:left;}.timely .ai1ec-nav-pills > li > a{border-radius:4px;}.timely .ai1ec-nav-pills > li + li{margin-left:2px;}.timely .ai1ec-nav-pills > li.ai1ec-active > a,.timely .ai1ec-nav-pills > li.ai1ec-active > a:hover,.timely .ai1ec-nav-pills > li.ai1ec-active > a:focus{color:#fff;background-color:#6dbb4f;}.timely .ai1ec-nav-stacked > li{float:none;}.timely .ai1ec-nav-stacked > li + li{margin-top:2px;margin-left:0;}.timely .ai1ec-nav-justified{width:100%;}.timely .ai1ec-nav-justified > li{float:none;}.timely .ai1ec-nav-justified > li > a{text-align:center;margin-bottom:5px;}.timely .ai1ec-nav-justified > .ai1ec-dropdown .ai1ec-dropdown-menu{top:auto;left:auto;}@media (min-width: 768px){.timely .ai1ec-nav-justified > li{display:table-cell;width:1%;}.timely .ai1ec-nav-justified > li > a{margin-bottom:0;}}.timely .ai1ec-nav-tabs-justified{border-bottom:0;}.timely .ai1ec-nav-tabs-justified > li > a{margin-right:0;border-radius:4px;}.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a,.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a:hover,.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a:focus{border:1px solid #ddd;}@media (min-width: 768px){.timely .ai1ec-nav-tabs-justified > li > a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0;}.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a,.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a:hover,.timely .ai1ec-nav-tabs-justified > .ai1ec-active > a:focus{border-bottom-color:#fff;}}.timely .ai1ec-tab-content > .ai1ec-tab-pane{display:none;}.timely .ai1ec-tab-content > .ai1ec-active{display:block;}.timely .ai1ec-nav-tabs .ai1ec-dropdown-menu{margin-top:-1px;border-top-right-radius:0;border-top-left-radius:0;}.ai1ec-thumbnail{display:block;padding:4px;margin-bottom:18px;line-height:1.428571429;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;}.ai1ec-thumbnail > img,.ai1ec-thumbnail a > img{display:block;max-width:100%;height:auto;margin-left:auto;margin-right:auto;}a.ai1ec-thumbnail:hover,a.ai1ec-thumbnail:focus,a.ai1ec-thumbnail.ai1ec-active{border-color:#3d6b99;}.ai1ec-thumbnail .ai1ec-caption{padding:9px;color:#333;}.ai1ec-alert{padding:15px;margin-bottom:18px;border:1px solid transparent;border-radius:4px;}.ai1ec-alert h4{margin-top:0;color:inherit;}.ai1ec-alert .ai1ec-alert-link{font-weight:bold;}.ai1ec-alert > p,.ai1ec-alert > ul{margin-bottom:0;}.ai1ec-alert > p + p{margin-top:5px;}.ai1ec-alert-dismissable{padding-right:35px;}.ai1ec-alert-dismissable .ai1ec-close{position:relative;top:-2px;right:-21px;color:inherit;}.ai1ec-alert-success{background-color:#dff0d8;border-color:#d6e9c6;color:#3c763d;}.ai1ec-alert-success hr{border-top-color:#c9e2b3;}.ai1ec-alert-success .ai1ec-alert-link{color:#2b542c;}.ai1ec-alert-info{background-color:#d9edf7;border-color:#bce8f1;color:#418cc7;}.ai1ec-alert-info hr{border-top-color:#a6e1ec;}.ai1ec-alert-info .ai1ec-alert-link{color:#3071a5;}.ai1ec-alert-warning{background-color:#fcf8e3;border-color:#faebcc;color:#8a6d3b;}.ai1ec-alert-warning hr{border-top-color:#f7e1b5;}.ai1ec-alert-warning .ai1ec-alert-link{color:#66512c;}.ai1ec-alert-danger{background-color:#f2dede;border-color:#ebccd1;color:#a94442;font-size:13px;font-family:sans-serif;line-height:1.8;}.ai1ec-alert-danger hr{border-top-color:#e4b9c0;}.ai1ec-alert-danger .ai1ec-alert-link{color:#843534;}.ai1ec-alert-danger a{line-height:1.8;text-decoration:underline !important;}.ai1ec-well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);box-shadow:inset 0 1px 1px rgba(0,0,0,0.05);}.ai1ec-well blockquote{border-color:#ddd;border-color:rgba(0,0,0,0.15);}.ai1ec-well-lg{padding:24px;border-radius:6px;}.ai1ec-well-sm{padding:9px;border-radius:3px;}.timely .ai1ec-close{float:right;font-size:19.5px;font-weight:bold;line-height:1;color:#333;text-shadow:0 1px 0 #fff;opacity:.2;filter:alpha(opacity=20);}.timely .ai1ec-close:hover,.timely .ai1ec-close:focus{color:#333;text-decoration:none;cursor:pointer;opacity:.5;filter:alpha(opacity=50);}button.timely .ai1ec-close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;}.ai1ec-modal-open{overflow:hidden;}.ai1ec-modal{display:none;overflow:auto;overflow-y:scroll;position:fixed;top:0;right:0;bottom:0;left:0;z-index:10040;}.ai1ec-modal.ai1ec-fade .ai1ec-modal-dialog{-webkit-transform:translate(0,-25%);-ms-transform:translate(0,-25%);transform:translate(0,-25%);-webkit-transition:-webkit-transform 0.3s ease-out;-moz-transition:-moz-transform 0.3s ease-out;-o-transition:-o-transform 0.3s ease-out;transition:transform 0.3s ease-out;}.ai1ec-modal.ai1ec-in .ai1ec-modal-dialog{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);}.ai1ec-modal-dialog{position:relative;width:auto;margin:10px;z-index:10050;}.ai1ec-modal-content{position:relative;background-color:#fff;border:1px solid #999;border:1px solid #c2c2c2;border-radius:6px;-webkit-box-shadow:0 3px 9px rgba(0,0,0,0.5);box-shadow:0 3px 9px rgba(0,0,0,0.5);background-clip:padding-box;outline:none;}.ai1ec-modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:10030;background-color:#fff;}.ai1ec-modal-backdrop.ai1ec-fade{opacity:0;filter:alpha(opacity=0);}.ai1ec-modal-backdrop.ai1ec-in{opacity:.5;filter:alpha(opacity=50);}.ai1ec-modal-header{padding:15px;border-bottom:1px solid #c2c2c2;min-height:16.428571429px;}.ai1ec-modal-header .ai1ec-close{margin-top:-2px;}.ai1ec-modal-title{margin:0;line-height:1.428571429;}.ai1ec-modal-body{position:relative;padding:20px;}.ai1ec-modal-footer{margin-top:15px;padding:19px 20px 20px;text-align:right;border-top:1px solid #c2c2c2;}.ai1ec-modal-footer:before,.ai1ec-modal-footer:after{content:\" \";display:table;}.ai1ec-modal-footer:after{clear:both;}.ai1ec-modal-footer:before,.ai1ec-modal-footer:after{content:\" \";display:table;}.ai1ec-modal-footer:after{clear:both;}.ai1ec-modal-footer .ai1ec-btn + .ai1ec-btn{margin-left:5px;margin-bottom:0;}.ai1ec-modal-footer .ai1ec-btn-group .ai1ec-btn + .ai1ec-btn{margin-left:-1px;}.ai1ec-modal-footer .ai1ec-btn-block + .ai1ec-btn-block{margin-left:0;}@media screen and (min-width: 768px){.ai1ec-modal-dialog{width:600px;margin:30px auto;}.ai1ec-modal-content{-webkit-box-shadow:0 5px 15px rgba(0,0,0,0.5);box-shadow:0 5px 15px rgba(0,0,0,0.5);}}.ai1ec-tooltip{position:absolute;z-index:10035;display:block;visibility:visible;font-size:12px;line-height:1.4;opacity:0;filter:alpha(opacity=0);}.ai1ec-tooltip.ai1ec-in{opacity:.9;filter:alpha(opacity=90);}.ai1ec-tooltip.ai1ec-top{margin-top:-3px;padding:5px 0;}.ai1ec-tooltip.ai1ec-right{margin-left:3px;padding:0 5px;}.ai1ec-tooltip.ai1ec-bottom{margin-top:3px;padding:5px 0;}.ai1ec-tooltip.ai1ec-left{margin-left:-3px;padding:0 5px;}.ai1ec-tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;text-decoration:none;background-color:#000;border-radius:4px;}.ai1ec-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid;}.ai1ec-tooltip.ai1ec-top .ai1ec-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000;}.ai1ec-tooltip.ai1ec-top-left .ai1ec-tooltip-arrow{bottom:0;left:5px;border-width:5px 5px 0;border-top-color:#000;}.ai1ec-tooltip.ai1ec-top-right .ai1ec-tooltip-arrow{bottom:0;right:5px;border-width:5px 5px 0;border-top-color:#000;}.ai1ec-tooltip.ai1ec-right .ai1ec-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000;}.ai1ec-tooltip.ai1ec-left .ai1ec-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000;}.ai1ec-tooltip.ai1ec-bottom .ai1ec-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000;}.ai1ec-tooltip.ai1ec-bottom-left .ai1ec-tooltip-arrow{top:0;left:5px;border-width:0 5px 5px;border-bottom-color:#000;}.ai1ec-tooltip.ai1ec-bottom-right .ai1ec-tooltip-arrow{top:0;right:5px;border-width:0 5px 5px;border-bottom-color:#000;}.ai1ec-popover{position:absolute;top:0;left:0;z-index:10010;display:none;max-width:276px;padding:1px;text-align:left;background-color:#fff;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,0.2);border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,0.2);box-shadow:0 5px 10px rgba(0,0,0,0.2);white-space:normal;}.ai1ec-popover.ai1ec-top{margin-top:-10px;}.ai1ec-popover.ai1ec-right{margin-left:10px;}.ai1ec-popover.ai1ec-bottom{margin-top:10px;}.ai1ec-popover.ai1ec-left{margin-left:-10px;}.ai1ec-popover-title{margin:0;padding:8px 14px;font-size:13px;font-weight:normal;line-height:18px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0;}.ai1ec-popover-content{padding:9px 14px;}.ai1ec-popover .ai1ec-arrow,.ai1ec-popover .ai1ec-arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid;}.ai1ec-popover .ai1ec-arrow{border-width:6px;}.ai1ec-popover .ai1ec-arrow:after{border-width:5px;content:\"\";}.ai1ec-popover.ai1ec-top .ai1ec-arrow{left:50%;margin-left:-6px;border-bottom-width:0;border-top-color:#999;border-top-color:rgba(0,0,0,0.25);bottom:-6px;}.ai1ec-popover.ai1ec-top .ai1ec-arrow:after{content:\" \";bottom:1px;margin-left:-5px;border-bottom-width:0;border-top-color:#fff;}.ai1ec-popover.ai1ec-right .ai1ec-arrow{top:50%;left:-6px;margin-top:-6px;border-left-width:0;border-right-color:#999;border-right-color:rgba(0,0,0,0.25);}.ai1ec-popover.ai1ec-right .ai1ec-arrow:after{content:\" \";left:1px;bottom:-5px;border-left-width:0;border-right-color:#fff;}.ai1ec-popover.ai1ec-bottom .ai1ec-arrow{left:50%;margin-left:-6px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0,0,0,0.25);top:-6px;}.ai1ec-popover.ai1ec-bottom .ai1ec-arrow:after{content:\" \";top:1px;margin-left:-5px;border-top-width:0;border-bottom-color:#fff;}.ai1ec-popover.ai1ec-left .ai1ec-arrow{top:50%;right:-6px;margin-top:-6px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0,0,0,0.25);}.ai1ec-popover.ai1ec-left .ai1ec-arrow:after{content:\" \";right:1px;border-right-width:0;border-left-color:#fff;bottom:-5px;}.ai1ec-clearfix:before,.ai1ec-clearfix:after{content:\" \";display:table;}.ai1ec-clearfix:after{clear:both;}.ai1ec-center-block{display:block;margin-left:auto;margin-right:auto;}.ai1ec-pull-right{float:right !important;}.ai1ec-pull-left{float:left !important;}.ai1ec-hide{display:none !important;}.ai1ec-show{display:block !important;}.ai1ec-invisible{visibility:hidden;}.ai1ec-text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0;}.ai1ec-hidden{display:none !important;visibility:hidden !important;}.ai1ec-affix{position:fixed;}@-ms-viewport{width:device-width;}.ai1ec-visible-xs,tr.ai1ec-visible-xs,th.ai1ec-visible-xs,td.ai1ec-visible-xs{display:none !important;}@media (max-width: 767px){.ai1ec-visible-xs{display:block !important;}table.ai1ec-visible-xs{display:table;}tr.ai1ec-visible-xs{display:table-row !important;}th.ai1ec-visible-xs,td.ai1ec-visible-xs{display:table-cell !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-visible-xs.ai1ec-visible-sm{display:block !important;}table.ai1ec-visible-xs.ai1ec-visible-sm{display:table;}tr.ai1ec-visible-xs.ai1ec-visible-sm{display:table-row !important;}th.ai1ec-visible-xs.ai1ec-visible-sm,td.ai1ec-visible-xs.ai1ec-visible-sm{display:table-cell !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-visible-xs.ai1ec-visible-md{display:block !important;}table.ai1ec-visible-xs.ai1ec-visible-md{display:table;}tr.ai1ec-visible-xs.ai1ec-visible-md{display:table-row !important;}th.ai1ec-visible-xs.ai1ec-visible-md,td.ai1ec-visible-xs.ai1ec-visible-md{display:table-cell !important;}}@media (min-width: 1200px){.ai1ec-visible-xs.ai1ec-visible-lg{display:block !important;}table.ai1ec-visible-xs.ai1ec-visible-lg{display:table;}tr.ai1ec-visible-xs.ai1ec-visible-lg{display:table-row !important;}th.ai1ec-visible-xs.ai1ec-visible-lg,td.ai1ec-visible-xs.ai1ec-visible-lg{display:table-cell !important;}}.ai1ec-visible-sm,tr.ai1ec-visible-sm,th.ai1ec-visible-sm,td.ai1ec-visible-sm{display:none !important;}@media (max-width: 767px){.ai1ec-visible-sm.ai1ec-visible-xs{display:block !important;}table.ai1ec-visible-sm.ai1ec-visible-xs{display:table;}tr.ai1ec-visible-sm.ai1ec-visible-xs{display:table-row !important;}th.ai1ec-visible-sm.ai1ec-visible-xs,td.ai1ec-visible-sm.ai1ec-visible-xs{display:table-cell !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-visible-sm{display:block !important;}table.ai1ec-visible-sm{display:table;}tr.ai1ec-visible-sm{display:table-row !important;}th.ai1ec-visible-sm,td.ai1ec-visible-sm{display:table-cell !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-visible-sm.ai1ec-visible-md{display:block !important;}table.ai1ec-visible-sm.ai1ec-visible-md{display:table;}tr.ai1ec-visible-sm.ai1ec-visible-md{display:table-row !important;}th.ai1ec-visible-sm.ai1ec-visible-md,td.ai1ec-visible-sm.ai1ec-visible-md{display:table-cell !important;}}@media (min-width: 1200px){.ai1ec-visible-sm.ai1ec-visible-lg{display:block !important;}table.ai1ec-visible-sm.ai1ec-visible-lg{display:table;}tr.ai1ec-visible-sm.ai1ec-visible-lg{display:table-row !important;}th.ai1ec-visible-sm.ai1ec-visible-lg,td.ai1ec-visible-sm.ai1ec-visible-lg{display:table-cell !important;}}.ai1ec-visible-md,tr.ai1ec-visible-md,th.ai1ec-visible-md,td.ai1ec-visible-md{display:none !important;}@media (max-width: 767px){.ai1ec-visible-md.ai1ec-visible-xs{display:block !important;}table.ai1ec-visible-md.ai1ec-visible-xs{display:table;}tr.ai1ec-visible-md.ai1ec-visible-xs{display:table-row !important;}th.ai1ec-visible-md.ai1ec-visible-xs,td.ai1ec-visible-md.ai1ec-visible-xs{display:table-cell !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-visible-md.ai1ec-visible-sm{display:block !important;}table.ai1ec-visible-md.ai1ec-visible-sm{display:table;}tr.ai1ec-visible-md.ai1ec-visible-sm{display:table-row !important;}th.ai1ec-visible-md.ai1ec-visible-sm,td.ai1ec-visible-md.ai1ec-visible-sm{display:table-cell !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-visible-md{display:block !important;}table.ai1ec-visible-md{display:table;}tr.ai1ec-visible-md{display:table-row !important;}th.ai1ec-visible-md,td.ai1ec-visible-md{display:table-cell !important;}}@media (min-width: 1200px){.ai1ec-visible-md.ai1ec-visible-lg{display:block !important;}table.ai1ec-visible-md.ai1ec-visible-lg{display:table;}tr.ai1ec-visible-md.ai1ec-visible-lg{display:table-row !important;}th.ai1ec-visible-md.ai1ec-visible-lg,td.ai1ec-visible-md.ai1ec-visible-lg{display:table-cell !important;}}.ai1ec-visible-lg,tr.ai1ec-visible-lg,th.ai1ec-visible-lg,td.ai1ec-visible-lg{display:none !important;}@media (max-width: 767px){.ai1ec-visible-lg.ai1ec-visible-xs{display:block !important;}table.ai1ec-visible-lg.ai1ec-visible-xs{display:table;}tr.ai1ec-visible-lg.ai1ec-visible-xs{display:table-row !important;}th.ai1ec-visible-lg.ai1ec-visible-xs,td.ai1ec-visible-lg.ai1ec-visible-xs{display:table-cell !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-visible-lg.ai1ec-visible-sm{display:block !important;}table.ai1ec-visible-lg.ai1ec-visible-sm{display:table;}tr.ai1ec-visible-lg.ai1ec-visible-sm{display:table-row !important;}th.ai1ec-visible-lg.ai1ec-visible-sm,td.ai1ec-visible-lg.ai1ec-visible-sm{display:table-cell !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-visible-lg.ai1ec-visible-md{display:block !important;}table.ai1ec-visible-lg.ai1ec-visible-md{display:table;}tr.ai1ec-visible-lg.ai1ec-visible-md{display:table-row !important;}th.ai1ec-visible-lg.ai1ec-visible-md,td.ai1ec-visible-lg.ai1ec-visible-md{display:table-cell !important;}}@media (min-width: 1200px){.ai1ec-visible-lg{display:block !important;}table.ai1ec-visible-lg{display:table;}tr.ai1ec-visible-lg{display:table-row !important;}th.ai1ec-visible-lg,td.ai1ec-visible-lg{display:table-cell !important;}}.ai1ec-hidden-xs{display:block !important;}table.ai1ec-hidden-xs{display:table;}tr.ai1ec-hidden-xs{display:table-row !important;}th.ai1ec-hidden-xs,td.ai1ec-hidden-xs{display:table-cell !important;}@media (max-width: 767px){.ai1ec-hidden-xs,tr.ai1ec-hidden-xs,th.ai1ec-hidden-xs,td.ai1ec-hidden-xs{display:none !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-hidden-xs.ai1ec-hidden-sm,tr.ai1ec-hidden-xs.ai1ec-hidden-sm,th.ai1ec-hidden-xs.ai1ec-hidden-sm,td.ai1ec-hidden-xs.ai1ec-hidden-sm{display:none !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-hidden-xs.ai1ec-hidden-md,tr.ai1ec-hidden-xs.ai1ec-hidden-md,th.ai1ec-hidden-xs.ai1ec-hidden-md,td.ai1ec-hidden-xs.ai1ec-hidden-md{display:none !important;}}@media (min-width: 1200px){.ai1ec-hidden-xs.ai1ec-hidden-lg,tr.ai1ec-hidden-xs.ai1ec-hidden-lg,th.ai1ec-hidden-xs.ai1ec-hidden-lg,td.ai1ec-hidden-xs.ai1ec-hidden-lg{display:none !important;}}.ai1ec-hidden-sm{display:block !important;}table.ai1ec-hidden-sm{display:table;}tr.ai1ec-hidden-sm{display:table-row !important;}th.ai1ec-hidden-sm,td.ai1ec-hidden-sm{display:table-cell !important;}@media (max-width: 767px){.ai1ec-hidden-sm.ai1ec-hidden-xs,tr.ai1ec-hidden-sm.ai1ec-hidden-xs,th.ai1ec-hidden-sm.ai1ec-hidden-xs,td.ai1ec-hidden-sm.ai1ec-hidden-xs{display:none !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-hidden-sm,tr.ai1ec-hidden-sm,th.ai1ec-hidden-sm,td.ai1ec-hidden-sm{display:none !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-hidden-sm.ai1ec-hidden-md,tr.ai1ec-hidden-sm.ai1ec-hidden-md,th.ai1ec-hidden-sm.ai1ec-hidden-md,td.ai1ec-hidden-sm.ai1ec-hidden-md{display:none !important;}}@media (min-width: 1200px){.ai1ec-hidden-sm.ai1ec-hidden-lg,tr.ai1ec-hidden-sm.ai1ec-hidden-lg,th.ai1ec-hidden-sm.ai1ec-hidden-lg,td.ai1ec-hidden-sm.ai1ec-hidden-lg{display:none !important;}}.ai1ec-hidden-md{display:block !important;}table.ai1ec-hidden-md{display:table;}tr.ai1ec-hidden-md{display:table-row !important;}th.ai1ec-hidden-md,td.ai1ec-hidden-md{display:table-cell !important;}@media (max-width: 767px){.ai1ec-hidden-md.ai1ec-hidden-xs,tr.ai1ec-hidden-md.ai1ec-hidden-xs,th.ai1ec-hidden-md.ai1ec-hidden-xs,td.ai1ec-hidden-md.ai1ec-hidden-xs{display:none !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-hidden-md.ai1ec-hidden-sm,tr.ai1ec-hidden-md.ai1ec-hidden-sm,th.ai1ec-hidden-md.ai1ec-hidden-sm,td.ai1ec-hidden-md.ai1ec-hidden-sm{display:none !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-hidden-md,tr.ai1ec-hidden-md,th.ai1ec-hidden-md,td.ai1ec-hidden-md{display:none !important;}}@media (min-width: 1200px){.ai1ec-hidden-md.ai1ec-hidden-lg,tr.ai1ec-hidden-md.ai1ec-hidden-lg,th.ai1ec-hidden-md.ai1ec-hidden-lg,td.ai1ec-hidden-md.ai1ec-hidden-lg{display:none !important;}}.ai1ec-hidden-lg{display:block !important;}table.ai1ec-hidden-lg{display:table;}tr.ai1ec-hidden-lg{display:table-row !important;}th.ai1ec-hidden-lg,td.ai1ec-hidden-lg{display:table-cell !important;}@media (max-width: 767px){.ai1ec-hidden-lg.ai1ec-hidden-xs,tr.ai1ec-hidden-lg.ai1ec-hidden-xs,th.ai1ec-hidden-lg.ai1ec-hidden-xs,td.ai1ec-hidden-lg.ai1ec-hidden-xs{display:none !important;}}@media (min-width: 768px) and (max-width: 991px){.ai1ec-hidden-lg.ai1ec-hidden-sm,tr.ai1ec-hidden-lg.ai1ec-hidden-sm,th.ai1ec-hidden-lg.ai1ec-hidden-sm,td.ai1ec-hidden-lg.ai1ec-hidden-sm{display:none !important;}}@media (min-width: 992px) and (max-width: 1199px){.ai1ec-hidden-lg.ai1ec-hidden-md,tr.ai1ec-hidden-lg.ai1ec-hidden-md,th.ai1ec-hidden-lg.ai1ec-hidden-md,td.ai1ec-hidden-lg.ai1ec-hidden-md{display:none !important;}}@media (min-width: 1200px){.ai1ec-hidden-lg,tr.ai1ec-hidden-lg,th.ai1ec-hidden-lg,td.ai1ec-hidden-lg{display:none !important;}}.ai1ec-visible-print,tr.ai1ec-visible-print,th.ai1ec-visible-print,td.ai1ec-visible-print{display:none !important;}@media print{.ai1ec-visible-print{display:block !important;}table.ai1ec-visible-print{display:table;}tr.ai1ec-visible-print{display:table-row !important;}th.ai1ec-visible-print,td.ai1ec-visible-print{display:table-cell !important;}.ai1ec-hidden-print,tr.ai1ec-hidden-print,th.ai1ec-hidden-print,td.ai1ec-hidden-print{display:none !important;}}.select2-container{position:relative;display:inline-block;zoom:1;*display:inline;vertical-align:top;}.select2-container,.select2-drop,.select2-search,.select2-search input{-webkit-box-sizing:border-box;-khtml-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;}.select2-container .select2-choice{display:block;height:26px;padding:0 0 0 8px;overflow:hidden;position:relative;border:1px solid #aaa;white-space:nowrap;line-height:26px;color:#444;text-decoration:none;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#fff;background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#eee),color-stop(0.5,white));background-image:-webkit-linear-gradient(center bottom,#eee 0%,white 50%);background-image:-moz-linear-gradient(center bottom,#eee 0%,white 50%);background-image:-o-linear-gradient(bottom,#eee 0%,#fff 50%);background-image:-ms-linear-gradient(top,#fff 0%,#eee 50%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffff\',endColorstr=\'#eeeeee\',GradientType=0);background-image:linear-gradient(top,#fff 0%,#eee 50%);}.select2-container.select2-drop-above .select2-choice{border-bottom-color:#aaa;-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px;background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#eee),color-stop(0.9,white));background-image:-webkit-linear-gradient(center bottom,#eee 0%,white 90%);background-image:-moz-linear-gradient(center bottom,#eee 0%,white 90%);background-image:-o-linear-gradient(bottom,#eee 0%,white 90%);background-image:-ms-linear-gradient(top,#eee 0%,#fff 90%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffff\',endColorstr=\'#eeeeee\',GradientType=0);background-image:linear-gradient(top,#eee 0%,#fff 90%);}.select2-container .select2-choice span{margin-right:26px;display:block;overflow:hidden;white-space:nowrap;-ms-text-overflow:ellipsis;-o-text-overflow:ellipsis;text-overflow:ellipsis;}.select2-container .select2-choice abbr{display:block;width:12px;height:12px;position:absolute;right:26px;top:8px;font-size:1px;text-decoration:none;border:0;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') right top no-repeat;cursor:pointer;outline:0;}.select2-container .select2-choice abbr:hover{background-position:right -11px;cursor:pointer;}.select2-drop-mask{position:absolute;left:0;top:0;z-index:9998;opacity:0;}.select2-drop{width:100%;margin-top:-1px;position:absolute;z-index:9999;top:100%;background:#fff;color:#000;border:1px solid #aaa;border-top:0;-webkit-border-radius:0 0 4px 4px;-moz-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px;-webkit-box-shadow:0 4px 5px rgba(0,0,0,0.15);-moz-box-shadow:0 4px 5px rgba(0,0,0,0.15);box-shadow:0 4px 5px rgba(0,0,0,0.15);}.select2-drop.select2-drop-above{margin-top:1px;border-top:1px solid #aaa;border-bottom:0;-webkit-border-radius:4px 4px 0 0;-moz-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;-webkit-box-shadow:0 -4px 5px rgba(0,0,0,0.15);-moz-box-shadow:0 -4px 5px rgba(0,0,0,0.15);box-shadow:0 -4px 5px rgba(0,0,0,0.15);}.select2-container .select2-choice div{display:block;width:18px;height:100%;position:absolute;right:0;top:0;border-left:1px solid #aaa;-webkit-border-radius:0 4px 4px 0;-moz-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0;-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;background:#ccc;background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,#ccc),color-stop(0.6,#eee));background-image:-webkit-linear-gradient(center bottom,#ccc 0%,#eee 60%);background-image:-moz-linear-gradient(center bottom,#ccc 0%,#eee 60%);background-image:-o-linear-gradient(bottom,#ccc 0%,#eee 60%);background-image:-ms-linear-gradient(top,#ccc 0%,#eee 60%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#eeeeee\',endColorstr=\'#cccccc\',GradientType=0);background-image:linear-gradient(top,#ccc 0%,#eee 60%);}.select2-container .select2-choice div b{display:block;width:100%;height:100%;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 0 1px;}.select2-search{display:inline-block;width:100%;min-height:26px;margin:0;padding-left:4px;padding-right:4px;position:relative;z-index:10000;white-space:nowrap;}.select2-search-hidden{display:block;position:absolute;left:-10000px;}.select2-search input{width:100%;height:auto !important;min-height:26px;padding:4px 20px 4px 5px;margin:0;outline:0;font-family:sans-serif;font-size:1em;border:1px solid #aaa;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:#fff url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, -webkit-gradient(linear,left bottom,left top,color-stop(0.85,white),color-stop(0.99,#eee));background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, -webkit-linear-gradient(center bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, -moz-linear-gradient(center bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, -o-linear-gradient(bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, -ms-linear-gradient(top,#fff 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') no-repeat 100% -22px, linear-gradient(top,#fff 85%,#eee 99%);}.select2-drop.select2-drop-above .select2-search input{margin-top:4px;}.select2-search input.select2-active{background:#fff url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, -webkit-gradient(linear,left bottom,left top,color-stop(0.85,white),color-stop(0.99,#eee));background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, -webkit-linear-gradient(center bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, -moz-linear-gradient(center bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, -o-linear-gradient(bottom,white 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, -ms-linear-gradient(top,#fff 85%,#eee 99%);background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%, linear-gradient(top,#fff 85%,#eee 99%);}.select2-container-active .select2-choice,.select2-container-active .select2-choices{border:1px solid #5897fb;outline:none;-webkit-box-shadow:0 0 5px rgba(0,0,0,0.3);-moz-box-shadow:0 0 5px rgba(0,0,0,0.3);box-shadow:0 0 5px rgba(0,0,0,0.3);}.select2-dropdown-open .select2-choice{border-bottom-color:transparent;-webkit-box-shadow:0 1px 0 #fff inset;-moz-box-shadow:0 1px 0 #fff inset;box-shadow:0 1px 0 #fff inset;-webkit-border-bottom-left-radius:0;-moz-border-radius-bottomleft:0;border-bottom-left-radius:0;-webkit-border-bottom-right-radius:0;-moz-border-radius-bottomright:0;border-bottom-right-radius:0;background-color:#eee;background-image:-webkit-gradient(linear,left bottom,left top,color-stop(0,white),color-stop(0.5,#eee));background-image:-webkit-linear-gradient(center bottom,white 0%,#eee 50%);background-image:-moz-linear-gradient(center bottom,white 0%,#eee 50%);background-image:-o-linear-gradient(bottom,white 0%,#eee 50%);background-image:-ms-linear-gradient(top,#fff 0%,#eee 50%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#eeeeee\',endColorstr=\'#ffffff\',GradientType=0);background-image:linear-gradient(top,#fff 0%,#eee 50%);}.select2-dropdown-open .select2-choice div{background:transparent;border-left:none;filter:none;}.select2-dropdown-open .select2-choice div b{background-position:-18px 1px;}.select2-results{max-height:200px;padding:0 0 0 4px;margin:4px 4px 4px 0;position:relative;overflow-x:hidden;overflow-y:auto;-webkit-tap-highlight-color:rgba(0,0,0,0);}.select2-results ul.select2-result-sub{margin:0;padding-left:0;}.select2-results ul.select2-result-sub > li .select2-result-label{padding-left:20px;}.select2-results ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:40px;}.select2-results ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:60px;}.select2-results ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:80px;}.select2-results ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:100px;}.select2-results ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:110px;}.select2-results ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub ul.select2-result-sub > li .select2-result-label{padding-left:120px;}.select2-results li{list-style:none;display:list-item;background-image:none;}.select2-results li.select2-result-with-children > .select2-result-label{font-weight:bold;}.select2-results .select2-result-label{padding:3px 7px 4px;margin:0;cursor:pointer;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.select2-results .select2-highlighted{background:#3875d7;color:#fff;}.select2-results li em{background:#feffde;font-style:normal;}.select2-results .select2-highlighted em{background:transparent;}.select2-results .select2-highlighted ul{background:white;color:#000;}.select2-results .select2-no-results,.select2-results .select2-searching,.select2-results .select2-selection-limit{background:#f4f4f4;display:list-item;}.select2-results .select2-disabled.select2-highlighted{color:#666;background:#f4f4f4;display:list-item;cursor:default;}.select2-results .select2-disabled{background:#f4f4f4;display:list-item;cursor:default;}.select2-results .select2-selected{display:none;}.select2-more-results.select2-active{background:#f4f4f4 url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100%;}.select2-more-results{background:#f4f4f4;display:list-item;}.select2-container.select2-container-disabled .select2-choice{background-color:#f4f4f4;background-image:none;border:1px solid #ddd;cursor:default;}.select2-container.select2-container-disabled .select2-choice div{background-color:#f4f4f4;background-image:none;border-left:0;}.select2-container.select2-container-disabled .select2-choice abbr{display:none;}.select2-container-multi .select2-choices{height:auto !important;height:1%;margin:0;padding:0;position:relative;border:1px solid #aaa;cursor:text;overflow:hidden;background-color:#fff;background-image:-webkit-gradient(linear,0% 0%,0% 100%,color-stop(1%,#eee),color-stop(15%,#fff));background-image:-webkit-linear-gradient(top,#eee 1%,#fff 15%);background-image:-moz-linear-gradient(top,#eee 1%,#fff 15%);background-image:-o-linear-gradient(top,#eee 1%,#fff 15%);background-image:-ms-linear-gradient(top,#eee 1%,#fff 15%);background-image:linear-gradient(top,#eee 1%,#fff 15%);}.select2-locked{padding:3px 5px 3px 5px !important;}.select2-container-multi .select2-choices{min-height:26px;}.select2-container-multi.select2-container-active .select2-choices{border:1px solid #5897fb;outline:none;-webkit-box-shadow:0 0 5px rgba(0,0,0,0.3);-moz-box-shadow:0 0 5px rgba(0,0,0,0.3);box-shadow:0 0 5px rgba(0,0,0,0.3);}.select2-container-multi .select2-choices li{float:left;list-style:none;}.select2-container-multi .select2-choices .select2-search-field{margin:0;padding:0;white-space:nowrap;}.select2-container-multi .select2-choices .select2-search-field input{padding:5px;margin:1px 0;font-family:sans-serif;font-size:100%;color:#666;outline:0;border:0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background:transparent !important;}.select2-container-multi .select2-choices .select2-search-field input.select2-active{background:#fff url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader-small.gif\') no-repeat 100% !important;}.select2-default{color:#999 !important;}.select2-container-multi .select2-choices .select2-search-choice{padding:3px 5px 3px 18px;margin:3px 0 3px 5px;position:relative;line-height:13px;color:#333;cursor:default;border:1px solid #aaa;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;-webkit-box-shadow:0 0 2px #fff inset, 0 1px 0 rgba(0,0,0,0.05);-moz-box-shadow:0 0 2px #fff inset, 0 1px 0 rgba(0,0,0,0.05);box-shadow:0 0 2px #fff inset, 0 1px 0 rgba(0,0,0,0.05);-webkit-background-clip:padding-box;-moz-background-clip:padding;background-clip:padding-box;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#e4e4e4;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#eeeeee\',endColorstr=\'#f4f4f4\',GradientType=0);background-image:-webkit-gradient(linear,0% 0%,0% 100%,color-stop(20%,#f4f4f4),color-stop(50%,#f0f0f0),color-stop(52%,#e8e8e8),color-stop(100%,#eee));background-image:-webkit-linear-gradient(top,#f4f4f4 20%,#f0f0f0 50%,#e8e8e8 52%,#eee 100%);background-image:-moz-linear-gradient(top,#f4f4f4 20%,#f0f0f0 50%,#e8e8e8 52%,#eee 100%);background-image:-o-linear-gradient(top,#f4f4f4 20%,#f0f0f0 50%,#e8e8e8 52%,#eee 100%);background-image:-ms-linear-gradient(top,#f4f4f4 20%,#f0f0f0 50%,#e8e8e8 52%,#eee 100%);background-image:linear-gradient(top,#f4f4f4 20%,#f0f0f0 50%,#e8e8e8 52%,#eee 100%);}.select2-container-multi .select2-choices .select2-search-choice span{cursor:default;}.select2-container-multi .select2-choices .select2-search-choice-focus{background:#d4d4d4;}.select2-search-choice-close{display:block;width:12px;height:13px;position:absolute;right:3px;top:4px;font-size:1px;outline:none;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') right top no-repeat;}.select2-container-multi .select2-search-choice-close{left:3px;}.select2-container-multi .select2-choices .select2-search-choice .select2-search-choice-close:hover{background-position:right -11px;}.select2-container-multi .select2-choices .select2-search-choice-focus .select2-search-choice-close{background-position:right -11px;}.select2-container-multi.select2-container-disabled .select2-choices{background-color:#f4f4f4;background-image:none;border:1px solid #ddd;cursor:default;}.select2-container-multi.select2-container-disabled .select2-choices .select2-search-choice{padding:3px 5px 3px 5px;border:1px solid #ddd;background-image:none;background-color:#f4f4f4;}.select2-container-multi.select2-container-disabled .select2-choices .select2-search-choice .select2-search-choice-close{display:none;}.select2-result-selectable .select2-match,.select2-result-unselectable .select2-match{text-decoration:underline;}.select2-offscreen{position:absolute;left:-10000px;}@media only screen and (-webkit-min-device-pixel-ratio: 1.5),only screen and (min-resolution: 144dpi){.select2-search input,.select2-search-choice-close,.select2-container .select2-choice abbr,.select2-container .select2-choice div b{background-image:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2x2.png\') !important;background-repeat:no-repeat !important;background-size:60px 40px !important;}.select2-search input{background-position:100% -21px !important;}}.ai1ec-btn-file{overflow:hidden;position:relative;vertical-align:middle;}.ai1ec-btn-file > input{position:absolute;top:0;right:0;margin:0;padding:0;height:32px;border:solid transparent;opacity:0;filter:alpha(opacity=0);direction:ltr;cursor:pointer;}.ai1ec-fileupload{margin-bottom:9px;}.ai1ec-fileupload .ai1ec-uneditable-input{display:inline-block;margin-bottom:0px;vertical-align:middle;cursor:text;}.ai1ec-fileupload .ai1ec-thumbnail{overflow:hidden;display:inline-block;margin-bottom:5px;vertical-align:middle;text-align:center;}.ai1ec-fileupload .ai1ec-thumbnail > img{display:inline-block;vertical-align:middle;max-height:100%;}.ai1ec-fileupload .ai1ec-btn{vertical-align:middle;}.ai1ec-fileupload-exists .ai1ec-fileupload-new,.ai1ec-fileupload-new .ai1ec-fileupload-exists{display:none;}.ai1ec-fileupload-inline .ai1ec-fileupload-controls{display:inline;}.ai1ec-fileupload-new .ai1ec-input-append .ai1ec-btn-file{border-radius:0 3px 3px 0;}.ai1ec-thumbnail-borderless .ai1ec-thumbnail{border:none;padding:0;border-radius:0;-webkit-box-shadow:none;box-shadow:none;}.ai1ec-fileupload-new.ai1ec-thumbnail-borderless .ai1ec-thumbnail{border:1px solid #ddd;}.ai1ec-form-group.ai1ec-has-warning .ai1ec-fileupload .ai1ec-uneditable-input{color:#a47e3c;border-color:#a47e3c;}.ai1ec-form-group.ai1ec-has-warning .ai1ec-fileupload .ai1ec-fileupload-preview{color:#a47e3c;}.ai1ec-form-group.ai1ec-has-warning .ai1ec-fileupload .ai1ec-thumbnail{border-color:#a47e3c;}.ai1ec-form-group.ai1ec-has-error .ai1ec-fileupload .ai1ec-uneditable-input{color:#b94a48;border-color:#b94a48;}.ai1ec-form-group.ai1ec-has-error .ai1ec-fileupload .ai1ec-fileupload-preview{color:#b94a48;}.ai1ec-form-group.ai1ec-has-error .ai1ec-fileupload .ai1ec-thumbnail{border-color:#b94a48;}.ai1ec-form-group.ai1ec-has-success .ai1ec-fileupload .ai1ec-uneditable-input{color:#468847;border-color:#468847;}.ai1ec-form-group.ai1ec-has-success .ai1ec-fileupload .ai1ec-fileupload-preview{color:#468847;}.ai1ec-form-group.ai1ec-has-success .ai1ec-fileupload .ai1ec-thumbnail{border-color:#468847;}.ai1ec-datepicker{padding:4px;border-radius:4px;direction:ltr;}.ai1ec-datepicker-inline{width:220px;}.ai1ec-datepicker.ai1ec-datepicker-rtl{direction:rtl;}.ai1ec-datepicker.ai1ec-datepicker-rtl table tr td span{float:right;}.ai1ec-datepicker-dropdown{top:0;left:0;}.ai1ec-datepicker-dropdown:before{content:\'\';display:inline-block;border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #ccc;border-top:0;border-bottom-color:rgba(0,0,0,0.2);position:absolute;}.ai1ec-datepicker-dropdown:after{content:\'\';display:inline-block;border-left:6px solid transparent;border-right:6px solid transparent;border-bottom:6px solid #fff;border-top:0;position:absolute;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-left:before{left:6px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-left:after{left:7px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-right:before{right:6px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-right:after{right:7px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-top:before{top:-7px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-top:after{top:-6px;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-bottom:before{bottom:-7px;border-bottom:0;border-top:7px solid #999;}.ai1ec-datepicker-dropdown.ai1ec-datepicker-orient-bottom:after{bottom:-6px;border-bottom:0;border-top:6px solid #fff;}.ai1ec-datepicker >div{display:none;}.ai1ec-datepicker.ai1ec-days div.ai1ec-datepicker-days{display:block;}.ai1ec-datepicker.ai1ec-months div.ai1ec-datepicker-months{display:block;}.ai1ec-datepicker.ai1ec-years div.ai1ec-datepicker-years{display:block;}.ai1ec-datepicker table{margin:0;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}.ai1ec-datepicker table tr td,.ai1ec-datepicker table tr th{text-align:center;width:30px;height:30px;border-radius:4px;border:none;}.ai1ec-table-striped .ai1ec-datepicker table tr td,.ai1ec-table-striped .ai1ec-datepicker table tr th{background-color:transparent;}.ai1ec-datepicker table tr td.ai1ec-day:hover,.ai1ec-datepicker table tr td.ai1ec-day.ai1ec-focused{background:#eee;cursor:pointer;}.ai1ec-datepicker table tr td.ai1ec-old,.ai1ec-datepicker table tr td.ai1ec-new{color:#999;}.ai1ec-datepicker table tr td.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-disabled:hover{background:none;color:#999;cursor:default;}.ai1ec-datepicker table tr td.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover{color:#000;background-color:#ffdb99;border-color:#ffb733;}.ai1ec-datepicker table tr td.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-today:focus,.ai1ec-datepicker table tr td.ai1ec-today:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-today:hover:hover,.ai1ec-datepicker table tr td.ai1ec-today:hover:focus,.ai1ec-datepicker table tr td.ai1ec-today:hover:active,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover{color:#000;background-color:#ffcd70;border-color:#f59e00;}.ai1ec-datepicker table tr td.ai1ec-today:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-today:hover:active,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover{background-image:none;}.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today[disabled],.ai1ec-datepicker table tr td.ai1ec-today[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-today[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-today[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-today[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-today:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-today:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-today:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-today:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today:hover.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled[disabled],.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover.ai1ec-active{background-color:#ffdb99;border-color:#ffb733;}.ai1ec-datepicker table tr td.ai1ec-today .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-today:hover .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover .ai1ec-badge{color:#ffdb99;background-color:#fff;}.ai1ec-datepicker table tr td.ai1ec-today:hover:hover{color:#000;}.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-active:hover{color:#fff;}.ai1ec-datepicker table tr td.ai1ec-range,.ai1ec-datepicker table tr td.ai1ec-range:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-disabled:hover{background:#eee;border-radius:0;}.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover{color:#000;background-color:#f7ca77;border-color:#f1a417;border-radius:0;}.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover{color:#000;background-color:#f4bb51;border-color:#bf800c;}.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover{background-image:none;}.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today[disabled],.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled[disabled],.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover.ai1ec-active{background-color:#f7ca77;border-color:#f1a417;}.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today:hover .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-range.ai1ec-today.ai1ec-disabled:hover .ai1ec-badge{color:#f7ca77;background-color:#fff;}.ai1ec-datepicker table tr td.ai1ec-selected,.ai1ec-datepicker table tr td.ai1ec-selected:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover{color:#fff;background-color:#999;border-color:#555;text-shadow:0 -1px 0 rgba(0,0,0,0.25);}.ai1ec-datepicker table tr td.ai1ec-selected:hover,.ai1ec-datepicker table tr td.ai1ec-selected:focus,.ai1ec-datepicker table tr td.ai1ec-selected:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected,.ai1ec-datepicker table tr td.ai1ec-selected:hover:hover,.ai1ec-datepicker table tr td.ai1ec-selected:hover:focus,.ai1ec-datepicker table tr td.ai1ec-selected:hover:active,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover{color:#fff;background-color:#858585;border-color:#373737;}.ai1ec-datepicker table tr td.ai1ec-selected:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected,.ai1ec-datepicker table tr td.ai1ec-selected:hover:active,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover{background-image:none;}.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected[disabled],.ai1ec-datepicker table tr td.ai1ec-selected[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-selected[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-selected[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-selected[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-selected:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-selected:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-selected:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-selected:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected:hover.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled[disabled],.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover.ai1ec-active{background-color:#999;border-color:#555;}.ai1ec-datepicker table tr td.ai1ec-selected .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-selected:hover .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-selected.ai1ec-disabled:hover .ai1ec-badge{color:#999;background-color:#fff;}.ai1ec-datepicker table tr td.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover{color:#fff;background-color:#6dbb4f;border-color:#61ad43;text-shadow:0 -1px 0 rgba(0,0,0,0.25);}.ai1ec-datepicker table tr td.ai1ec-active:hover,.ai1ec-datepicker table tr td.ai1ec-active:focus,.ai1ec-datepicker table tr td.ai1ec-active:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active:hover:hover,.ai1ec-datepicker table tr td.ai1ec-active:hover:focus,.ai1ec-datepicker table tr td.ai1ec-active:hover:active,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover{color:#fff;background-color:#5aa23f;border-color:#488132;}.ai1ec-datepicker table tr td.ai1ec-active:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active:hover:active,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover{background-image:none;}.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active[disabled],.ai1ec-datepicker table tr td.ai1ec-active[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-active[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-active[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-active[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-active:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-active:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-active:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-active:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active:hover.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled[disabled],.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover[disabled],.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover[disabled]:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover[disabled]:focus,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover[disabled]:active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover.ai1ec-active{background-color:#6dbb4f;border-color:#61ad43;}.ai1ec-datepicker table tr td.ai1ec-active .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-active:hover .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled .ai1ec-badge,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-disabled:hover .ai1ec-badge{color:#6dbb4f;background-color:#fff;}.ai1ec-datepicker table tr td span{display:block;width:23%;height:54px;line-height:54px;float:left;margin:1%;cursor:pointer;border-radius:4px;}.ai1ec-datepicker table tr td span:hover{background:#eee;}.ai1ec-datepicker table tr td span.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-disabled:hover{background:none;color:#999;cursor:default;}.ai1ec-datepicker table tr td span.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover{color:#fff;background-color:#6dbb4f;border-color:#61ad43;text-shadow:0 -1px 0 rgba(0,0,0,0.25);}.ai1ec-datepicker table tr td span.ai1ec-active:hover,.ai1ec-datepicker table tr td span.ai1ec-active:focus,.ai1ec-datepicker table tr td span.ai1ec-active:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover:hover,.ai1ec-datepicker table tr td span.ai1ec-active:hover:focus,.ai1ec-datepicker table tr td span.ai1ec-active:hover:active,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover{color:#fff;background-color:#5aa23f;border-color:#488132;}.ai1ec-datepicker table tr td span.ai1ec-active:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover:active,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-active,.ai1ec-open .ai1ec-dropdown-toggle.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover{background-image:none;}.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active[disabled],.ai1ec-datepicker table tr td span.ai1ec-active[disabled]:hover,.ai1ec-datepicker table tr td span.ai1ec-active[disabled]:focus,.ai1ec-datepicker table tr td span.ai1ec-active[disabled]:active,.ai1ec-datepicker table tr td span.ai1ec-active[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:focus,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover[disabled],.ai1ec-datepicker table tr td span.ai1ec-active:hover[disabled]:hover,.ai1ec-datepicker table tr td span.ai1ec-active:hover[disabled]:focus,.ai1ec-datepicker table tr td span.ai1ec-active:hover[disabled]:active,.ai1ec-datepicker table tr td span.ai1ec-active:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active:hover.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-disabled:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-disabled:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled[disabled],.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled[disabled]:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled[disabled]:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled[disabled]:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:focus,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-disabled.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover[disabled],.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover[disabled]:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover[disabled]:focus,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover[disabled]:active,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover[disabled].ai1ec-active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:hover,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:focus,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover:active,fieldset[disabled] .ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover.ai1ec-active{background-color:#6dbb4f;border-color:#61ad43;}.ai1ec-datepicker table tr td span.ai1ec-active .ai1ec-badge,.ai1ec-datepicker table tr td span.ai1ec-active:hover .ai1ec-badge,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled .ai1ec-badge,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover .ai1ec-badge{color:#6dbb4f;background-color:#fff;}.ai1ec-datepicker table tr td span.ai1ec-old,.ai1ec-datepicker table tr td span.ai1ec-new{color:#999;}.ai1ec-datepicker th.ai1ec-datepicker-switch{width:145px;}.ai1ec-datepicker thead tr:first-child th,.ai1ec-datepicker tfoot tr th{cursor:pointer;}.ai1ec-datepicker thead tr:first-child th:hover,.ai1ec-datepicker tfoot tr th:hover{background:#eee;}.ai1ec-datepicker .ai1ec-cw{font-size:10px;width:12px;padding:0 2px 0 5px;vertical-align:middle;}.ai1ec-datepicker thead tr:first-child th.ai1ec-cw{cursor:default;background-color:transparent;}.ai1ec-input-group.ai1ec-date .ai1ec-input-group-addon i{cursor:pointer;width:16px;height:16px;}.ai1ec-input-daterange input{text-align:center;}.ai1ec-input-daterange input:first-child{border-radius:3px 0 0 3px;}.ai1ec-input-daterange input:last-child{border-radius:0 3px 3px 0;}.ai1ec-input-daterange .ai1ec-input-group-addon{width:auto;min-width:16px;padding:4px 5px;font-weight:normal;line-height:1.428571429;text-align:center;text-shadow:0 1px 0 #fff;vertical-align:middle;background-color:#eee;border:solid #ccc;border-width:1px 0;margin-left:-5px;margin-right:-5px;}.ai1ec-bootstrap-timepicker{position:relative;}.ai1ec-bootstrap-timepicker.ai1ec-pull-right .ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu{left:auto;right:0;}.ai1ec-bootstrap-timepicker.ai1ec-pull-right .ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu:before{left:auto;right:12px;}.ai1ec-bootstrap-timepicker.ai1ec-pull-right .ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu:after{left:auto;right:13px;}.ai1ec-bootstrap-timepicker .ai1ec-input-group-addon{cursor:pointer;}.ai1ec-bootstrap-timepicker .ai1ec-input-group-addon i{display:inline-block;width:16px;height:16px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu{padding:4px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu.ai1ec-open{display:inline-block;}.ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu:before{border-bottom:7px solid rgba(0,0,0,0.2);border-left:7px solid transparent;border-right:7px solid transparent;content:\"\";display:inline-block;position:absolute;}.ai1ec-bootstrap-timepicker-widget.ai1ec-dropdown-menu:after{border-bottom:6px solid #fff;border-left:6px solid transparent;border-right:6px solid transparent;content:\"\";display:inline-block;position:absolute;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-left:before{left:6px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-left:after{left:7px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-right:before{right:6px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-right:after{right:7px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-top:before{top:-7px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-top:after{top:-6px;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-bottom:before{bottom:-7px;border-bottom:0;border-top:7px solid #999;}.ai1ec-bootstrap-timepicker-widget.ai1ec-timepicker-orient-bottom:after{bottom:-6px;border-bottom:0;border-top:6px solid #fff;}.ai1ec-bootstrap-timepicker-widget a.ai1ec-btn,.ai1ec-bootstrap-timepicker-widget input{border-radius:4px;}.ai1ec-bootstrap-timepicker-widget table{width:100%;margin:0;}.ai1ec-bootstrap-timepicker-widget table td{text-align:center;height:30px;margin:0;padding:2px;}.ai1ec-bootstrap-timepicker-widget table td:not(.ai1ec-separator){min-width:30px;}.ai1ec-bootstrap-timepicker-widget table td span{width:100%;}.ai1ec-bootstrap-timepicker-widget table td a{border:1px transparent solid;width:100%;display:inline-block;margin:0;padding:8px 0;outline:0;color:#333;}.ai1ec-bootstrap-timepicker-widget table td a:hover{text-decoration:none;background-color:#eee;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;border-color:#ddd;}.ai1ec-bootstrap-timepicker-widget table td a i{margin-top:2px;font-size:18px;}.ai1ec-bootstrap-timepicker-widget table td input{width:25px;margin:0;text-align:center;}.ai1ec-bootstrap-timepicker-widget .ai1ec-modal-body{padding:4px;}@media (min-width: 768px){.ai1ec-bootstrap-timepicker-widget.ai1ec-modal{width:200px;}}@media (max-width: 991px){.ai1ec-bootstrap-timepicker{width:100%;}.ai1ec-bootstrap-timepicker .ai1ec-dropdown-menu{width:100%;}}#ai1ec-event-modal{padding:20px;}@media (max-width: 767px){#ai1ec-event-modal{padding:5px;}}#ai1ec-event-modal .ai1ec-modal-dialog{width:auto;max-width:1199px;margin:0 auto;}#ai1ec-event-modal .ai1ec-modal-body{min-height:300px;}#ai1ec-event-modal .ai1ec-close{font-size:2em;margin:0.25em 0.5em 0 0;position:relative;z-index:10051;}#ai1ec-event-modal .ai1ec-category,#ai1ec-event-modal .ai1ec-tag{cursor:default;color:inherit;border:inherit;-webkit-box-shadow:inset 0 0 1px rgba(38,38,38,0.5);box-shadow:inset 0 0 1px rgba(38,38,38,0.5);}#ai1ec-event-modal .ai1ec-category:hover,#ai1ec-event-modal .ai1ec-tag:hover{color:inherit;background-color:inherit;border:inherit;-webkit-box-shadow:inset 0 0 1px rgba(38,38,38,0.5);box-shadow:inset 0 0 1px rgba(38,38,38,0.5);}.ai1ec-btn-toolbar{margin:0;}.ai1ec-btn-toolbar .ai1ec-btn-group{margin-bottom:6px;}.ai1ec-btn-toolbar .ai1ec-btn-group.ai1ec-btn-group-xs{margin-top:5px;}.ai1ec-btn-group > .ai1ec-btn-primary{z-index:3;}.ai1ec-btn-group > .ai1ec-btn,.ai1ec-btn-group > .ai1ec-dropdown-menu,.ai1ec-btn-group > .ai1ec-popover{font-size:13px;}.ai1ec-btn-group > .ai1ec-btn-xs{font-size:11px;}.ai1ec-btn-group > .ai1ec-btn-sm{font-size:11px;}.ai1ec-btn-group > .ai1ec-btn-lg{font-size:15px;}.ai1ec-btn-group > .ai1ec-btn:after{content:\'\\200A\';margin-right:-0.25em;}.ai1ec-btn-primary{color:#fff !important;}.ai1ec-dropdown-toggle{cursor:pointer;}.ai1ec-dropdown-menu,ul.ai1ec-dropdown-menu{margin:0;text-align:left;list-style:none;}.ai1ec-dropdown-menu li,ul.ai1ec-dropdown-menu li{margin:0;padding:0;list-style:none;}.ai1ec-dropdown-menu > div > a{display:block;padding:3px 20px;clear:both;font-weight:normal;line-height:1.428571429;color:#333;white-space:nowrap;}.ai1ec-dropdown-menu > div > a:hover,.ai1ec-dropdown-menu > div > a:focus{text-decoration:none;color:#262626;background-color:#f5f5f5;}.ai1ec-dropdown{overflow:visible !important;background-image:none !important;}.ai1ec-modal-footer{margin-top:0;}.ai1ec-tooltip{margin:0 !important;}span.ai1ec-hidden-xs{display:inline !important;}@media (max-width: 767px){span.ai1ec-hidden-xs{display:none !important;}}.select2-container input[type=\"text\"]:focus{-webkit-box-shadow:none;box-shadow:none;}.entry-content .select2-choices{padding:inherit !important;line-height:inherit !important;list-style-type:none !important;}.select2-container-multi .select2-choices{background-color:#fff;background-image:none;border-color:#ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);box-shadow:inset 0 1px 1px rgba(0,0,0,0.075);}.select2-dropdown-open.select2-container-multi .select2-choices{border-bottom-color:#fff;border-radius:4px 4px 0 0;}.select2-drop-above.select2-dropdown-open.select2-container-multi .select2-choices{border-bottom-color:#ccc;border-top-color:#fff;border-radius:0 0 4px 4px;}.select2-container-multi .select2-choices .select2-search-field input{color:#555;margin:0;padding:6px 12px 4px;}.select2-container-multi .select2-choices .select2-search-field input.select2-default{color:#999 !important;}.select2-container-multi .select2-choices .select2-search-choice{margin:4px 0 0 8px;}.select2-drop-mask{z-index:9999;}.ai1ec-modal-open .select2-drop-mask,.ai1ec-has-affixed-toolbar .select2-drop-mask{z-index:19999;}.select2-drop{background-color:#fff;border-color:rgba(82,168,236,0.8);color:#333;font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;font-size:13px;line-height:1.428571429;z-index:10000;}.ai1ec-modal-open .select2-drop,.ai1ec-has-affixed-toolbar .select2-drop{z-index:20000;}.select2-results{margin:4px 0;padding:0;}.select2-results .select2-highlighted{color:#333;background-color:#f5f5f5;}.select2-results .select2-no-results,.select2-results .select2-searching,.select2-results .select2-selection-limit{background-color:#ebebeb;}.timely a.select2-search-choice-close{-webkit-transition:none;transition:none;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/select2.png\') right top no-repeat;left:5px;top:3px;}.select2-container .ai1ec-color-swatch,.select2-container .ai1ec-color-swatch-empty,.select2-drop .ai1ec-color-swatch,.select2-drop .ai1ec-color-swatch-empty{width:7px;height:7px;}.ai1ec-s2-with-icon{position:relative;}.ai1ec-s2-with-icon > i{font-size:1.25em;left:10px;line-height:1em;position:absolute;top:8px;}.ai1ec-s2-with-icon .select2-choices{padding-left:1.8em;}input.ai1ec-datepicker[readonly],input.ai1ec-timepicker[readonly]{cursor:pointer;}.ai1ec-datepicker{font-size:11.05px;padding:5.525px;margin-left:5px;}.ai1ec-datepicker.ai1ec-right-aligned{margin-left:0;}.ai1ec-datepicker.ai1ec-right-aligned:before{left:auto;right:6px;}.ai1ec-datepicker.ai1ec-right-aligned:after{left:auto;right:7px;}.ai1ec-datepicker table th,.ai1ec-datepicker table td{padding:0;vertical-align:middle;}.ai1ec-datepicker table tr td.ai1ec-today,.ai1ec-datepicker table tr td.ai1ec-today:hover,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-today.ai1ec-disabled:hover{background:#f5f5d5;}.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active:hover,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-active.ai1ec-active.ai1ec-disabled:hover{background:#6489ad;color:#fff;text-shadow:none;}.ai1ec-datepicker table tr td.ai1ec-day:hover,.ai1ec-datepicker table tr td.ai1ec-day.ai1ec-focused{background-color:#f5f5f5;}.ai1ec-datepicker table tr td.ai1ec-old,.ai1ec-datepicker table tr td.ai1ec-new{color:#858585;}.ai1ec-datepicker table tr td.ai1ec-disabled,.ai1ec-datepicker table tr td.ai1ec-disabled:hover{background:none;color:#c2c2c2;}.ai1ec-datepicker table tr td span:hover{background-color:#f5f5f5;}.ai1ec-datepicker table tr td span.ai1ec-old{color:#858585;}.ai1ec-datepicker table tr td span.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-disabled:hover{background:none;color:#c2c2c2;}.ai1ec-datepicker table tr td span.ai1ec-active,.ai1ec-datepicker table tr td span.ai1ec-active:hover,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled,.ai1ec-datepicker table tr td span.ai1ec-active.ai1ec-disabled:hover{background-color:#f5f5f5;-webkit-box-shadow:none;box-shadow:none;color:#333;text-shadow:none;}.ai1ec-datepicker th{font-weight:bold;}.ai1ec-datepicker thead tr:first-child th:hover,.ai1ec-datepicker tfoot tr:first-child th:hover{background-color:#f5f5f5;}.ai1ec-datepicker thead tr:first-child th.today,.ai1ec-datepicker tfoot tr:first-child th.today{display:table-cell !important;filter:alpha(opacity=100) !important;margin:0 !important;overflow:visible !important;opacity:1 !important;padding:0 !important;height:22.1px !important;width:24.31px !important;}.ai1ec-bootstrap-timepicker table{border:none;}.ai1ec-bootstrap-timepicker table td{height:auto;}.ai1ec-bootstrap-timepicker table td a:hover{background-color:#f5f5f5;border:none;}.ai1ec-datepicker:before,.ai1ec-bootstrap-timepicker.ai1ec-dropdown-menu:before{border-bottom-color:rgba(0,0,0,0.15);}.ai1ec-datepicker:after,.ai1ec-bootstrap-timepicker.ai1ec-dropdown-menu:after{border-bottom-color:#fff;}.ai1ec-collapse.ai1ec-in.ai1ec-timepicker-visible{overflow:visible;}.ai1ec-fileupload{margin-bottom:0;}.timely a,.timely a:link,.timely a:visited,.timely a:active,.timely a:hover,#ai1ec-container a,#ai1ec-container a:link,#ai1ec-container a:visited,#ai1ec-container a:active,#ai1ec-container a:hover{font-weight:normal;text-decoration:none !important;box-shadow:none;}.timely img,#ai1ec-container img{background:none;border:none;border-radius:0;-webkit-box-shadow:none;box-shadow:none;max-width:none;margin:0;padding:0;}.timely .alignleft,.timely.alignleft,#ai1ec-container .alignleft,#ai1ec-container.alignleft{float:left;margin:0 16px 8px 0;}.timely .alignright,.timely.alignright,#ai1ec-container .alignright,#ai1ec-container.alignright{float:right;margin:0 0 8px 16px;}.timely small,#ai1ec-container small{margin:0 !important;}.timely table,#ai1ec-container table{line-height:inherit;}.timely tr,.timely th,.timely td,#ai1ec-container tr,#ai1ec-container th,#ai1ec-container td{background:none;border:0;padding:0;}.timely .ai1ec-pagination a.ai1ec-prev-page i,.timely .ai1ec-pagination a.ai1ec-next-page i,#ai1ec-container .ai1ec-pagination a.ai1ec-prev-page i,#ai1ec-container .ai1ec-pagination a.ai1ec-next-page i{font-size:inherit !important;}.timely{margin:0;font-family:\"Helvetica Neue\", Helvetica, Arial, sans-serif;font-size:13px;line-height:1.428571429;color:#333;word-wrap:break-word;}.timely a{border:none;}.timely form{margin:0;}.timely .ai1ec-placeholder{color:#999;}.timely .ai1ec-form-control[disabled],.timely .ai1ec-form-control[readonly]{border-color:#d9d9d9;cursor:auto;}.timely .ai1ec-form-control[readonly]{background-color:#fff;border-color:#ccc;}.timely input[type=\"radio\"],.timely input[type=\"checkbox\"]{margin-top:3px;}.timely textarea.ai1ec-form-control{height:auto;}.timely .ai1ec-help-block{margin-top:2px;margin-bottom:5px;}.timely .ai1ec-form-group{margin-bottom:10px;}.timely label{font-weight:normal;}.timely button.ai1ec-close{padding:0;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;}.ai1ec-modal-open{position:static;}.ai1ec-modal-open .ai1ec-dropdown-menu{z-index:20040 !important;}.ai1ec-modal-open .ai1ec-dropdown.ai1ec-open{*z-index:20040 !important;}.ai1ec-modal-open .ai1ec-popover{z-index:20050 !important;}.ai1ec-modal-open .ai1ec-tooltip{z-index:20075 !important;}.ai1ec-loading{position:absolute;z-index:9;top:0;left:0;width:100%;height:100%;background:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar/public/themes-ai1ec/vortex/img/ajax-loader.gif\') no-repeat center center;background-color:rgba(255,255,255,0.5);display:none;}#ai1ec-calendar-view-container .ai1ec-loading{background-color:transparent;background-position:center 150px;}.ai1ec-modal > .ai1ec-loading{border-radius:5px;}.timely-widget{min-height:62px;position:relative;}.ai1ec-widget-loading{position:absolute;z-index:2;width:100%;}.ai1ec-widget-loading > small{border-radius:4px;background:#fff;color:#333 !important;display:inline-block;opacity:0.8;filter:alpha(opacity=80);padding:0.5em;}.entry-content .timely a,.comment-content .timely a,.site-footer .widget .timely a{color:#3d6b99;}.entry-content .timely a:visited,.comment-content .timely a:visited,.site-footer .widget .timely a:visited{color:#3d6b99;}.entry-content .timely a:hover,.comment-content .timely a:hover,.site-footer .widget .timely a:hover{color:#335980;}.entry-content .timely .ai1ec-btn-default,.comment-content .timely .ai1ec-btn-default,.site-footer .widget .timely .ai1ec-btn-default{color:#333 !important;}.entry-content .timely .ai1ec-btn-default:hover,.comment-content .timely .ai1ec-btn-default:hover,.site-footer .widget .timely .ai1ec-btn-default:hover{color:#333 !important;}.entry-content .timely .ai1ec-dropdown-menu > li > a,.comment-content .timely .ai1ec-dropdown-menu > li > a,.site-footer .widget .timely .ai1ec-dropdown-menu > li > a{color:#333;}.entry-content .timely .ai1ec-dropdown-menu > li > a:hover,.entry-content .timely .ai1ec-dropdown-menu > li > a:focus,.comment-content .timely .ai1ec-dropdown-menu > li > a:hover,.comment-content .timely .ai1ec-dropdown-menu > li > a:focus,.site-footer .widget .timely .ai1ec-dropdown-menu > li > a:hover,.site-footer .widget .timely .ai1ec-dropdown-menu > li > a:focus{color:#262626;}.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a,.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a:hover,.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a:focus,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a:hover,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-active > a:focus,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-active > a,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-active > a:hover,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-active > a:focus{color:#fff;}.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a,.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:hover,.entry-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:focus,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:hover,.comment-content .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:focus,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:hover,.site-footer .widget .timely .ai1ec-dropdown-menu > .ai1ec-disabled > a:focus{color:#999;}.entry-content .timely .ai1ec-nav > li,.comment-content .timely .ai1ec-nav > li,.site-footer .widget .timely .ai1ec-nav > li{margin:0;}.entry-content .ai1ec-agenda-widget-view .ai1ec-date-title,.entry-content .ai1ec-agenda-view .ai1ec-date-title,.comment-content .ai1ec-agenda-widget-view .ai1ec-date-title,.comment-content .ai1ec-agenda-view .ai1ec-date-title,.site-footer .widget .ai1ec-agenda-widget-view .ai1ec-date-title,.site-footer .widget .ai1ec-agenda-view .ai1ec-date-title{color:#525252;}.ai1ec-field-label{font-size:12.155px;font-weight:bold;color:#aaa;text-transform:uppercase;text-align:right;}@media (max-width: 767px){.ai1ec-field-label{text-align:left;}}.ai1ec-allday-badge{background:#3d6b99;border-radius:0.9em;-webkit-box-shadow:;box-shadow:;color:#fff;display:inline-block;font-size:0.85em;font-weight:normal;margin:0 0 1px;opacity:0.9;filter:alpha(opacity=90);padding:0 0.7em 0.05em;vertical-align:middle;}.ai1ec-no-results{color:#858585;}.ai1ec-centered{text-align:center;}.ai1ec-prose p,.ai1ec-prose ul,.ai1ec-prose ol,.ai1ec-prose li{font-size:14.04px;line-height:1.7142857148;}.ai1ec-prose p,.ai1ec-prose ul,.ai1ec-prose ol{margin-bottom:10.8px;}.ai1ec-category{border-radius:4px;-webkit-box-shadow:inset 0 0 1px rgba(38,38,38,0.5);box-shadow:inset 0 0 1px rgba(38,38,38,0.5);cursor:pointer;display:inline-block;font-size:0.9em;line-height:2em !important;margin:1px 0;padding:0 0.5em !important;text-transform:uppercase;white-space:nowrap;color:#333;}.ai1ec-category:hover,.ai1ec-active > .ai1ec-category{background-color:#f5f5f5;border-color:#f5f5f5;-webkit-box-shadow:inset 0 0 2px rgba(38,38,38,0.3) ;box-shadow:inset 0 0 2px rgba(38,38,38,0.3) ;color:#262626;}.ai1ec-color-swatch,.ai1ec-color-swatch-empty{display:inline-block;height:8px;margin:0 1px;padding:1px;width:8px;}.ai1ec-color-swatch{border-radius:5px;border-color:rgba(0,0,0,0.5);opacity:0.8;filter:alpha(opacity=80);}.ai1ec-tag{border-radius:4px;color:#3d6b99;cursor:pointer;display:inline-block !important;line-height:1.7em !important;margin:1px 0 0;padding:0 4px !important;white-space:nowrap;}.ai1ec-tag i{padding-right:3px;}a.ai1ec-custom-filter{border-radius:4px;-webkit-box-shadow:inset 0 0 1px rgba(38,38,38,0.5);box-shadow:inset 0 0 1px rgba(38,38,38,0.5);cursor:pointer;display:inline-block;font-size:0.9em;line-height:2em !important;margin:1px 0;padding:0 0.5em !important;text-transform:uppercase;white-space:nowrap;color:#333;}.ai1ec-tag:hover,.ai1ec-active > .ai1ec-tag{background-color:#f5f5f5;border-color:#f5f5f5;-webkit-box-shadow:inset 0 0 2px rgba(38,38,38,0.3) ;box-shadow:inset 0 0 2px rgba(38,38,38,0.3) ;color:#262626;}.ai1ec-event-avatar{background-color:#fff;-webkit-box-shadow:0 1px 4px rgba(0,0,0,0.4);box-shadow:0 1px 4px rgba(0,0,0,0.4);}.ai1ec-event-avatar img{height:auto;display:block;min-height:90px;width:auto;}.ai1ec-agenda-widget-view .ai1ec-date-title,.ai1ec-agenda-view .ai1ec-date-title{border:1px solid #c2c2c2;border-top:none;border-radius:5px;-webkit-box-shadow:0 2px 2px rgba(0,0,0,0.08);box-shadow:0 2px 2px rgba(0,0,0,0.08);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;color:#525252;float:left;font-weight:bold !important;background-image:-webkit-linear-gradient(#fff,#fff 1em,#e7e7e7);background-image:linear-gradient(#fff,#fff 1em,#e7e7e7);background-repeat:no-repeat;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffffff\', endColorstr=\'#ffe6e6e6\', GradientType=0);filter:none \\9;line-height:1.2em;margin:6.5px 0.75em;overflow:hidden;text-align:center;text-shadow:0 1px 0 #fff;width:4em;}.ai1ec-agenda-widget-view .ai1ec-date-title:hover,.ai1ec-agenda-view .ai1ec-date-title:hover{color:#333 !important;}.ai1ec-agenda-widget-view .ai1ec-month,.ai1ec-agenda-view .ai1ec-month{background:#6689ac;border-radius:4px 4px 0 0;color:#fff;font-size:0.8em;letter-spacing:0.2em;padding:0 0.2em;text-transform:uppercase;text-shadow:0 -1px 0 rgba(0,0,0,0.25);}.ai1ec-agenda-widget-view .ai1ec-day,.ai1ec-agenda-view .ai1ec-day{font-size:2em;padding:0.35em 0 0.22em;}.ai1ec-agenda-widget-view .ai1ec-weekday,.ai1ec-agenda-view .ai1ec-weekday{font-size:0.8em;padding:0 0 0.2em;}.ai1ec-agenda-widget-view .ai1ec-year,.ai1ec-agenda-view .ai1ec-year{background-color:#e4e4e4;-webkit-box-shadow:inset 0 3px 3px rgba(0,0,0,0.08);box-shadow:inset 0 3px 3px rgba(0,0,0,0.08);font-size:0.7em;letter-spacing:0.2em;padding:0 0.2em;}.ai1ec-agenda-widget-view .ai1ec-date,.ai1ec-agenda-view .ai1ec-date{border-top:1px solid #e5e5e5;background:#f5f5f5;background:-webkit-gradient(linear,0 0,0 100%,from(#f2f2f2),color-stop(1em,#f2f2f2),to(#fff));background:-webkit-linear-gradient(#f2f2f2,#f2f2f2 1em,#fff);background:-moz-linear-gradient(top,#f2f2f2,#f2f2f2 1em,#fff);background:-ms-linear-gradient(#f2f2f2,#f2f2f2 1em,#fff);background:-o-linear-gradient(#f2f2f2,#f2f2f2 1em,#fff);background:linear-gradient(#f2f2f2,#f2f2f2 1em,#fff);background-repeat:no-repeat;}.ai1ec-agenda-widget-view .ai1ec-date.ai1ec-today,.ai1ec-agenda-view .ai1ec-date.ai1ec-today{border-top:1px solid #f0f0a9;background:#f6f6cc;background:-webkit-gradient(linear,0 0,0 100%,from(#f4f4bf),color-stop(1em,#f4f4bf),to(#fff));background:-webkit-linear-gradient(#f4f4bf,#f4f4bf 1em,#fff);background:-moz-linear-gradient(top,#f4f4bf,#f4f4bf 1em,#fff);background:-ms-linear-gradient(#f4f4bf,#f4f4bf 1em,#fff);background:-o-linear-gradient(#f4f4bf,#f4f4bf 1em,#fff);background:linear-gradient(#f4f4bf,#f4f4bf 1em,#fff);background-repeat:no-repeat;}.ai1ec-agenda-widget-view .ai1ec-event-description img,.ai1ec-agenda-view .ai1ec-event-description img{max-width:100% !important;}.ai1ec-agenda-widget-view{max-width:500px;}.ai1ec-agenda-widget-view .ai1ec-date-events{margin:0 0.5em 0 0;}.ai1ec-agenda-widget-view .ai1ec-date{float:left;width:100%;}.ai1ec-agenda-widget-view .ai1ec-date-title{font-size:0.9em;}.ai1ec-agenda-widget-view .ai1ec-event{clear:right;margin:6.5px 0 6.5px 4.8em;padding:0;position:relative;}.ai1ec-agenda-widget-view .ai1ec-event > a{color:#3d6b99;display:block;background:#fff;border:1px solid #ccc;border-radius:0.4em;padding:0.2em 0.4em;}.ai1ec-agenda-widget-view .ai1ec-event > a:hover{border-color:#808080;color:#335980;}.ai1ec-agenda-widget-view .ai1ec-event .ai1ec-event-time{font-weight:bold;}.ai1ec-agenda-widget-view .ai1ec-event .ai1ec-event-title{font-weight:normal;}.ai1ec-agenda-widget-view .ai1ec-event .ai1ec-allday-badge{vertical-align:bottom;}.ai1ec-subscribe-dropdown{padding:0 !important;}.ai1ec-subscribe-dropdown > .ai1ec-subscribe{display:inline-block;padding:5px 10px;}.ai1ec-subscribe-dropdown.ai1ec-btn-xs > .ai1ec-subscribe{padding:1px 5px;}.ai1ec-popover.ai1ec-popup{text-align:left;border-color:#ccc;width:170px;}.ai1ec-popover.ai1ec-popup .ai1ec-popover-content{background:#fff;color:#333;font-size:13px;font-weight:normal;padding:5px 8px;position:relative;z-index:2;}.ai1ec-popover.ai1ec-popup .ai1ec-event-time{background:#eee;font-size:11.05px;font-weight:bold;margin:2px -8px 0;padding:1px 8px;}.ai1ec-popover.ai1ec-popup .ai1ec-event-avatar{margin:6px auto;position:relative;width:85%;}.ai1ec-popover.ai1ec-popup .ai1ec-event-avatar img{width:100%;}.ai1ec-popover.ai1ec-popup .ai1ec-color-swatches{float:right;font-size:0.9em;}.ai1ec-popover.ai1ec-popup .ai1ec-color-swatch{padding:1px;}.ai1ec-popover.ai1ec-popup .post-edit-link{font-size:11px;margin-left:2px;white-space:nowrap;}.ai1ec-popover.ai1ec-popup .post-edit-link i{font-size:13px;}.ai1ec-popover.ai1ec-popup.ai1ec-left.ai1ec-popup-in-oneday-view{margin-left:49px;}.ai1ec-popup-title{font-size:12.35px;font-weight:bold;line-height:1.428571429;background:none;border-bottom:none;padding:0;}.ai1ec-popup-title a{font-weight:bold !important;}.ai1ec-popup-title a.ai1ec-buy-tickets{font-weight:normal !important;}.ai1ec-popup-excerpt{font-size:11.05px;margin-top:2px;}img[data-ai1ec-hidden]{display:none;}.ai1ec-single-event .ai1ec-event-details,.ai1ec-multi-event .ai1ec-event-details{margin:13.5px 0;}.ai1ec-single-event .ai1ec-event-details .ai1ec-row,.ai1ec-multi-event .ai1ec-event-details .ai1ec-row{margin-bottom:4.5px;}.ai1ec-single-event .ai1ec-field-label,.ai1ec-multi-event .ai1ec-field-label{line-height:25px;}.ai1ec-single-event .ai1ec-time .ai1ec-field-value,.ai1ec-multi-event .ai1ec-time .ai1ec-field-value{font-size:1.2em;}.ai1ec-single-event .ai1ec-time .ai1ec-field-value .ai1ec-allday-badge,.ai1ec-multi-event .ai1ec-time .ai1ec-field-value .ai1ec-allday-badge{font-size:0.75em;line-height:1.4em;}.ai1ec-single-event .ai1ec-recurrence,.ai1ec-multi-event .ai1ec-recurrence{vertical-align:bottom;}.ai1ec-single-event .ai1ec-recurrence .ai1ec-btn.ai1ec-disabled,.ai1ec-multi-event .ai1ec-recurrence .ai1ec-btn.ai1ec-disabled{cursor:default;opacity:1;filter:alpha(opacity=100);pointer-events:auto;}.ai1ec-single-event .ai1ec-category,.ai1ec-multi-event .ai1ec-category{font-size:0.8em;}.ai1ec-single-event .ai1ec-tag,.ai1ec-multi-event .ai1ec-tag{font-size:0.85em;}.ai1ec-single-event .ai1ec-gmap-container,.ai1ec-multi-event .ai1ec-gmap-container{border:1px solid #ddd;border-radius:4px;position:relative;}.ai1ec-single-event #ai1ec-gmap-canvas,.ai1ec-multi-event #ai1ec-gmap-canvas{width:100%;height:200px;}.ai1ec-single-event .ai1ec-gmap-link,.ai1ec-multi-event .ai1ec-gmap-link{bottom:-1px;display:none;margin:0;position:absolute;right:-1px;}.ai1ec-single-event .ai1ec-gmap-container:hover .ai1ec-gmap-link,.ai1ec-multi-event .ai1ec-gmap-container:hover .ai1ec-gmap-link{display:block;}.ai1ec-single-event #ai1ec-gmap-canvas input,.ai1ec-multi-event #ai1ec-gmap-canvas input{margin:0 !important;}.ai1ec-single-event .ai1ec-gmap-placeholder,.ai1ec-multi-event .ai1ec-gmap-placeholder{border-radius:4px;color:#3d6b99;cursor:pointer;height:12em;border:1px dashed #ddd;min-width:18em;margin-bottom:0.3em;text-align:center;width:100%;}.ai1ec-single-event .ai1ec-gmap-placeholder:hover,.ai1ec-multi-event .ai1ec-gmap-placeholder:hover{border-color:#b7b7b7;color:#335980;}.ai1ec-single-event .ai1ec-gmap-placeholder strong,.ai1ec-multi-event .ai1ec-gmap-placeholder strong{position:relative;top:45%;}.ai1ec-single-event .ai1ec-gmap-container-hidden,.ai1ec-multi-event .ai1ec-gmap-container-hidden{position:absolute !important;visibility:hidden;}.ai1ec-single-event .ai1ec-contact span,.ai1ec-multi-event .ai1ec-contact span{display:inline-block;white-space:nowrap;}.ai1ec-single-event .ai1ec-contact span i:first-child:before,.ai1ec-multi-event .ai1ec-contact span i:first-child:before{text-align:center;width:1.7em;}.ai1ec-single-event{position:relative;font-size:14.3px;line-height:22.5px;}.ai1ec-single-event .ai1ec-event-avatar{max-width:40%;}.ai1ec-single-event .ai1ec-event-avatar img{max-width:300px;max-height:300px;min-height:0;width:100%;}.ai1ec-single-event .ai1ec-event-details{overflow:hidden;}.ai1ec-single-event .ai1ec-actions{float:right !important;margin-left:10px;}.ai1ec-single-event .ai1ec-actions .ai1ec-btn-group-vertical{margin-bottom:10px;display:block;}.ai1ec-single-event .ai1ec-actions .ai1ec-btn{font-size:12px;text-align:left;}.ai1ec-single-event .ai1ec-actions .ai1ec-fa-fw{width:20px;}.ai1ec-single-event .timely-tickets-row td{vertical-align:top;padding-bottom:10px;}.ai1ec-single-event .timely-tickets-row td.ai1ec-tickets-info{padding-left:12px;}.ai1ec-single-event .timely-tickets-row td.ai1ec-tickets-info .ai1ec-tickets-description{color:#666;line-height:1.1;font-size:12px;}.ai1ec-single-event .timely-tickets-row .ai1ec-tickets-info-inactive .ai1ec-tickets-title{text-decoration:line-through;color:#666;}.ai1ec-single-event .timely-tickets-row .ai1ec-tickets-availability{font-size:12px;white-space:nowrap;}.ai1ec-single-event .timely-tickets-row .ai1ec-tickets-amount{text-align:right;width:1px;}.ai1ec-recurrence-exclude{font-size:smaller;color:#858585;}.ai1ec-multi-event,.ai1ec-excerpt{font-size:12.87px;line-height:20.25px;}.ai1ec-multi-event .ai1ec-field-label,.ai1ec-excerpt .ai1ec-field-label{margin-top:1.43px;}.ai1ec-excerpt{margin-bottom:11.25px;}.ai1ec-event-footer{color:#858585;clear:both;margin:9px 0;}#ai1ec-container{clear:both;}#ai1ec-calendar-view-container{position:relative;-webkit-transform:translateZ(0);z-index:1;}#ai1ec-calendar-view .post-edit-link{white-space:nowrap;}.ai1ec-calendar-toolbar{background-color:#fff;border:1px solid #dbdbdb;border-radius:6px;margin-bottom:8px;padding:0 8px;}.ai1ec-calendar-toolbar .ai1ec-nav{margin:0 !important;padding:0 !important;}.timely .ai1ec-calendar-toolbar .ai1ec-nav-pills > li > a{border-radius:0;}.ai1ec-calendar-toolbar.ai1ec-affix{z-index:10030;top:0;border-top-left-radius:0;border-top-right-radius:0;-webkit-transition:border-radius 0.3s;transition:border-radius 0.3s;-webkit-transition:box-shadow 0.4s;transition:box-shadow 0.4s;-webkit-box-shadow:0 3px 12px rgba(0,0,0,0.2);box-shadow:0 3px 12px rgba(0,0,0,0.2);}.ai1ec-calendar-toolbar.ai1ec-affix .ai1ec-views-dropdown{margin-bottom:4px;clear:both;}.ai1ec-calendar-toolbar.ai1ec-affix .ai1ec-clearfix{padding-top:8px;}.ai1ec-calendar-toolbar.ai1ec-empty-toolbar.ai1ec-affix-top{border:none;margin:0;}.ai1ec-title-buttons .ai1ec-btn-group{margin-left:8px;}.ai1ec-title-buttons .ai1ec-contribution-buttons{float:right;margin-top:5px;}#ai1ec-bs-modes{width:0;height:0;overflow:hidden;}.no-touch .ai1ec-calendar-toolbar .ai1ec-dropdown:hover > .ai1ec-dropdown-menu{display:block;}.ai1ec-views-dropdown{margin-left:5px;}.ai1ec-views-dropdown i{font-size:1.9em;line-height:0.75em;vertical-align:-37%;}.ai1ec-views-dropdown .ai1ec-dropdown-menu{min-width:0;}.ai1ec-category-filter .ai1ec-category{display:block;}.ai1ec-filters .ai1ec-color-swatch{height:7px;width:7px;}.ai1ec-filters .ai1ec-dropdown-toggle > i{font-size:1.25em;line-height:0.8em;vertical-align:-15%;}.ai1ec-filters .ai1ec-dropdown-menu{padding:1px 2px;}.ai1ec-tag-filter .ai1ec-dropdown-menu{max-height:250px;min-width:200px;overflow:auto;}.ai1ec-select2-filters{clear:both;}.ai1ec-select2-filters .select2-container{margin:2px 0;width:100%;}.ai1ec-clear-filter{cursor:pointer;display:none !important;}.ai1ec-dropdown.ai1ec-active > .ai1ec-dropdown-toggle > i{display:none !important;}.ai1ec-dropdown.ai1ec-active > .ai1ec-dropdown-toggle .ai1ec-clear-filter{display:inline !important;}.ai1ec-pagination > .ai1ec-btn{text-transform:uppercase;}.ai1ec-calendar-title,.ai1ec-calendar-title-short{font-size:13px;line-height:1em;}.ai1ec-calendar-title-short{display:none;}@media screen and (max-width: 767px){.ai1ec-calendar-title{display:none;}.ai1ec-calendar-title-short{display:inline;}}.ai1ec-minical-trigger{font-weight:bold !important;}.ai1ec-minical-trigger i{vertical-align:baseline;}#ai1ec-print-button i{font-size:14px;margin-top:-2px;}table.ai1ec-month-view,.ai1ec-week-view table,.ai1ec-oneday-view table{border-collapse:collapse;border:1px solid #ddd !important;margin:0 !important;background:#fff;table-layout:fixed !important;clear:both;width:100% !important;}table.ai1ec-month-view a.ai1ec-multiday,.ai1ec-week-view table a.ai1ec-multiday,.ai1ec-oneday-view table a.ai1ec-multiday{-webkit-transition:none !important;transition:none !important;}table.ai1ec-month-view{margin-bottom:6px !important;}table.ai1ec-week-view-original,table.ai1ec-oneday-view-original{visibility:hidden;height:400px;}table.ai1ec-week-view-original.tablescroll_body,table.ai1ec-oneday-view-original.tablescroll_body{visibility:visible;height:auto;}table.ai1ec-week-view-original.tablescroll_body,table.ai1ec-week-view-original.tablescroll_body tr:first-child td,table.ai1ec-oneday-view-original.tablescroll_body,table.ai1ec-oneday-view-original.tablescroll_body tr:first-child td{border-top:none !important;}.ai1ec-week-view .tablescroll_wrapper,.ai1ec-oneday-view .tablescroll_wrapper{border-bottom:1px solid #ddd;margin-bottom:6px;position:relative;width:auto !important;}.ai1ec-week-view table.tablescroll_head,.ai1ec-oneday-view table.tablescroll_head{border-bottom:none !important;}.ai1ec-week-view table.tablescroll_head th,.ai1ec-oneday-view table.tablescroll_head th{border-bottom:none !important;padding:2.48px !important;}.ai1ec-week-view .ai1ec-reveal-full-day,.ai1ec-oneday-view .ai1ec-reveal-full-day{float:right;margin:3px 3px 3px -3em;position:relative;}.ai1ec-week-view .ai1ec-day,.ai1ec-oneday-view .ai1ec-day{height:1440px;}.ai1ec-week-view th,.ai1ec-oneday-view th{position:relative;}.ai1ec-week-view th .ai1ec-weekday-date,.ai1ec-oneday-view th .ai1ec-weekday-date{font-size:15px;font-weight:normal;}.ai1ec-week-view th .ai1ec-weekday-day,.ai1ec-oneday-view th .ai1ec-weekday-day{font-size:12px;font-weight:normal;}.ai1ec-month-view td,.ai1ec-week-view td,.ai1ec-oneday-view td{border:1px solid #ddd !important;background:none !important;padding:0 !important;text-align:left;vertical-align:top;}.ai1ec-month-view th,.ai1ec-week-view th,.ai1ec-oneday-view th{border:none !important;background:#f5f5f5 !important;padding:0.2em !important;}.ai1ec-month-view td.ai1ec-empty{background:#f5f5f5 !important;}.ai1ec-month-view th,.ai1ec-week-view th,.ai1ec-week-view .ai1ec-hour-marker div,.ai1ec-week-view .ai1ec-allday-label,.ai1ec-oneday-view th,.ai1ec-oneday-view .ai1ec-hour-marker div,.ai1ec-oneday-view .ai1ec-allday-label{color:#9e9e9e !important;text-shadow:0 1px 0 #fff;}.ai1ec-month-view th,.ai1ec-oneday-view th{text-align:center !important;}.ai1ec-week-view th{text-align:left !important;}.ai1ec-month-view .ai1ec-day,.ai1ec-week-view .ai1ec-day,.ai1ec-week-view .ai1ec-allday-events,.ai1ec-oneday-view .ai1ec-day,.ai1ec-oneday-view .ai1ec-allday-events{position:relative;}.ai1ec-month-view .ai1ec-day-stretcher{float:left;height:94px;width:0;}.ai1ec-month-view .ai1ec-today,.ai1ec-week-view .ai1ec-today{background:#ffd !important;}.ai1ec-month-view .ai1ec-date{background:#eaf4ff;color:#a1a7ad;font-size:10pt;line-height:13px;height:13px;margin-bottom:1px;padding:0 0.4em;font-size:8pt;text-align:right;text-shadow:0 1px 0 #fff;}.ai1ec-week-view,.ai1ec-oneday-view{clear:both;}.ai1ec-week-view .ai1ec-grid-container,.ai1ec-oneday-view .ai1ec-grid-container{position:absolute;top:auto;left:0;right:0;}.ai1ec-week-view .ai1ec-now-marker,.ai1ec-week-view .ai1ec-hour-marker,.ai1ec-week-view .ai1ec-quarter-marker,.ai1ec-oneday-view .ai1ec-now-marker,.ai1ec-oneday-view .ai1ec-hour-marker,.ai1ec-oneday-view .ai1ec-quarter-marker{position:absolute;left:0;right:0;}.ai1ec-week-view .ai1ec-hour-marker,.ai1ec-oneday-view .ai1ec-hour-marker{border-top:1px solid #ddd;border-top:1px solid rgba(221,221,221,0.7);height:60px;background:rgba(221,221,221,0.4) !important;}.ai1ec-week-view .ai1ec-hour-marker.ai1ec-business-hour,.ai1ec-oneday-view .ai1ec-hour-marker.ai1ec-business-hour{background:none !important;}.ai1ec-week-view .ai1ec-hour-marker div,.ai1ec-week-view .ai1ec-allday-label,.ai1ec-oneday-view .ai1ec-hour-marker div,.ai1ec-oneday-view .ai1ec-allday-label{position:relative;z-index:2;margin-left:1px;padding:0 3px;font-size:8pt !important;font-weight:normal !important;background:#f5f5f5;float:left;border-radius:3px;}.ai1ec-week-view .ai1ec-allday-label,.ai1ec-oneday-view .ai1ec-allday-label{margin-top:1px;}.ai1ec-week-view .ai1ec-quarter-marker,.ai1ec-oneday-view .ai1ec-quarter-marker{border-top:1px solid #ddd;border-top:1px solid rgba(221,221,221,0.4);}.ai1ec-week-view .ai1ec-now-marker,.ai1ec-oneday-view .ai1ec-now-marker{border-top:2px solid #f2c539;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,0.35);box-shadow:inset 0 1px 1px rgba(0,0,0,0.35);height:4px;text-shadow:0 1px 1px rgba(0,0,0,0.4);z-index:2;}.ai1ec-week-view .ai1ec-now-marker div,.ai1ec-oneday-view .ai1ec-now-marker div{background-color:#f2c539;border-radius:0 0 3px 3px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,0.35);box-shadow:0 1px 1px rgba(0,0,0,0.35);color:#fff;opacity:0;filter:alpha(opacity=0);font-size:11px;float:left;padding:1px 4px;-webkit-transition:opacity 0.1s;transition:opacity 0.1s;}.ai1ec-week-view .ai1ec-now-marker:hover div,.ai1ec-oneday-view .ai1ec-now-marker:hover div{opacity:1;filter:alpha(opacity=100);}.ai1ec-month-view a.ai1ec-event-container,.ai1ec-week-view a.ai1ec-event-container,.ai1ec-oneday-view a.ai1ec-event-container{border:none;display:block;font-size:12px;opacity:0.85;filter:alpha(opacity=85);}.ai1ec-month-view a.ai1ec-event-container:hover,.ai1ec-month-view a.ai1ec-event-container.ai1ec-hover,.ai1ec-week-view a.ai1ec-event-container:hover,.ai1ec-week-view a.ai1ec-event-container.ai1ec-hover,.ai1ec-oneday-view a.ai1ec-event-container:hover,.ai1ec-oneday-view a.ai1ec-event-container.ai1ec-hover{opacity:1;filter:alpha(opacity=100);}.ai1ec-month-view .ai1ec-event,.ai1ec-week-view .ai1ec-event,.ai1ec-oneday-view .ai1ec-event{max-height:100%;overflow:hidden;margin:1px 0 0;padding:0 3px 1px;white-space:nowrap;}.ai1ec-month-view .ai1ec-event-time,.ai1ec-week-view .ai1ec-event-time,.ai1ec-oneday-view .ai1ec-event-time{font-weight:bold;font-size:11px;}.ai1ec-month-view a.ai1ec-event-container,.ai1ec-week-view .ai1ec-allday-events a.ai1ec-event-container,.ai1ec-oneday-view .ai1ec-allday-events a.ai1ec-event-container{position:relative;}.ai1ec-month-view .ai1ec-allday .ai1ec-event,.ai1ec-month-view .ai1ec-multiday .ai1ec-event,.ai1ec-week-view .ai1ec-allday-events .ai1ec-allday .ai1ec-event,.ai1ec-week-view .ai1ec-allday-events .ai1ec-multiday .ai1ec-event,.ai1ec-oneday-view .ai1ec-allday-events .ai1ec-allday .ai1ec-event,.ai1ec-oneday-view .ai1ec-allday-events .ai1ec-multiday .ai1ec-event{border-radius:3px;background-color:#3d6b99;color:#fff;text-shadow:0 1px 1px rgba(0,0,0,0.4);}.ai1ec-oneday-view a.ai1ec-event-container{margin-right:10px;}.ai1ec-oneday-view .ai1ec-allday-events a.ai1ec-event-container{margin:0 0 0 53px;}.ai1ec-week-view .ai1ec-week a.ai1ec-event-container,.ai1ec-oneday-view .ai1ec-oneday a.ai1ec-event-container{background-color:#fff;background-image:-webkit-linear-gradient(top,#f5f8fa,#c5d3e0 120px);background-image:-moz-linear-gradient(top,#f5f8fa,#c5d3e0 120px);background-image:-ms-linear-gradient(top,#f5f8fa,#c5d3e0 120px);background-image:-o-linear-gradient(top,#f5f8fa,#c5d3e0 120px);background-image:linear-gradient(top,#f5f8fa,#c5d3e0 120px);border:1px solid #9eb5cc;border-radius:3px;-webkit-box-shadow:1px 2px 4px rgba(0,0,0,0.15);box-shadow:1px 2px 4px rgba(0,0,0,0.15);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;line-height:15px;margin:0 -1px;min-height:34px;position:absolute;right:0;text-shadow:0 1px 0 #fff;}.ai1ec-week-view .ai1ec-week a.ai1ec-event-container.ai1ec-raised,.ai1ec-oneday-view .ai1ec-oneday a.ai1ec-event-container.ai1ec-raised{z-index:5;}.ai1ec-week-view .ai1ec-week a.ai1ec-event-container:hover,.ai1ec-oneday-view .ai1ec-oneday a.ai1ec-event-container:hover{border-color:#99acc0;}.ai1ec-week-view .ai1ec-week .ai1ec-event,.ai1ec-oneday-view .ai1ec-oneday .ai1ec-event{margin:0;position:absolute;bottom:1px;left:0;right:0;top:1px;}.ai1ec-week-view .ai1ec-week .ai1ec-event-title,.ai1ec-oneday-view .ai1ec-oneday .ai1ec-event-title{display:block;white-space:normal;}.ai1ec-month-view .ai1ec-event{height:14px;line-height:14px;margin:0 0 1px;}.ai1ec-word-wrap.ai1ec-month-view .ai1ec-event{border-bottom:1px dotted #ddd;height:auto;overflow:visible;padding-top:1px;padding-bottom:2px;white-space:normal;}.ai1ec-word-wrap.ai1ec-month-view .ai1ec-multiday .ai1ec-event{border-bottom:none;overflow:hidden;padding-top:0;padding-bottom:1px;white-space:nowrap;}.ai1ec-word-wrap.ai1ec-month-view .ai1ec-allday .ai1ec-event{border-bottom:none;}.ai1ec-month-view .ai1ec-allday{padding-left:1px;width:97.5%;}.ai1ec-month-view .ai1ec-allday.ai1ec-multiday{padding-left:0;}.ai1ec-month-view .ai1ec-multiday{z-index:1;}.ai1ec-month-view .ai1ec-multiday-arrow1{background:#3d6b99;border:7px solid #fff;border-left-color:#3d6b99;border-right-width:0;height:1px;position:absolute;right:0;top:0;width:0;}.ai1ec-month-view .ai1ec-multiday-arrow2{border:7px solid #3d6b99;border-left-color:#fff;border-right-width:2px;height:1px;left:0;position:absolute;top:0;width:0;}.ai1ec-month-view .ai1ec-multiday-bar{background:#3d6b99;border-radius:3px;height:14px;left:0;position:absolute;top:0;}.ai1ec-month-view .ai1ec-multiday-bar .ai1ec-event-title{margin-left:7px;}.ai1ec-month-view .ai1ec-multiday-bar .ai1ec-event{margin:0;}.ai1ec-month-view .ai1ec-multiday-bar .ai1ec-event-time{display:none;}.ai1ec-month-view .ai1ec-event-dropdown{background:#fff;border:1px solid #e7e7e7;border-top:0;left:-1px;position:absolute;top:78px;width:90px;z-index:1000;}.ai1ec-month-view .ai1ec-obscured{display:none !important;}.ai1ec-month-view a.ai1ec-scroll-up,.ai1ec-month-view a.ai1ec-scroll-down{border:1px solid #ddd;border-radius:0.2em;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;left:50%;height:16px;line-height:14px;margin-left:-8px;position:relative;text-align:center;width:16px;}.ai1ec-month-view a.ai1ec-scroll-up:hover,.ai1ec-month-view a.ai1ec-scroll-down:hover{background-color:#ddd;}.ai1ec-month-view a.ai1ec-scroll-up.ai1ec-disabled,.ai1ec-month-view a.ai1ec-scroll-down.ai1ec-disabled{border:none;cursor:default;opacity:0.2;filter:alpha(opacity=20);padding:1px;}.ai1ec-month-view a.ai1ec-scroll-up.ai1ec-disabled:hover,.ai1ec-month-view a.ai1ec-scroll-down.ai1ec-disabled:hover{background-color:transparent;}.ai1ec-oneday-view .ai1ec-start-truncated .ai1ec-event-time,.ai1ec-week-view .ai1ec-start-truncated .ai1ec-event-time{display:none;}.ai1ec-oneday-view .ai1ec-start-truncated,.ai1ec-week-view .ai1ec-start-truncated{border-top-left-radius:0;border-top-right-radius:0;}.ai1ec-oneday-view .ai1ec-end-truncated,.ai1ec-week-view .ai1ec-end-truncated{border-bottom-left-radius:0;border-bottom-right-radius:0;}.ai1ec-oneday-view .ai1ec-start-truncator,.ai1ec-oneday-view .ai1ec-end-truncator,.ai1ec-week-view .ai1ec-start-truncator,.ai1ec-week-view .ai1ec-end-truncator{position:absolute;line-height:1em;font-size:7px;text-shadow:none;opacity:0.5;filter:alpha(opacity=50);}.ai1ec-oneday-view .ai1ec-start-truncator,.ai1ec-week-view .ai1ec-start-truncator{top:-1px;left:-1px;}.ai1ec-oneday-view .ai1ec-end-truncator,.ai1ec-week-view .ai1ec-end-truncator{bottom:-1px;right:-1px;}.ai1ec-agenda-view{clear:both;overflow:hidden;margin:0 0 6px;}.ai1ec-agenda-view .ai1ec-date-events{overflow:hidden;margin:0 0.75em 0 0;}@media screen and (-webkit-min-device-pixel-ratio: 0){.ai1ec-agenda-view .ai1ec-date-events{overflow:visible;display:-webkit-flex;-webkit-flex-wrap:wrap;}}.ai1ec-agenda-view .ai1ec-date{overflow:hidden;}.ai1ec-agenda-view .ai1ec-event-toggle{float:right;font-size:14px;font-weight:bold;color:#adadad;-webkit-transition:color 0.1s;transition:color 0.1s;}.ai1ec-agenda-view .ai1ec-event-toggle .ai1ec-fa-minus-circle{display:none;}.ai1ec-agenda-view .ai1ec-event{background:#fff;border:1px solid #ccc;border-radius:0.5em;clear:right;margin:6.5px 0;overflow:hidden;position:relative;padding:0.6em;-webkit-transition:border-color 0.1s;transition:border-color 0.1s;}@media screen and (-webkit-min-device-pixel-ratio: 0){.ai1ec-agenda-view .ai1ec-event{overflow:visible;width:100%;}.ai1ec-agenda-view .ai1ec-event + .ai1ec-event{margin:0 0 6.5px 0;}}.ai1ec-agenda-view .ai1ec-event.ai1ec-expanded{border-color:#808080;-webkit-box-shadow:0 2px 4px #e0e0e0;box-shadow:0 2px 4px #e0e0e0;}.ai1ec-agenda-view .ai1ec-event.ai1ec-expanded .ai1ec-event-toggle .ai1ec-fa-minus-circle{display:inline-block;}.ai1ec-agenda-view .ai1ec-event.ai1ec-expanded .ai1ec-event-toggle .ai1ec-fa-plus-circle{display:none;}.ai1ec-agenda-view .ai1ec-event .ai1ec-event-header{cursor:pointer;}.ai1ec-agenda-view .ai1ec-event .ai1ec-event-header:hover .ai1ec-event-toggle{color:#525252;}.ai1ec-agenda-view .ai1ec-event .ai1ec-event-title{color:#3d6b99;font-weight:bold;font-size:10.5pt;margin:0 0 0.4em;-webkit-transition:color 0.1s;transition:color 0.1s;}.ai1ec-agenda-view .ai1ec-event .ai1ec-event-time{font-size:9pt;font-weight:bold;opacity:0.8;filter:alpha(opacity=80);}.ai1ec-agenda-view .ai1ec-event .post-edit-link{opacity:0;filter:alpha(opacity=0);-webkit-transition:opacity 0.1s;transition:opacity 0.1s;}.ai1ec-agenda-view .ai1ec-event:hover{border-color:#808080;}.ai1ec-agenda-view .ai1ec-event:hover .ai1ec-event-title{color:#335980;}.ai1ec-agenda-view .ai1ec-event:hover .post-edit-link{opacity:1;filter:alpha(opacity=100);}.ai1ec-agenda-view .ai1ec-event-summary{display:none;}.ai1ec-agenda-view .ai1ec-event-summary.ai1ec-expanded{display:block;}.ai1ec-agenda-view .ai1ec-event-avatar{float:left;margin:0 16px 8px 0;max-width:40%;}.ai1ec-agenda-view .ai1ec-event-avatar img{max-width:300px;max-height:300px;min-height:0;width:100%;}.ai1ec-agenda-view .ai1ec-event-description{font-size:9pt;line-height:1.5em;margin-top:9px;}.ai1ec-agenda-view .ai1ec-event-summary-footer{clear:both;padding-top:10px;}.ai1ec-agenda-view .ai1ec-event-summary-footer .ai1ec-field-label{font-size:8pt;}.ai1ec-agenda-view .ai1ec-categories,.ai1ec-agenda-view .ai1ec-tags{font-size:8pt;margin-right:0.5em;}.ai1ec-agenda-view .ai1ec-actions{float:right;margin-top:-5px;}.ai1ec-print *{background:white !important;color:black !important;}.ai1ec-print body{margin:0;text-align:left;}.ai1ec-print #wpadminbar,.ai1ec-print #comments,.ai1ec-print #page > header{display:none;}.ai1ec-print #ai1ec-container{position:absolute;left:0;top:0;width:100%;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event.ai1ec-expanded{box-shadow:none;border:2px solid gray !important;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event-summary-footer{display:none;}.ai1ec-print .ai1ec-agenda-view .ai1ec-date-title{border-color:#cacaca;}.ai1ec-print .ai1ec-agenda-view .ai1ec-date-title:after{display:none;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event-summary .ai1ec-event-title{display:inline;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event-summary .ai1ec-event-time{display:inline;border:none !important;box-shadow:none !important;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event-description{padding:0 !important;}.ai1ec-print .ai1ec-agenda-view .ai1ec-event.ai1ec-allday .ai1ec-allday-label{border:none !important;box-shadow:none !important;padding-left:0.2em !important;}.ai1ec-print .timely .entry-meta,.ai1ec-print .timely .ai1ec-subscribe,.ai1ec-print .timely .ai1ec-subscribe-google,.ai1ec-print .ai1ec-agenda-view .ai1ec-event-expand,.ai1ec-print .ai1ec-btn-toolbar,.ai1ec-print .ai1ec-pagination,.ai1ec-print .ai1ec-calendar-toolbar,.ai1ec-print .ai1ec-read-more,.ai1ec-print .ai1ec-color-swatch,.ai1ec-print .post-edit-link,.ai1ec-print .ai1ec-event-toggle,.ai1ec-print .ai1ec-views-dropdown{display:none !important;}.ai1ec-print .ai1ec-event-header{cursor:text !important;}#ai1ec_clear_saved_view{margin-left:-4px;margin-right:5px;}.ai1ec-collapsible-toggle{cursor:pointer;}.ai1ec-subscribe-container .ai1ec-fa.ai1ec-fa-fw{width:20px;}@font-face{font-family:\'cfg-icons\';src:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar-custom-filter-groups/public/themes-ai1ec/vortex/font/cfg-icons.eot?jy0cna\');src:url(\'//localhost/wp-content/plugins/all-in-one-event-calendar-custom-filter-groups/public/themes-ai1ec/vortex/font/cfg-icons.eot?#iefixjy0cna\') format(\'embedded-opentype\'), url(data:application/x-font-woff;charset=utf-8;base64,) format(\'woff\'), url(data:font/truetype;charset=utf-8;base64,) format(\'truetype\'), url(\'//localhost/wp-content/plugins/all-in-one-event-calendar-custom-filter-groups/public/themes-ai1ec/vortex/font/cfg-icons.svg?jy0cna#cfg-icons\') format(\'svg\');font-weight:normal;font-style:normal;}[class^=\"ai1eccfgi-\"],[class*=\" ai1eccfgi-\"]{display:inline-block;font-family:\'cfg-icons\';speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}.ai1eccfgi-null{margin-right:-0.33em;}.ai1eccfgi-null.ai1ec-fa-fw{margin-right:inherit;}.ai1eccfgi-null:before{content:\'\\200A\';}.ai1eccfgi-explore:before{content:\"\\e600\";}.ai1eccfgi-nature:before{content:\"\\e601\";}.ai1eccfgi-nature-people:before{content:\"\\e602\";}.ai1eccfgi-palette:before{content:\"\\e603\";}.ai1eccfgi-directions-bike:before{content:\"\\e604\";}.ai1eccfgi-directions-bus:before{content:\"\\e605\";}.ai1eccfgi-directions-car:before{content:\"\\e606\";}.ai1eccfgi-directions-ferry:before{content:\"\\e607\";}.ai1eccfgi-directions-subway:before{content:\"\\e608\";}.ai1eccfgi-directions-train:before{content:\"\\e609\";}.ai1eccfgi-directions-transit:before{content:\"\\e60a\";}.ai1eccfgi-flight:before{content:\"\\e60b\";}.ai1eccfgi-hotel:before{content:\"\\e60c\";}.ai1eccfgi-local-florist:before{content:\"\\e60d\";}.ai1eccfgi-local-gas-station:before{content:\"\\e60e\";}.ai1eccfgi-local-library:before{content:\"\\e60f\";}.ai1eccfgi-local-mall:before{content:\"\\e610\";}.ai1eccfgi-local-pharmacy:before{content:\"\\e611\";}.ai1eccfgi-local-pizza:before{content:\"\\e612\";}.ai1eccfgi-local-taxi:before{content:\"\\e613\";}.ai1eccfgi-map:before{content:\"\\e614\";}.ai1eccfgi-traff:before{content:\"\\e615\";}.ai1eccfgi-camera:before{content:\"\\e616\";}.ai1eccfgi-film:before{content:\"\\e617\";}.ai1eccfgi-drink:before{content:\"\\e618\";}.ai1eccfgi-icecream:before{content:\"\\e619\";}.ai1eccfgi-cake:before{content:\"\\e61a\";}.ai1eccfgi-pacman:before{content:\"\\e61b\";}.ai1eccfgi-cassette:before{content:\"\\e61c\";}.ai1eccfgi-alarmclock:before{content:\"\\e61d\";}.ai1eccfgi-wallet:before{content:\"\\e61e\";}.ai1eccfgi-phone:before{content:\"\\e61f\";}.ai1eccfgi-sale:before{content:\"\\e620\";}.ai1eccfgi-vote:before{content:\"\\e621\";}.ai1eccfgi-tie:before{content:\"\\e622\";}.ai1eccfgi-football:before{content:\"\\e623\";}.ai1eccfgi-eightball:before{content:\"\\e624\";}.ai1eccfgi-bowling:before{content:\"\\e625\";}.ai1eccfgi-baseball:before{content:\"\\e626\";}.ai1eccfgi-soccer:before{content:\"\\e627\";}.ai1eccfgi-3dglasses:before{content:\"\\e628\";}.ai1eccfgi-microwave:before{content:\"\\e629\";}.ai1eccfgi-refrigerator:before{content:\"\\e62a\";}.ai1eccfgi-oven:before{content:\"\\e62b\";}.ai1eccfgi-washingmachine:before{content:\"\\e62c\";}.ai1eccfgi-mouse:before{content:\"\\e62d\";}.ai1eccfgi-hand:before{content:\"\\e62e\";}.ai1eccfgi-radio:before{content:\"\\e62f\";}.ai1eccfgi-satellite:before{content:\"\\e630\";}.ai1eccfgi-medal:before{content:\"\\e631\";}.ai1eccfgi-medal2:before{content:\"\\e632\";}.ai1eccfgi-davidstar:before{content:\"\\e633\";}.ai1eccfgi-cross:before{content:\"\\e634\";}.ai1eccfgi-moonandstar:before{content:\"\\e635\";}.ai1eccfgi-transformers:before{content:\"\\e636\";}.ai1eccfgi-batman:before{content:\"\\e637\";}.ai1eccfgi-spaceinvaders:before{content:\"\\e638\";}.ai1eccfgi-skeletor:before{content:\"\\e639\";}.ai1eccfgi-lamp:before{content:\"\\e63a\";}.ai1eccfgi-lamp2:before{content:\"\\e63b\";}.ai1eccfgi-bomb:before{content:\"\\e63c\";}.ai1eccfgi-archive:before{content:\"\\e63d\";}.ai1eccfgi-patch:before{content:\"\\e63e\";}.ai1eccfgi-pil:before{content:\"\\e63f\";}.ai1eccfgi-injection:before{content:\"\\e640\";}.ai1eccfgi-lamp3:before{content:\"\\e641\";}.ai1eccfgi-lamp4:before{content:\"\\e642\";}.ai1eccfgi-lamp5:before{content:\"\\e643\";}.ai1eccfgi-cube:before{content:\"\\e644\";}.ai1eccfgi-diamond:before{content:\"\\e645\";}.ai1eccfgi-equalizer:before{content:\"\\e646\";}.ai1eccfgi-abacus:before{content:\"\\e647\";}.ai1eccfgi-profile:before{content:\"\\e648\";}.ai1eccfgi-dollar:before{content:\"\\e649\";}.ai1eccfgi-dollars:before{content:\"\\e64a\";}.ai1eccfgi-pig:before{content:\"\\e64b\";}.ai1eccfgi-presentation:before{content:\"\\e64c\";}.ai1eccfgi-rain:before{content:\"\\e64d\";}.ai1eccfgi-snow:before{content:\"\\e64e\";}.ai1eccfgi-lightning:before{content:\"\\e64f\";}.ai1eccfgi-cloudsun:before{content:\"\\e650\";}.ai1eccfgi-cloudy:before{content:\"\\e651\";}.ai1eccfgi-barcode:before{content:\"\\e652\";}.ai1eccfgi-badge:before{content:\"\\e653\";}.ai1eccfgi-radio2:before{content:\"\\e654\";}.ai1eccfgi-shipping:before{content:\"\\e655\";}.ai1eccfgi-yingyang:before{content:\"\\e656\";}.ai1eccfgi-lockedheart:before{content:\"\\e657\";}.ai1eccfgi-navigation:before{content:\"\\e658\";}.ai1eccfgi-ruler:before{content:\"\\e659\";}.ai1eccfgi-glass:before{content:\"\\f000\";}.ai1eccfgi-music:before{content:\"\\f001\";}.ai1eccfgi-search:before{content:\"\\f002\";}.ai1eccfgi-envelope-o:before{content:\"\\f003\";}.ai1eccfgi-heart:before{content:\"\\f004\";}.ai1eccfgi-star:before{content:\"\\f005\";}.ai1eccfgi-star-o:before{content:\"\\f006\";}.ai1eccfgi-user:before{content:\"\\f007\";}.ai1eccfgi-film2:before{content:\"\\f008\";}.ai1eccfgi-th-large:before{content:\"\\f009\";}.ai1eccfgi-th:before{content:\"\\f00a\";}.ai1eccfgi-th-list:before{content:\"\\f00b\";}.ai1eccfgi-gear:before{content:\"\\f013\";}.ai1eccfgi-trash-o:before{content:\"\\f014\";}.ai1eccfgi-home:before{content:\"\\f015\";}.ai1eccfgi-clock-o:before{content:\"\\f017\";}.ai1eccfgi-road:before{content:\"\\f018\";}.ai1eccfgi-inbox:before{content:\"\\f01c\";}.ai1eccfgi-play-circle-o:before{content:\"\\f01d\";}.ai1eccfgi-lock:before{content:\"\\f023\";}.ai1eccfgi-flag:before{content:\"\\f024\";}.ai1eccfgi-headphones:before{content:\"\\f025\";}.ai1eccfgi-volume-up:before{content:\"\\f028\";}.ai1eccfgi-tag:before{content:\"\\f02b\";}.ai1eccfgi-tags:before{content:\"\\f02c\";}.ai1eccfgi-book:before{content:\"\\f02d\";}.ai1eccfgi-bookmark:before{content:\"\\f02e\";}.ai1eccfgi-print:before{content:\"\\f02f\";}.ai1eccfgi-camera2:before{content:\"\\f030\";}.ai1eccfgi-video-camera:before{content:\"\\f03d\";}.ai1eccfgi-photo:before{content:\"\\f03e\";}.ai1eccfgi-pencil:before{content:\"\\f040\";}.ai1eccfgi-map-marker:before{content:\"\\f041\";}.ai1eccfgi-adjust:before{content:\"\\f042\";}.ai1eccfgi-tint:before{content:\"\\f043\";}.ai1eccfgi-check-square-o:before{content:\"\\f046\";}.ai1eccfgi-play:before{content:\"\\f04b\";}.ai1eccfgi-stop:before{content:\"\\f04d\";}.ai1eccfgi-check-circle:before{content:\"\\f058\";}.ai1eccfgi-question-circle:before{content:\"\\f059\";}.ai1eccfgi-info-circle:before{content:\"\\f05a\";}.ai1eccfgi-crosshairs:before{content:\"\\f05b\";}.ai1eccfgi-asterisk:before{content:\"\\f069\";}.ai1eccfgi-exclamation-circle:before{content:\"\\f06a\";}.ai1eccfgi-gift:before{content:\"\\f06b\";}.ai1eccfgi-leaf:before{content:\"\\f06c\";}.ai1eccfgi-eye:before{content:\"\\f06e\";}.ai1eccfgi-warning:before{content:\"\\f071\";}.ai1eccfgi-plane:before{content:\"\\f072\";}.ai1eccfgi-calendar:before{content:\"\\f073\";}.ai1eccfgi-comment:before{content:\"\\f075\";}.ai1eccfgi-magnet:before{content:\"\\f076\";}.ai1eccfgi-shopping-cart:before{content:\"\\f07a\";}.ai1eccfgi-folder:before{content:\"\\f07b\";}.ai1eccfgi-folder-open:before{content:\"\\f07c\";}.ai1eccfgi-bar-chart-o:before{content:\"\\f080\";}.ai1eccfgi-camera-retro:before{content:\"\\f083\";}.ai1eccfgi-key:before{content:\"\\f084\";}.ai1eccfgi-gears:before{content:\"\\f085\";}.ai1eccfgi-comments:before{content:\"\\f086\";}.ai1eccfgi-thumbs-o-up:before{content:\"\\f087\";}.ai1eccfgi-thumbs-o-down:before{content:\"\\f088\";}.ai1eccfgi-heart-o:before{content:\"\\f08a\";}.ai1eccfgi-thumb-tack:before{content:\"\\f08d\";}.ai1eccfgi-trophy:before{content:\"\\f091\";}.ai1eccfgi-lemon-o:before{content:\"\\f094\";}.ai1eccfgi-phone2:before{content:\"\\f095\";}.ai1eccfgi-phone-square:before{content:\"\\f098\";}.ai1eccfgi-unlock:before{content:\"\\f09c\";}.ai1eccfgi-credit-card:before{content:\"\\f09d\";}.ai1eccfgi-hdd-o:before{content:\"\\f0a0\";}.ai1eccfgi-bullhorn:before{content:\"\\f0a1\";}.ai1eccfgi-bell-o:before{content:\"\\f0a2\";}.ai1eccfgi-certificate:before{content:\"\\f0a3\";}.ai1eccfgi-hand-o-right:before{content:\"\\f0a4\";}.ai1eccfgi-hand-o-left:before{content:\"\\f0a5\";}.ai1eccfgi-hand-o-up:before{content:\"\\f0a6\";}.ai1eccfgi-hand-o-down:before{content:\"\\f0a7\";}.ai1eccfgi-globe:before{content:\"\\f0ac\";}.ai1eccfgi-wrench:before{content:\"\\f0ad\";}.ai1eccfgi-briefcase:before{content:\"\\f0b1\";}.ai1eccfgi-group:before{content:\"\\f0c0\";}.ai1eccfgi-chain:before{content:\"\\f0c1\";}.ai1eccfgi-cloud:before{content:\"\\f0c2\";}.ai1eccfgi-flask:before{content:\"\\f0c3\";}.ai1eccfgi-cut:before{content:\"\\f0c4\";}.ai1eccfgi-copy:before{content:\"\\f0c5\";}.ai1eccfgi-paperclip:before{content:\"\\f0c6\";}.ai1eccfgi-square:before{content:\"\\f0c8\";}.ai1eccfgi-magic:before{content:\"\\f0d0\";}.ai1eccfgi-truck:before{content:\"\\f0d1\";}.ai1eccfgi-envelope:before{content:\"\\f0e0\";}.ai1eccfgi-legal:before{content:\"\\f0e3\";}.ai1eccfgi-dashboard:before{content:\"\\f0e4\";}.ai1eccfgi-comment-o:before{content:\"\\f0e5\";}.ai1eccfgi-comments-o:before{content:\"\\f0e6\";}.ai1eccfgi-flash:before{content:\"\\f0e7\";}.ai1eccfgi-sitemap:before{content:\"\\f0e8\";}.ai1eccfgi-umbrella:before{content:\"\\f0e9\";}.ai1eccfgi-cloud-upload:before{content:\"\\f0ee\";}.ai1eccfgi-user-md:before{content:\"\\f0f0\";}.ai1eccfgi-stethoscope:before{content:\"\\f0f1\";}.ai1eccfgi-suitcase:before{content:\"\\f0f2\";}.ai1eccfgi-bell:before{content:\"\\f0f3\";}.ai1eccfgi-coffee:before{content:\"\\f0f4\";}.ai1eccfgi-cutlery:before{content:\"\\f0f5\";}.ai1eccfgi-building-o:before{content:\"\\f0f7\";}.ai1eccfgi-hospital-o:before{content:\"\\f0f8\";}.ai1eccfgi-ambulance:before{content:\"\\f0f9\";}.ai1eccfgi-medkit:before{content:\"\\f0fa\";}.ai1eccfgi-fighter-jet:before{content:\"\\f0fb\";}.ai1eccfgi-beer:before{content:\"\\f0fc\";}.ai1eccfgi-h-square:before{content:\"\\f0fd\";}.ai1eccfgi-desktop:before{content:\"\\f108\";}.ai1eccfgi-laptop:before{content:\"\\f109\";}.ai1eccfgi-tablet:before{content:\"\\f10a\";}.ai1eccfgi-mobile-phone:before{content:\"\\f10b\";}.ai1eccfgi-circle-o:before{content:\"\\f10c\";}.ai1eccfgi-circle:before{content:\"\\f111\";}.ai1eccfgi-folder-o:before{content:\"\\f114\";}.ai1eccfgi-folder-open-o:before{content:\"\\f115\";}.ai1eccfgi-gamepad:before{content:\"\\f11b\";}.ai1eccfgi-keyboard-o:before{content:\"\\f11c\";}.ai1eccfgi-flag-o:before{content:\"\\f11d\";}.ai1eccfgi-flag-checkered:before{content:\"\\f11e\";}.ai1eccfgi-star-half-empty:before{content:\"\\f123\";}.ai1eccfgi-location-arrow:before{content:\"\\f124\";}.ai1eccfgi-crop:before{content:\"\\f125\";}.ai1eccfgi-code-fork:before{content:\"\\f126\";}.ai1eccfgi-question:before{content:\"\\f128\";}.ai1eccfgi-info:before{content:\"\\f129\";}.ai1eccfgi-exclamation:before{content:\"\\f12a\";}.ai1eccfgi-eraser:before{content:\"\\f12d\";}.ai1eccfgi-puzzle-piece:before{content:\"\\f12e\";}.ai1eccfgi-microphone:before{content:\"\\f130\";}.ai1eccfgi-shield:before{content:\"\\f132\";}.ai1eccfgi-calendar-o:before{content:\"\\f133\";}.ai1eccfgi-fire-extinguisher:before{content:\"\\f134\";}.ai1eccfgi-anchor:before{content:\"\\f13d\";}.ai1eccfgi-unlock-alt:before{content:\"\\f13e\";}.ai1eccfgi-bullseye:before{content:\"\\f140\";}.ai1eccfgi-play-circle:before{content:\"\\f144\";}.ai1eccfgi-ticket:before{content:\"\\f145\";}.ai1eccfgi-check-square:before{content:\"\\f14a\";}.ai1eccfgi-pencil-square:before{content:\"\\f14b\";}.ai1eccfgi-compass:before{content:\"\\f14e\";}.ai1eccfgi-euro:before{content:\"\\f153\";}.ai1eccfgi-gbp:before{content:\"\\f154\";}.ai1eccfgi-dollar3:before{content:\"\\f155\";}.ai1eccfgi-rupee:before{content:\"\\f156\";}.ai1eccfgi-cny:before{content:\"\\f157\";}.ai1eccfgi-ruble:before{content:\"\\f158\";}.ai1eccfgi-won:before{content:\"\\f159\";}.ai1eccfgi-bitcoin:before{content:\"\\f15a\";}.ai1eccfgi-file:before{content:\"\\f15b\";}.ai1eccfgi-file-text:before{content:\"\\f15c\";}.ai1eccfgi-thumbs-up:before{content:\"\\f164\";}.ai1eccfgi-thumbs-down:before{content:\"\\f165\";}.ai1eccfgi-youtube-play:before{content:\"\\f16a\";}.ai1eccfgi-female:before{content:\"\\f182\";}.ai1eccfgi-male:before{content:\"\\f183\";}.ai1eccfgi-sun-o:before{content:\"\\f185\";}.ai1eccfgi-moon-o:before{content:\"\\f186\";}.ai1eccfgi-archive2:before{content:\"\\f187\";}.ai1eccfgi-bug:before{content:\"\\f188\";}.ai1eccfgi-wheelchair:before{content:\"\\f193\";}.ai1eccfgi-turkish-lira:before{content:\"\\f195\";}.ai1eccfgi-space-shuttle:before{content:\"\\f197\";}.ai1eccfgi-envelope-square:before{content:\"\\f199\";}.ai1eccfgi-institution:before{content:\"\\f19c\";}.ai1eccfgi-mortar-board:before{content:\"\\f19d\";}.ai1eccfgi-fax:before{content:\"\\f1ac\";}.ai1eccfgi-building:before{content:\"\\f1ad\";}.ai1eccfgi-child:before{content:\"\\f1ae\";}.ai1eccfgi-recycle:before{content:\"\\f1b8\";}.ai1eccfgi-automobile:before{content:\"\\f1b9\";}.ai1eccfgi-cab:before{content:\"\\f1ba\";}.ai1eccfgi-tree:before{content:\"\\f1bb\";}.ai1eccfgi-database:before{content:\"\\f1c0\";}.ai1eccfgi-life-bouy:before{content:\"\\f1cd\";}.ai1eccfgi-circle-o-notch:before{content:\"\\f1ce\";}.ai1eccfgi-send:before{content:\"\\f1d8\";}.ai1eccfgi-send-o:before{content:\"\\f1d9\";}.ai1eccfgi-circle-thin:before{content:\"\\f1db\";}.ai1eccfgi-paragraph:before{content:\"\\f1dd\";}.ai1eccfgi-share-alt:before{content:\"\\f1e0\";}.ai1eccfgi-share-alt-square:before{content:\"\\f1e1\";}.ai1eccfgi-contrast:before{content:\"\\e65a\";}.ai1eccfgi-frame:before{content:\"\\e65b\";}.ai1eccfgi-chart:before{content:\"\\e65c\";}.ai1eccfgi-shit:before{content:\"\\e65d\";}.ai1eccfgi-lamp6:before{content:\"\\e65e\";}.ai1eccfgi-disk:before{content:\"\\e65f\";}.ai1eccfgi-button:before{content:\"\\e660\";}.ai1eccfgi-atom:before{content:\"\\e661\";}.ai1eccfgi-jersey:before{content:\"\\f019\";}.ai1eccfgi-law:before{content:\"\\f0d8\";}.ai1eccfgi-microscope:before{content:\"\\f089\";}.ai1eccfgi-paintcan:before{content:\"\\f0d2\";}.ai1eccfgi-plug:before{content:\"\\f0d4\";}.ai1eccfgi-podium:before{content:\"\\f0af\";}.ai1eccfgi-rocket:before{content:\"\\f033\";}.ai1eccfgi-squirrel:before{content:\"\\f0b2\";}.ai1eccfgi-steps:before{content:\"\\f0c7\";}.ai1eccfgi-telescope:before{content:\"\\f08b\";}.ai1eccfgi-tools:before{content:\"\\f031\";}.ai1eccfgi-pen:before{content:\"\\e662\";}.ai1eccfgi-paint-format:before{content:\"\\e663\";}.ai1eccfgi-images:before{content:\"\\e664\";}.ai1eccfgi-music2:before{content:\"\\e665\";}.ai1eccfgi-spades:before{content:\"\\e666\";}.ai1eccfgi-clubs:before{content:\"\\e667\";}.ai1eccfgi-diamonds:before{content:\"\\e668\";}.ai1eccfgi-books:before{content:\"\\e669\";}.ai1eccfgi-address-book:before{content:\"\\e66a\";}.ai1eccfgi-cabinet:before{content:\"\\e66b\";}.ai1eccfgi-drawer:before{content:\"\\e66c\";}.ai1eccfgi-busy:before{content:\"\\e66d\";}.ai1eccfgi-fire:before{content:\"\\e66e\";}.ai1eccfgi-heart-broken:before{content:\"\\e66f\";}.ai1eccfgi-happy:before{content:\"\\e670\";}.ai1eccfgi-happy2:before{content:\"\\e671\";}.ai1eccfgi-smiley:before{content:\"\\e672\";}.ai1eccfgi-smiley2:before{content:\"\\e673\";}.ai1eccfgi-tongue:before{content:\"\\e674\";}.ai1eccfgi-tongue2:before{content:\"\\e675\";}.ai1eccfgi-sad:before{content:\"\\e676\";}.ai1eccfgi-sad2:before{content:\"\\e677\";}.ai1eccfgi-wink:before{content:\"\\e678\";}.ai1eccfgi-wink2:before{content:\"\\e679\";}.ai1eccfgi-grin:before{content:\"\\e67a\";}.ai1eccfgi-grin2:before{content:\"\\e67b\";}.ai1eccfgi-cool:before{content:\"\\e67c\";}.ai1eccfgi-cool2:before{content:\"\\e67d\";}.ai1eccfgi-angry:before{content:\"\\e67e\";}.ai1eccfgi-angry2:before{content:\"\\e67f\";}.ai1eccfgi-evil:before{content:\"\\e680\";}.ai1eccfgi-evil2:before{content:\"\\e681\";}.ai1eccfgi-shocked:before{content:\"\\e682\";}.ai1eccfgi-shocked2:before{content:\"\\e683\";}.ai1eccfgi-confused:before{content:\"\\e684\";}.ai1eccfgi-confused2:before{content:\"\\e685\";}.ai1eccfgi-neutral:before{content:\"\\e686\";}.ai1eccfgi-neutral2:before{content:\"\\e687\";}.ai1eccfgi-wondering:before{content:\"\\e688\";}.ai1eccfgi-wondering2:before{content:\"\\e689\";}.ai1eccfgi-directions:before{content:\"\\e68a\";}.ai1eccfgi-feather:before{content:\"\\e68b\";}.ai1eccfgi-new:before{content:\"\\e68c\";}.ai1eccfgi-air:before{content:\"\\e68d\";}.ai1eccfgi-network:before{content:\"\\e68e\";}.ai1eccfgi-cone:before{content:\"\\e68f\";}.ai1eccfgi-thermometer:before{content:\"\\e690\";}.ai1eccfgi-droplets:before{content:\"\\e691\";}.ai1ec-cog-item{margin-bottom:20px;}.ai1ec-cog-item .ai1ec-cog-item-title{font-weight:bold;margin-bottom:5px;}.ai1ec-cog-item .ai1ec-cog-image{margin-right:15px;float:left;background-size:cover;background-position:center center;height:114px;width:82px;}.ai1ec-cog-item .ai1ec-cog-item-format,.ai1ec-cog-item .ai1ec-cog-item-name{display:block;font-weight:normal;}.ai1ec-cog-item .ai1ec-cog-item-format a,.ai1ec-cog-item .ai1ec-cog-item-format a:hover,.ai1ec-cog-item .ai1ec-cog-item-name a,.ai1ec-cog-item .ai1ec-cog-item-name a:hover{text-decoration:none;}.ai1ec-s2-with-icon[data-ai1ec-icon=\"ai1eccfgi-null\"] > i{display:none;}.ai1ec-s2-with-icon[data-ai1ec-icon=\"ai1eccfgi-null\"] .select2-choices{padding-left:0;}.no-touch .ai1ec-cog-select-all{display:none;}@font-face{font-family:\'League Gothic\';src:url(\'http://localhost/wp-content/plugins/all-in-one-event-calendar-extended-views/public/themes-ai1ec/vortex/font/../font/League_Gothic-webfont.eot\');src:url(\'http://localhost/wp-content/plugins/all-in-one-event-calendar-extended-views/public/themes-ai1ec/vortex/font/../font/League_Gothic-webfont.eot?iefix\') format(\'eot\'), url(data:application/x-font-woff;charset=utf-8;base64,) format(\'woff\'), url(data:font/truetype;charset=utf-8;base64,) format(\'truetype\'), url(\'http://localhost/wp-content/plugins/all-in-one-event-calendar-extended-views/public/themes-ai1ec/vortex/font/../font/League_Gothic-webfont.svg#webfont1Lb5Pdit\') format(\'svg\');font-weight:bold;font-style:normal;}.ai1ec-posterboard-view{clear:both;margin:0 auto !important;min-height:27px;padding:0 0 6px !important;background-color:rgba(255,255,255,0);}.ai1ec-posterboard-view .ai1ec-date-block-wrap{background:#2d6ba9;color:#fff;float:right;line-height:18px;margin:0 0 0 7px;min-width:50px;position:relative;text-align:center;text-shadow:0 -1px 1px rgba(0,0,0,0.5);border-radius:2px;z-index:2;}.ai1ec-posterboard-view .ai1ec-date-block-wrap a{color:#fff !important;}.ai1ec-posterboard-view .ai1ec-date-block-wrap a:hover{color:#fff !important;}.ai1ec-posterboard-view .ai1ec-month{background:rgba(255,255,255,0.2);font-size:0.8em;letter-spacing:0.2em;padding:0 0.4em;text-transform:uppercase;}.ai1ec-posterboard-view .ai1ec-day{font-size:2.2em;padding:0.3em 0.2em 0.2em;font-weight:bold;}.ai1ec-posterboard-view .ai1ec-weekday{font-size:0.7em;letter-spacing:0.2em;line-height:1.8em;}.ai1ec-posterboard-view .ai1ec-year{font-size:0.7em;letter-spacing:0.2em;line-height:1.8em;}.ai1ec-posterboard-view .ai1ec-end-date-month-divider{position:relative;bottom:-10px;width:0;height:0;border-style:solid;border-width:10px 25px 0 25px;border-color:inherit transparent transparent transparent;margin-top:5px;}.ai1ec-posterboard-view .ai1ec-end-date{background-color:rgba(255,255,255,0.2);}.ai1ec-posterboard-view .ai1ec-end-date-divider{width:0;height:0;border-style:solid;border-width:10px 25px 0 25px;border-color:#2d6ba9 transparent transparent transparent;margin-top:0px;}.ai1ec-posterboard-view .ai1ec-month .ai1ec-end-date-divider{margin-left:-5px;margin-right:-5px;}.ai1ec-posterboard-view .ai1ec-buy-tickets{clear:right;margin:0 0 9px 5px;}.ai1ec-posterboard-view .ai1ec-event-wrap{background:#fff9f0;border:1px solid #fff9f0;-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.4);box-shadow:0 1px 3px rgba(0,0,0,0.4);margin:6px;padding:7px;position:relative;}.ai1ec-posterboard-view .ai1ec-event{position:relative;font-size:10pt;padding:0 !important;margin:0 -2px 0 0 !important;float:left;width:240px;}.ai1ec-posterboard-view .ai1ec-event .post-edit-link{background:#fff9f0;bottom:100%;-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.4);box-shadow:0 1px 3px rgba(0,0,0,0.4);margin-bottom:-3px;padding:3px 5px;position:absolute;right:8px;opacity:0;filter:alpha(opacity=0);-webkit-transition:opacity 0.1s;transition:opacity 0.1s;z-index:2;}.ai1ec-posterboard-view .ai1ec-event:hover{opacity:1;filter:alpha(opacity=100);z-index:1;}.ai1ec-posterboard-view .ai1ec-event:hover .post-edit-link{opacity:1;filter:alpha(opacity=100);}.ai1ec-posterboard-view .ai1ec-event-title-wrap{margin-bottom:0.3em;}.ai1ec-posterboard-view .ai1ec-event-title{line-height:31.5px;color:#555;font-weight:bold;font-family:\"League Gothic\", Impact, \"Arial Black\", Arial, sans-serif;font-size:30px;}.ai1ec-posterboard-view .ai1ec-event-title a{font-weight:bold !important;}.ai1ec-posterboard-view .ai1ec-event-title:after{color:#3d6b99;margin-top:-1px;}.ai1ec-posterboard-view .ai1ec-event-avatar{background-color:#fff;border:1px solid rgba(0,0,0,0);-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;clear:both;margin:6.5px 0;padding:8px;position:relative;width:100%;}.ai1ec-posterboard-view .ai1ec-event-avatar img{width:100%;}.ai1ec-posterboard-view .ai1ec-event-time{font-weight:bold;line-height:1.428571429;margin-top:6px;}.ai1ec-posterboard-view .ai1ec-event-description{margin-top:5px;}.ai1ec-posterboard-view footer{background:#f6f1ea;border-top:1px solid #fff9f0;-webkit-box-shadow:inset 0 1px 0  #ede3d5 , inset 0 2px 0  #fff;box-shadow:inset 0 1px 0  #ede3d5 , inset 0 2px 0  #fff;font-size:8pt;margin:5px -8px -8px;padding:5px 8px 6px;position:relative;z-index:5;}.ai1ec-posterboard-view footer > div{overflow:hidden;white-space:nowrap;}.ai1ec-posterboard-view footer > div:hover{white-space:normal;}.ai1ec-posterboard-view footer:after{content:\' \';display:block;bottom:0;background:#f6f1ea;background:-moz-linear-gradient(left,rgba(246,241,234,0),#f6f1ea);background:-ms-linear-gradient(left,rgba(246,241,234,0),#f6f1ea);background:-webkit-gradient(linear,0 0,100% 0,from(rgba(246,241,234,0)),to(#f6f1ea));background:-webkit-linear-gradient(left,rgba(246,241,234,0),#f6f1ea);background:-o-linear-gradient(left,rgba(246,241,234,0),#f6f1ea);background:linear-gradient(left,rgba(246,241,234,0),#f6f1ea);background-repeat:repeat-x;position:absolute;top:2px;right:0;width:30px;z-index:1;}.ai1ec-posterboard-view footer:hover:after{display:none;}.ai1ec-posterboard-view footer.ai1ec-auto-height{position:absolute;bottom:8px;width:100%;}.ai1ec-posterboard-view.ai1ec-posterboard-masonry .ai1ec-date-block-wrap{opacity:0.75;filter:alpha(opacity=75);-webkit-transition:0.1s opacity;transition:0.1s opacity;}.ai1ec-posterboard-view.ai1ec-posterboard-masonry .ai1ec-date-block-wrap:hover{opacity:0.9;filter:alpha(opacity=90);}.ai1ec-posterboard-view.ai1ec-posterboard-masonry .ai1ec-event-wrap{opacity:0.85;filter:alpha(opacity=85);-webkit-transition:0.1s opacity;transition:0.1s opacity;}.ai1ec-posterboard-view.ai1ec-posterboard-masonry .ai1ec-event-wrap:hover{opacity:1;filter:alpha(opacity=100);}.ai1ec-posterboard-view.ai1ec-posterboard-masonry .ai1ec-posterboard-time{display:none;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-wrap{height:300px;overflow:hidden;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-wrap:hover .ai1ec-event-location{opacity:1;filter:alpha(opacity=100);}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-title-wrap .ai1ec-event-title{min-height:68px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned footer > div{min-height:15px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-location{text-transform:uppercase;background-color:#fff9f0 !important;position:absolute;top:237px;z-index:4;background:white;padding:3px 6px;border-radius:0 3px 3px 0;box-shadow:1px 1px 1px rgba(0,0,0,0.4);border-left:none;font-size:10px;-webkit-transition:0.1s opacity;transition:0.1s opacity;max-width:90%;overflow:hidden;height:20px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-location i{font-size:13px;margin-right:1px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .post-edit-link{position:absolute;display:block;top:0;height:28px;right:0;padding:5px;width:50px;white-space:nowrap;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event-time{display:none;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event:hover .ai1ec-posterboard-image-container .ai1ec-posterboard-image{opacity:.3;filter:alpha(opacity=30);-webkit-filter:blur(5px);filter:blur(5px);}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event:hover .ai1ec-posterboard-image-container .ai1ec-event-description{opacity:1;filter:alpha(opacity=100);pointer-events:none;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-event:hover .ai1ec-posterboard-image-container .ai1ec-posterboard-time{pointer-events:none;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-date{display:inline-block;min-width:48px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-end-date{margin-left:-3px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-end-date-divider{display:inline-block;position:absolute;top:50%;border-width:36px 0 28px 3px;margin-top:-33px;margin-left:-3px;border-color:transparent transparent transparent #2d6ba9;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-end-date-divider-small{border-width:0px 2px 18px 0px;margin-top:-33px;margin-left:-4px;border-color:transparent transparent rgba(255,255,255,0.2) transparent;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-posterboard-image-container{position:relative;overflow:hidden;height:188px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-posterboard-image-container .ai1ec-posterboard-image{background-size:cover;background-position:50% 50%;height:190px;-webkit-transition:0.1s all;transition:0.1s all;}@media screen and (max-width: 767px){.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-posterboard-image-container .ai1ec-posterboard-image{height:188px;}}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-posterboard-image-container .ai1ec-posterboard-time{background:#2d6ba9;color:#fff;width:50px;-webkit-transition:0.1s all;transition:0.1s all;opacity:1;filter:alpha(opacity=100);text-align:center;padding:2px 0;float:right;display:inline-block;border-top-left-radius:3px;border-bottom-left-radius:3px;position:relative;top:-181px;font-size:10px;z-index:2;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-posterboard-image-container .ai1ec-event-description{position:relative;top:-190px;padding:8px;opacity:0;-webkit-transition:0.1s opacity;transition:0.1s opacity;z-index:3;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned .ai1ec-sas-actions{text-align:left;position:relative;top:-183px;left:7px;margin-bottom:8px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned.ai1ec-posterboard-no-footer .ai1ec-event-wrap{height:280px;}.ai1ec-posterboard-view.ai1ec-posterboard-aligned.ai1ec-posterboard-no-footer .ai1ec-no-footer-padding{height:7px;width:100%;background-color:#fff9f0 !important;position:absolute;top:271px;z-index:10;}.ai1ec-stream-view{margin-top:4px;}.ai1ec-stream-view .ai1ec-date-title{background-color:#c4c4c4;border-radius:5px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;font-size:12px;font-weight:bold;display:block;margin-bottom:10px;padding:4px;width:100%;text-align:center;text-shadow:0 1px 1px rgba(0,0,0,0.4);text-transform:uppercase;}.ai1ec-stream-view .ai1ec-date-title a,.ai1ec-stream-view .ai1ec-date-title a:hover{color:#fff;}.ai1ec-stream-view .ai1ec-event{background-color:#fff;border:1px solid #ccc;border-radius:5px;-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.15);box-shadow:0 1px 2px rgba(0,0,0,0.15);font-size:13px;line-height:18px;margin-bottom:10px;height:90px;overflow:hidden;opacity:0.85;filter:alpha(opacity=85);position:relative;}.ai1ec-stream-view .ai1ec-event .post-edit-link{float:right;font-size:13px;margin-right:-50px;-webkit-transition:margin 0.1s;transition:margin 0.1s;}.ai1ec-stream-view .ai1ec-event:hover{opacity:1;filter:alpha(opacity=100);}.ai1ec-stream-view .ai1ec-event:hover .post-edit-link{margin-right:0;}.ai1ec-stream-view .ai1ec-event .ai1ec-event-avatar img{opacity:0.8;filter:alpha(opacity=80);}.ai1ec-stream-view .ai1ec-event .ai1ec-event-avatar img:hover{opacity:1;filter:alpha(opacity=100);}.ai1ec-stream-view .ai1ec-event-title{line-height:18.6px;font-weight:bold;font-size:15px;margin-bottom:4px;max-height:37.2px;overflow:hidden;}.ai1ec-stream-view .ai1ec-event-title a{font-weight:bold !important;}.ai1ec-stream-view .ai1ec-event-description{max-height:37.2px;overflow:hidden;}.ai1ec-stream-view .ai1ec-event-meta{color:#666;font-weight:bold;font-size:11px;margin-bottom:2px;max-height:20px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}.ai1ec-stream-view .ai1ec-event-meta a{padding:0 0 0 6px !important;white-space:nowrap;}.ai1ec-stream-view .ai1ec-event-meta a:last-child{padding-right:5px !important;}.ai1ec-stream-view .ai1ec-event-meta .ai1ec-categories a i,.ai1ec-stream-view .ai1ec-event-meta .ai1ec-tags a i{padding-right:3px;}.ai1ec-stream-view .ai1ec-event-meta .ai1ec-tag{background:none;-webkit-box-shadow:none;box-shadow:none;line-height:inherit !important;}.ai1ec-stream-view .ai1ec-event-meta .ai1ec-tag:hover{color:#335980 !important;}.ai1ec-stream-view .ai1ec-event-meta a:hover i{text-decoration:none !important;}.ai1ec-stream-view .ai1ec-event-time{font-size:13px;padding-right:2px;}.ai1ec-stream-view * + .ai1ec-meta-divide{border-left:1px solid #ccc;margin-left:-1px;}.ai1ec-stream-view .ai1ec-event-inner{margin:5px 12px 5px 102px;height:80px;overflow:hidden;}.ai1ec-stream-view .ai1ec-event-avatar{border-radius:4px 0 0 4px;bottom:0;-webkit-box-shadow:none;box-shadow:none;left:0;overflow:hidden;position:absolute;top:0;width:90px;}.ai1ec-stream-view .ai1ec-event-avatar a{opacity:1;filter:alpha(opacity=100);}.ai1ec-stream-view .ai1ec-event-avatar img{height:100%;}.ai1ec-stream-view .ai1ec-event-avatar.ai1ec-portrait img{height:auto !important;width:100% !important;}.ai1ec-stream-view .ai1ec-allday-badge{background:#858585;border-radius:3px;-webkit-box-shadow:none;box-shadow:none;color:#fff;display:inline-block;font-size:0.7em;font-weight:normal;margin:0 0 2px;padding:0 3px;text-transform:uppercase;}.ai1ec-stream-view .ai1ec-event-location{margin-left:5px;font-size:13px !important;}.ai1ec-detect-font-load{position:absolute;left:-10000px;top:-10000px;font-family:sans-serif;}body:not(:-moz-handler-blocked) .ai1ec-end-date-divider-small{display:none !important;}';
			( document.getElementsByTagName( "head" )[0] || document.documentElement ).appendChild( timely_css );
			// bring in requires
			var timely;(function () { if (!timely || !timely.requirejs) {
if (!timely) { timely = {}; } else { require = timely; }
/** vim: et:ts=4:sw=4:sts=4
 * @license RequireJS 2.1.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/requirejs for details
 */
//Not using strict: uneven strict support in browsers, #392, and causes
//problems with requirejs.exec()/transpiler plugins that may not be strict.
/*jslint regexp: true, nomen: true, sloppy: true */
/*global window, navigator, document, importScripts, setTimeout, opera */

var requirejs, require, define;
(function (global) {
    var req, s, head, baseElement, dataMain, src,
        interactiveScript, currentlyAddingScript, mainScript, subPath,
        version = '2.1.5',
        commentRegExp = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,
        cjsRequireRegExp = /[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,
        jsSuffixRegExp = /\.js$/,
        currDirRegExp = /^\.\//,
        op = Object.prototype,
        ostring = op.toString,
        hasOwn = op.hasOwnProperty,
        ap = Array.prototype,
        apsp = ap.splice,
        isBrowser = !!(typeof window !== 'undefined' && navigator && document),
        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',
        //PS3 indicates loaded and complete, but need to wait for complete
        //specifically. Sequence is 'loading', 'loaded', execution,
        // then 'complete'. The UA check is unfortunate, but not sure how
        //to feature test w/o causing perf issues.
        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?
                      /^complete$/ : /^(complete|loaded)$/,
        defContextName = '_',
        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.
        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',
        contexts = {},
        cfg = {},
        globalDefQueue = [],
        useInteractive = false;

    function isFunction(it) {
        return ostring.call(it) === '[object Function]';
    }

    function isArray(it) {
        return ostring.call(it) === '[object Array]';
    }

    /**
     * Helper function for iterating over an array. If the func returns
     * a true value, it will break out of the loop.
     */
    function each(ary, func) {
        if (ary) {
            var i;
            for (i = 0; i < ary.length; i += 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    /**
     * Helper function for iterating over an array backwards. If the func
     * returns a true value, it will break out of the loop.
     */
    function eachReverse(ary, func) {
        if (ary) {
            var i;
            for (i = ary.length - 1; i > -1; i -= 1) {
                if (ary[i] && func(ary[i], i, ary)) {
                    break;
                }
            }
        }
    }

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    function getOwn(obj, prop) {
        return hasProp(obj, prop) && obj[prop];
    }

    /**
     * Cycles over properties in an object and calls a function for each
     * property value. If the function returns a truthy value, then the
     * iteration is stopped.
     */
    function eachProp(obj, func) {
        var prop;
        for (prop in obj) {
            if (hasProp(obj, prop)) {
                if (func(obj[prop], prop)) {
                    break;
                }
            }
        }
    }

    /**
     * Simple function to mix in properties from source into target,
     * but only if target does not already have a property of the same name.
     */
    function mixin(target, source, force, deepStringMixin) {
        if (source) {
            eachProp(source, function (value, prop) {
                if (force || !hasProp(target, prop)) {
                    if (deepStringMixin && typeof value !== 'string') {
                        if (!target[prop]) {
                            target[prop] = {};
                        }
                        mixin(target[prop], value, force, deepStringMixin);
                    } else {
                        target[prop] = value;
                    }
                }
            });
        }
        return target;
    }

    //Similar to Function.prototype.bind, but the 'this' object is specified
    //first, since it is easier to read/figure out what 'this' will be.
    function bind(obj, fn) {
        return function () {
            return fn.apply(obj, arguments);
        };
    }

    function scripts() {
        return document.getElementsByTagName('script');
    }

    //Allow getting a global that expressed in
    //dot notation, like 'a.b.c'.
    function getGlobal(value) {
        if (!value) {
            return value;
        }
        var g = global;
        each(value.split('.'), function (part) {
            g = g[part];
        });
        return g;
    }

    /**
     * Constructs an error with a pointer to an URL with more information.
     * @param {String} id the error ID that maps to an ID on a web page.
     * @param {String} message human readable error.
     * @param {Error} [err] the original error, if there is one.
     *
     * @returns {Error}
     */
    function makeError(id, msg, err, requireModules) {
        var e = new Error(msg + '\nhttp://requirejs.org/docs/errors.html#' + id);
        e.requireType = id;
        e.requireModules = requireModules;
        if (err) {
            e.originalError = err;
        }
        return e;
    }

    if (typeof define !== 'undefined') {
        //If a define is already in play via another AMD loader,
        //do not overwrite.
        return;
    }

    if (typeof requirejs !== 'undefined') {
        if (isFunction(requirejs)) {
            //Do not overwrite and existing requirejs instance.
            return;
        }
        cfg = requirejs;
        requirejs = undefined;
    }

    //Allow for a require config object
    if (typeof require !== 'undefined' && !isFunction(require)) {
        //assume it is a config object.
        cfg = require;
        require = undefined;
    }

    function newContext(contextName) {
        var inCheckLoaded, Module, context, handlers,
            checkLoadedTimeoutId,
            config = {
                //Defaults. Do not set a default for map
                //config to speed up normalize(), which
                //will run faster if there is no default.
                waitSeconds: 7,
                baseUrl: './',
                paths: {},
                pkgs: {},
                shim: {},
                config: {}
            },
            registry = {},
            //registry of just enabled modules, to speed
            //cycle breaking code when lots of modules
            //are registered, but not activated.
            enabledRegistry = {},
            undefEvents = {},
            defQueue = [],
            defined = {},
            urlFetched = {},
            requireCounter = 1,
            unnormalizedCounter = 1;

        /**
         * Trims the . and .. from an array of path segments.
         * It will keep a leading path segment if a .. will become
         * the first path segment, to help with module name lookups,
         * which act like paths, but can be remapped. But the end result,
         * all paths that use this function should look normalized.
         * NOTE: this method MODIFIES the input array.
         * @param {Array} ary the array of path segments.
         */
        function trimDots(ary) {
            var i, part;
            for (i = 0; ary[i]; i += 1) {
                part = ary[i];
                if (part === '.') {
                    ary.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    if (i === 1 && (ary[2] === '..' || ary[0] === '..')) {
                        //End of the line. Keep at least one non-dot
                        //path segment at the front so it can be mapped
                        //correctly to disk. Otherwise, there is likely
                        //no path mapping for a path starting with '..'.
                        //This can still fail, but catches the most reasonable
                        //uses of ..
                        break;
                    } else if (i > 0) {
                        ary.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
        }

        /**
         * Given a relative module name, like ./something, normalize it to
         * a real name that can be mapped to a path.
         * @param {String} name the relative name
         * @param {String} baseName a real name that the name arg is relative
         * to.
         * @param {Boolean} applyMap apply the map config to the value. Should
         * only be done if this normalization is for a dependency ID.
         * @returns {String} normalized name
         */
        function normalize(name, baseName, applyMap) {
            var pkgName, pkgConfig, mapValue, nameParts, i, j, nameSegment,
                foundMap, foundI, foundStarMap, starI,
                baseParts = baseName && baseName.split('/'),
                normalizedBaseParts = baseParts,
                map = config.map,
                starMap = map && map['*'];

            //Adjust any relative paths.
            if (name && name.charAt(0) === '.') {
                //If have a base name, try to normalize against it,
                //otherwise, assume it is a top-level require that will
                //be relative to baseUrl in the end.
                if (baseName) {
                    if (getOwn(config.pkgs, baseName)) {
                        //If the baseName is a package name, then just treat it as one
                        //name to concat the name with.
                        normalizedBaseParts = baseParts = [baseName];
                    } else {
                        //Convert baseName to array, and lop off the last part,
                        //so that . matches that 'directory' and not name of the baseName's
                        //module. For instance, baseName of 'one/two/three', maps to
                        //'one/two/three.js', but we want the directory, 'one/two' for
                        //this normalization.
                        normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                    }

                    name = normalizedBaseParts.concat(name.split('/'));
                    trimDots(name);

                    //Some use of packages may use a . path to reference the
                    //'main' module name, so normalize for that.
                    pkgConfig = getOwn(config.pkgs, (pkgName = name[0]));
                    name = name.join('/');
                    if (pkgConfig && name === pkgName + '/' + pkgConfig.main) {
                        name = pkgName;
                    }
                } else if (name.indexOf('./') === 0) {
                    // No baseName, so this is ID is resolved relative
                    // to baseUrl, pull off the leading dot.
                    name = name.substring(2);
                }
            }

            //Apply map config if available.
            if (applyMap && map && (baseParts || starMap)) {
                nameParts = name.split('/');

                for (i = nameParts.length; i > 0; i -= 1) {
                    nameSegment = nameParts.slice(0, i).join('/');

                    if (baseParts) {
                        //Find the longest baseName segment match in the config.
                        //So, do joins on the biggest to smallest lengths of baseParts.
                        for (j = baseParts.length; j > 0; j -= 1) {
                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));

                            //baseName segment has config, find if it has one for
                            //this name.
                            if (mapValue) {
                                mapValue = getOwn(mapValue, nameSegment);
                                if (mapValue) {
                                    //Match, update name to the new value.
                                    foundMap = mapValue;
                                    foundI = i;
                                    break;
                                }
                            }
                        }
                    }

                    if (foundMap) {
                        break;
                    }

                    //Check for a star map match, but just hold on to it,
                    //if there is a shorter segment match later in a matching
                    //config, then favor over this star map.
                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {
                        foundStarMap = getOwn(starMap, nameSegment);
                        starI = i;
                    }
                }

                if (!foundMap && foundStarMap) {
                    foundMap = foundStarMap;
                    foundI = starI;
                }

                if (foundMap) {
                    nameParts.splice(0, foundI, foundMap);
                    name = nameParts.join('/');
                }
            }

            return name;
        }

        function removeScript(name) {
            if (isBrowser) {
                each(scripts(), function (scriptNode) {
                    if (scriptNode.getAttribute('data-requiremodule') === name &&
                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {
                        scriptNode.parentNode.removeChild(scriptNode);
                        return true;
                    }
                });
            }
        }

        function hasPathFallback(id) {
            var pathConfig = getOwn(config.paths, id);
            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {
                removeScript(id);
                //Pop off the first array value, since it failed, and
                //retry
                pathConfig.shift();
                context.require.undef(id);
                context.require([id]);
                return true;
            }
        }

        //Turns a plugin!resource to [plugin, resource]
        //with the plugin being undefined if the name
        //did not have a plugin prefix.
        function splitPrefix(name) {
            var prefix,
                index = name ? name.indexOf('!') : -1;
            if (index > -1) {
                prefix = name.substring(0, index);
                name = name.substring(index + 1, name.length);
            }
            return [prefix, name];
        }

        /**
         * Creates a module mapping that includes plugin prefix, module
         * name, and path. If parentModuleMap is provided it will
         * also normalize the name via require.normalize()
         *
         * @param {String} name the module name
         * @param {String} [parentModuleMap] parent module map
         * for the module name, used to resolve relative names.
         * @param {Boolean} isNormalized: is the ID already normalized.
         * This is true if this call is done for a define() module ID.
         * @param {Boolean} applyMap: apply the map config to the ID.
         * Should only be true if this map is for a dependency.
         *
         * @returns {Object}
         */
        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {
            var url, pluginModule, suffix, nameParts,
                prefix = null,
                parentName = parentModuleMap ? parentModuleMap.name : null,
                originalName = name,
                isDefine = true,
                normalizedName = '';

            //If no name, then it means it is a require call, generate an
            //internal name.
            if (!name) {
                isDefine = false;
                name = '_@r' + (requireCounter += 1);
            }

            nameParts = splitPrefix(name);
            prefix = nameParts[0];
            name = nameParts[1];

            if (prefix) {
                prefix = normalize(prefix, parentName, applyMap);
                pluginModule = getOwn(defined, prefix);
            }

            //Account for relative paths if there is a base name.
            if (name) {
                if (prefix) {
                    if (pluginModule && pluginModule.normalize) {
                        //Plugin is loaded, use its normalize method.
                        normalizedName = pluginModule.normalize(name, function (name) {
                            return normalize(name, parentName, applyMap);
                        });
                    } else {
                        normalizedName = normalize(name, parentName, applyMap);
                    }
                } else {
                    //A regular module.
                    normalizedName = normalize(name, parentName, applyMap);

                    //Normalized name may be a plugin ID due to map config
                    //application in normalize. The map config values must
                    //already be normalized, so do not need to redo that part.
                    nameParts = splitPrefix(normalizedName);
                    prefix = nameParts[0];
                    normalizedName = nameParts[1];
                    isNormalized = true;

                    url = context.nameToUrl(normalizedName);
                }
            }

            //If the id is a plugin id that cannot be determined if it needs
            //normalization, stamp it with a unique ID so two matching relative
            //ids that may conflict can be separate.
            suffix = prefix && !pluginModule && !isNormalized ?
                     '_unnormalized' + (unnormalizedCounter += 1) :
                     '';

            return {
                prefix: prefix,
                name: normalizedName,
                parentMap: parentModuleMap,
                unnormalized: !!suffix,
                url: url,
                originalName: originalName,
                isDefine: isDefine,
                id: (prefix ?
                        prefix + '!' + normalizedName :
                        normalizedName) + suffix
            };
        }

        function getModule(depMap) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (!mod) {
                mod = registry[id] = new context.Module(depMap);
            }

            return mod;
        }

        function on(depMap, name, fn) {
            var id = depMap.id,
                mod = getOwn(registry, id);

            if (hasProp(defined, id) &&
                    (!mod || mod.defineEmitComplete)) {
                if (name === 'defined') {
                    fn(defined[id]);
                }
            } else {
                getModule(depMap).on(name, fn);
            }
        }

        function onError(err, errback) {
            var ids = err.requireModules,
                notified = false;

            if (errback) {
                errback(err);
            } else {
                each(ids, function (id) {
                    var mod = getOwn(registry, id);
                    if (mod) {
                        //Set error on module, so it skips timeout checks.
                        mod.error = err;
                        if (mod.events.error) {
                            notified = true;
                            mod.emit('error', err);
                        }
                    }
                });

                if (!notified) {
                    req.onError(err);
                }
            }
        }

        /**
         * Internal method to transfer globalQueue items to this context's
         * defQueue.
         */
        function takeGlobalQueue() {
            //Push all the globalDefQueue items into the context's defQueue
            if (globalDefQueue.length) {
                //Array splice in the values since the context code has a
                //local var ref to defQueue, so cannot just reassign the one
                //on context.
                apsp.apply(defQueue,
                           [defQueue.length - 1, 0].concat(globalDefQueue));
                globalDefQueue = [];
            }
        }

        handlers = {
            'require': function (mod) {
                if (mod.require) {
                    return mod.require;
                } else {
                    return (mod.require = context.makeRequire(mod.map));
                }
            },
            'exports': function (mod) {
                mod.usingExports = true;
                if (mod.map.isDefine) {
                    if (mod.exports) {
                        return mod.exports;
                    } else {
                        return (mod.exports = defined[mod.map.id] = {});
                    }
                }
            },
            'module': function (mod) {
                if (mod.module) {
                    return mod.module;
                } else {
                    return (mod.module = {
                        id: mod.map.id,
                        uri: mod.map.url,
                        config: function () {
                            return (config.config && getOwn(config.config, mod.map.id)) || {};
                        },
                        exports: defined[mod.map.id]
                    });
                }
            }
        };

        function cleanRegistry(id) {
            //Clean up machinery used for waiting modules.
            delete registry[id];
            delete enabledRegistry[id];
        }

        function breakCycle(mod, traced, processed) {
            var id = mod.map.id;

            if (mod.error) {
                mod.emit('error', mod.error);
            } else {
                traced[id] = true;
                each(mod.depMaps, function (depMap, i) {
                    var depId = depMap.id,
                        dep = getOwn(registry, depId);

                    //Only force things that have not completed
                    //being defined, so still in the registry,
                    //and only if it has not been matched up
                    //in the module already.
                    if (dep && !mod.depMatched[i] && !processed[depId]) {
                        if (getOwn(traced, depId)) {
                            mod.defineDep(i, defined[depId]);
                            mod.check(); //pass false?
                        } else {
                            breakCycle(dep, traced, processed);
                        }
                    }
                });
                processed[id] = true;
            }
        }

        function checkLoaded() {
            var map, modId, err, usingPathFallback,
                waitInterval = config.waitSeconds * 1000,
                //It is possible to disable the wait interval by using waitSeconds of 0.
                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),
                noLoads = [],
                reqCalls = [],
                stillLoading = false,
                needCycleCheck = true;

            //Do not bother if this call was a result of a cycle break.
            if (inCheckLoaded) {
                return;
            }

            inCheckLoaded = true;

            //Figure out the state of all the modules.
            eachProp(enabledRegistry, function (mod) {
                map = mod.map;
                modId = map.id;

                //Skip things that are not enabled or in error state.
                if (!mod.enabled) {
                    return;
                }

                if (!map.isDefine) {
                    reqCalls.push(mod);
                }

                if (!mod.error) {
                    //If the module should be executed, and it has not
                    //been inited and time is up, remember it.
                    if (!mod.inited && expired) {
                        if (hasPathFallback(modId)) {
                            usingPathFallback = true;
                            stillLoading = true;
                        } else {
                            noLoads.push(modId);
                            removeScript(modId);
                        }
                    } else if (!mod.inited && mod.fetched && map.isDefine) {
                        stillLoading = true;
                        if (!map.prefix) {
                            //No reason to keep looking for unfinished
                            //loading. If the only stillLoading is a
                            //plugin resource though, keep going,
                            //because it may be that a plugin resource
                            //is waiting on a non-plugin cycle.
                            return (needCycleCheck = false);
                        }
                    }
                }
            });

            if (expired && noLoads.length) {
                //If wait time expired, throw error of unloaded modules.
                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);
                err.contextName = context.contextName;
                return onError(err);
            }

            //Not expired, check for a cycle.
            if (needCycleCheck) {
                each(reqCalls, function (mod) {
                    breakCycle(mod, {}, {});
                });
            }

            //If still waiting on loads, and the waiting load is something
            //other than a plugin resource, or there are still outstanding
            //scripts, then just try back later.
            if ((!expired || usingPathFallback) && stillLoading) {
                //Something is still waiting to load. Wait for it, but only
                //if a timeout is not already in effect.
                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {
                    checkLoadedTimeoutId = setTimeout(function () {
                        checkLoadedTimeoutId = 0;
                        checkLoaded();
                    }, 50);
                }
            }

            inCheckLoaded = false;
        }

        Module = function (map) {
            this.events = getOwn(undefEvents, map.id) || {};
            this.map = map;
            this.shim = getOwn(config.shim, map.id);
            this.depExports = [];
            this.depMaps = [];
            this.depMatched = [];
            this.pluginMaps = {};
            this.depCount = 0;

            /* this.exports this.factory
               this.depMaps = [],
               this.enabled, this.fetched
            */
        };

        Module.prototype = {
            init: function (depMaps, factory, errback, options) {
                options = options || {};

                //Do not do more inits if already done. Can happen if there
                //are multiple define calls for the same module. That is not
                //a normal, common case, but it is also not unexpected.
                if (this.inited) {
                    return;
                }

                this.factory = factory;

                if (errback) {
                    //Register for errors on this module.
                    this.on('error', errback);
                } else if (this.events.error) {
                    //If no errback already, but there are error listeners
                    //on this module, set up an errback to pass to the deps.
                    errback = bind(this, function (err) {
                        this.emit('error', err);
                    });
                }

                //Do a copy of the dependency array, so that
                //source inputs are not modified. For example
                //"shim" deps are passed in here directly, and
                //doing a direct modification of the depMaps array
                //would affect that config.
                this.depMaps = depMaps && depMaps.slice(0);

                this.errback = errback;

                //Indicate this module has be initialized
                this.inited = true;

                this.ignore = options.ignore;

                //Could have option to init this module in enabled mode,
                //or could have been previously marked as enabled. However,
                //the dependencies are not known until init is called. So
                //if enabled previously, now trigger dependencies as enabled.
                if (options.enabled || this.enabled) {
                    //Enable this module and dependencies.
                    //Will call this.check()
                    this.enable();
                } else {
                    this.check();
                }
            },

            defineDep: function (i, depExports) {
                //Because of cycles, defined callback for a given
                //export can be called more than once.
                if (!this.depMatched[i]) {
                    this.depMatched[i] = true;
                    this.depCount -= 1;
                    this.depExports[i] = depExports;
                }
            },

            fetch: function () {
                if (this.fetched) {
                    return;
                }
                this.fetched = true;

                context.startTime = (new Date()).getTime();

                var map = this.map;

                //If the manager is for a plugin managed resource,
                //ask the plugin to load it now.
                if (this.shim) {
                    context.makeRequire(this.map, {
                        enableBuildCallback: true
                    })(this.shim.deps || [], bind(this, function () {
                        return map.prefix ? this.callPlugin() : this.load();
                    }));
                } else {
                    //Regular dependency.
                    return map.prefix ? this.callPlugin() : this.load();
                }
            },

            load: function () {
                var url = this.map.url;

                //Regular dependency.
                if (!urlFetched[url]) {
                    urlFetched[url] = true;
                    context.load(this.map.id, url);
                }
            },

            /**
             * Checks if the module is ready to define itself, and if so,
             * define it.
             */
            check: function () {
                if (!this.enabled || this.enabling) {
                    return;
                }

                var err, cjsModule,
                    id = this.map.id,
                    depExports = this.depExports,
                    exports = this.exports,
                    factory = this.factory;

                if (!this.inited) {
                    this.fetch();
                } else if (this.error) {
                    this.emit('error', this.error);
                } else if (!this.defining) {
                    //The factory could trigger another require call
                    //that would result in checking this module to
                    //define itself again. If already in the process
                    //of doing that, skip this work.
                    this.defining = true;

                    if (this.depCount < 1 && !this.defined) {
                        if (isFunction(factory)) {
                            //If there is an error listener, favor passing
                            //to that instead of throwing an error.
                            if (this.events.error) {
                                try {
                                    exports = context.execCb(id, factory, depExports, exports);
                                } catch (e) {
                                    err = e;
                                }
                            } else {
                                exports = context.execCb(id, factory, depExports, exports);
                            }

                            if (this.map.isDefine) {
                                //If setting exports via 'module' is in play,
                                //favor that over return value and exports. After that,
                                //favor a non-undefined return value over exports use.
                                cjsModule = this.module;
                                if (cjsModule &&
                                        cjsModule.exports !== undefined &&
                                        //Make sure it is not already the exports value
                                        cjsModule.exports !== this.exports) {
                                    exports = cjsModule.exports;
                                } else if (exports === undefined && this.usingExports) {
                                    //exports already set the defined value.
                                    exports = this.exports;
                                }
                            }

                            if (err) {
                                err.requireMap = this.map;
                                err.requireModules = [this.map.id];
                                err.requireType = 'define';
                                return onError((this.error = err));
                            }

                        } else {
                            //Just a literal value
                            exports = factory;
                        }

                        this.exports = exports;

                        if (this.map.isDefine && !this.ignore) {
                            defined[id] = exports;

                            if (req.onResourceLoad) {
                                req.onResourceLoad(context, this.map, this.depMaps);
                            }
                        }

                        //Clean up
                        cleanRegistry(id);

                        this.defined = true;
                    }

                    //Finished the define stage. Allow calling check again
                    //to allow define notifications below in the case of a
                    //cycle.
                    this.defining = false;

                    if (this.defined && !this.defineEmitted) {
                        this.defineEmitted = true;
                        this.emit('defined', this.exports);
                        this.defineEmitComplete = true;
                    }

                }
            },

            callPlugin: function () {
                var map = this.map,
                    id = map.id,
                    //Map already normalized the prefix.
                    pluginMap = makeModuleMap(map.prefix);

                //Mark this as a dependency for this plugin, so it
                //can be traced for cycles.
                this.depMaps.push(pluginMap);

                on(pluginMap, 'defined', bind(this, function (plugin) {
                    var load, normalizedMap, normalizedMod,
                        name = this.map.name,
                        parentName = this.map.parentMap ? this.map.parentMap.name : null,
                        localRequire = context.makeRequire(map.parentMap, {
                            enableBuildCallback: true
                        });

                    //If current map is not normalized, wait for that
                    //normalized name to load instead of continuing.
                    if (this.map.unnormalized) {
                        //Normalize the ID if the plugin allows it.
                        if (plugin.normalize) {
                            name = plugin.normalize(name, function (name) {
                                return normalize(name, parentName, true);
                            }) || '';
                        }

                        //prefix and name should already be normalized, no need
                        //for applying map config again either.
                        normalizedMap = makeModuleMap(map.prefix + '!' + name,
                                                      this.map.parentMap);
                        on(normalizedMap,
                            'defined', bind(this, function (value) {
                                this.init([], function () { return value; }, null, {
                                    enabled: true,
                                    ignore: true
                                });
                            }));

                        normalizedMod = getOwn(registry, normalizedMap.id);
                        if (normalizedMod) {
                            //Mark this as a dependency for this plugin, so it
                            //can be traced for cycles.
                            this.depMaps.push(normalizedMap);

                            if (this.events.error) {
                                normalizedMod.on('error', bind(this, function (err) {
                                    this.emit('error', err);
                                }));
                            }
                            normalizedMod.enable();
                        }

                        return;
                    }

                    load = bind(this, function (value) {
                        this.init([], function () { return value; }, null, {
                            enabled: true
                        });
                    });

                    load.error = bind(this, function (err) {
                        this.inited = true;
                        this.error = err;
                        err.requireModules = [id];

                        //Remove temp unnormalized modules for this module,
                        //since they will never be resolved otherwise now.
                        eachProp(registry, function (mod) {
                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {
                                cleanRegistry(mod.map.id);
                            }
                        });

                        onError(err);
                    });

                    //Allow plugins to load other code without having to know the
                    //context or how to 'complete' the load.
                    load.fromText = bind(this, function (text, textAlt) {
                        /*jslint evil: true */
                        var moduleName = map.name,
                            moduleMap = makeModuleMap(moduleName),
                            hasInteractive = useInteractive;

                        //As of 2.1.0, support just passing the text, to reinforce
                        //fromText only being called once per resource. Still
                        //support old style of passing moduleName but discard
                        //that moduleName in favor of the internal ref.
                        if (textAlt) {
                            text = textAlt;
                        }

                        //Turn off interactive script matching for IE for any define
                        //calls in the text, then turn it back on at the end.
                        if (hasInteractive) {
                            useInteractive = false;
                        }

                        //Prime the system by creating a module instance for
                        //it.
                        getModule(moduleMap);

                        //Transfer any config to this other module.
                        if (hasProp(config.config, id)) {
                            config.config[moduleName] = config.config[id];
                        }

                        try {
                            req.exec(text);
                        } catch (e) {
                            return onError(makeError('fromtexteval',
                                             'fromText eval for ' + id +
                                            ' failed: ' + e,
                                             e,
                                             [id]));
                        }

                        if (hasInteractive) {
                            useInteractive = true;
                        }

                        //Mark this as a dependency for the plugin
                        //resource
                        this.depMaps.push(moduleMap);

                        //Support anonymous modules.
                        context.completeLoad(moduleName);

                        //Bind the value of that module to the value for this
                        //resource ID.
                        localRequire([moduleName], load);
                    });

                    //Use parentName here since the plugin's name is not reliable,
                    //could be some weird string with no path that actually wants to
                    //reference the parentName's path.
                    plugin.load(map.name, localRequire, load, config);
                }));

                context.enable(pluginMap, this);
                this.pluginMaps[pluginMap.id] = pluginMap;
            },

            enable: function () {
                enabledRegistry[this.map.id] = this;
                this.enabled = true;

                //Set flag mentioning that the module is enabling,
                //so that immediate calls to the defined callbacks
                //for dependencies do not trigger inadvertent load
                //with the depCount still being zero.
                this.enabling = true;

                //Enable each dependency
                each(this.depMaps, bind(this, function (depMap, i) {
                    var id, mod, handler;

                    if (typeof depMap === 'string') {
                        //Dependency needs to be converted to a depMap
                        //and wired up to this module.
                        depMap = makeModuleMap(depMap,
                                               (this.map.isDefine ? this.map : this.map.parentMap),
                                               false,
                                               !this.skipMap);
                        this.depMaps[i] = depMap;

                        handler = getOwn(handlers, depMap.id);

                        if (handler) {
                            this.depExports[i] = handler(this);
                            return;
                        }

                        this.depCount += 1;

                        on(depMap, 'defined', bind(this, function (depExports) {
                            this.defineDep(i, depExports);
                            this.check();
                        }));

                        if (this.errback) {
                            on(depMap, 'error', this.errback);
                        }
                    }

                    id = depMap.id;
                    mod = registry[id];

                    //Skip special modules like 'require', 'exports', 'module'
                    //Also, don't call enable if it is already enabled,
                    //important in circular dependency cases.
                    if (!hasProp(handlers, id) && mod && !mod.enabled) {
                        context.enable(depMap, this);
                    }
                }));

                //Enable each plugin that is used in
                //a dependency
                eachProp(this.pluginMaps, bind(this, function (pluginMap) {
                    var mod = getOwn(registry, pluginMap.id);
                    if (mod && !mod.enabled) {
                        context.enable(pluginMap, this);
                    }
                }));

                this.enabling = false;

                this.check();
            },

            on: function (name, cb) {
                var cbs = this.events[name];
                if (!cbs) {
                    cbs = this.events[name] = [];
                }
                cbs.push(cb);
            },

            emit: function (name, evt) {
                each(this.events[name], function (cb) {
                    cb(evt);
                });
                if (name === 'error') {
                    //Now that the error handler was triggered, remove
                    //the listeners, since this broken Module instance
                    //can stay around for a while in the registry.
                    delete this.events[name];
                }
            }
        };

        function callGetModule(args) {
            //Skip modules already defined.
            if (!hasProp(defined, args[0])) {
                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);
            }
        }

        function removeListener(node, func, name, ieName) {
            //Favor detachEvent because of IE9
            //issue, see attachEvent/addEventListener comment elsewhere
            //in this file.
            if (node.detachEvent && !isOpera) {
                //Probably IE. If not it will throw an error, which will be
                //useful to know.
                if (ieName) {
                    node.detachEvent(ieName, func);
                }
            } else {
                node.removeEventListener(name, func, false);
            }
        }

        /**
         * Given an event from a script node, get the requirejs info from it,
         * and then removes the event listeners on the node.
         * @param {Event} evt
         * @returns {Object}
         */
        function getScriptData(evt) {
            //Using currentTarget instead of target for Firefox 2.0's sake. Not
            //all old browsers will be supported, but this one was easy enough
            //to support and still makes sense.
            var node = evt.currentTarget || evt.srcElement;

            //Remove the listeners once here.
            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');
            removeListener(node, context.onScriptError, 'error');

            return {
                node: node,
                id: node && node.getAttribute('data-requiremodule')
            };
        }

        function intakeDefines() {
            var args;

            //Any defined modules in the global queue, intake them now.
            takeGlobalQueue();

            //Make sure any remaining defQueue items get properly processed.
            while (defQueue.length) {
                args = defQueue.shift();
                if (args[0] === null) {
                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' + args[args.length - 1]));
                } else {
                    //args are id, deps, factory. Should be normalized by the
                    //define() function.
                    callGetModule(args);
                }
            }
        }

        context = {
            config: config,
            contextName: contextName,
            registry: registry,
            defined: defined,
            urlFetched: urlFetched,
            defQueue: defQueue,
            Module: Module,
            makeModuleMap: makeModuleMap,
            nextTick: req.nextTick,
            onError: onError,

            /**
             * Set a configuration for the context.
             * @param {Object} cfg config object to integrate.
             */
            configure: function (cfg) {
                //Make sure the baseUrl ends in a slash.
                if (cfg.baseUrl) {
                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {
                        cfg.baseUrl += '/';
                    }
                }

                //Save off the paths and packages since they require special processing,
                //they are additive.
                var pkgs = config.pkgs,
                    shim = config.shim,
                    objs = {
                        paths: true,
                        config: true,
                        map: true
                    };

                eachProp(cfg, function (value, prop) {
                    if (objs[prop]) {
                        if (prop === 'map') {
                            if (!config.map) {
                                config.map = {};
                            }
                            mixin(config[prop], value, true, true);
                        } else {
                            mixin(config[prop], value, true);
                        }
                    } else {
                        config[prop] = value;
                    }
                });

                //Merge shim
                if (cfg.shim) {
                    eachProp(cfg.shim, function (value, id) {
                        //Normalize the structure
                        if (isArray(value)) {
                            value = {
                                deps: value
                            };
                        }
                        if ((value.exports || value.init) && !value.exportsFn) {
                            value.exportsFn = context.makeShimExports(value);
                        }
                        shim[id] = value;
                    });
                    config.shim = shim;
                }

                //Adjust packages if necessary.
                if (cfg.packages) {
                    each(cfg.packages, function (pkgObj) {
                        var location;

                        pkgObj = typeof pkgObj === 'string' ? { name: pkgObj } : pkgObj;
                        location = pkgObj.location;

                        //Create a brand new object on pkgs, since currentPackages can
                        //be passed in again, and config.pkgs is the internal transformed
                        //state for all package configs.
                        pkgs[pkgObj.name] = {
                            name: pkgObj.name,
                            location: location || pkgObj.name,
                            //Remove leading dot in main, so main paths are normalized,
                            //and remove any trailing .js, since different package
                            //envs have different conventions: some use a module name,
                            //some use a file name.
                            main: (pkgObj.main || 'main')
                                  .replace(currDirRegExp, '')
                                  .replace(jsSuffixRegExp, '')
                        };
                    });

                    //Done with modifications, assing packages back to context config
                    config.pkgs = pkgs;
                }

                //If there are any "waiting to execute" modules in the registry,
                //update the maps for them, since their info, like URLs to load,
                //may have changed.
                eachProp(registry, function (mod, id) {
                    //If module already has init called, since it is too
                    //late to modify them, and ignore unnormalized ones
                    //since they are transient.
                    if (!mod.inited && !mod.map.unnormalized) {
                        mod.map = makeModuleMap(id);
                    }
                });

                //If a deps array or a config callback is specified, then call
                //require with those args. This is useful when require is defined as a
                //config object before require.js is loaded.
                if (cfg.deps || cfg.callback) {
                    context.require(cfg.deps || [], cfg.callback);
                }
            },

            makeShimExports: function (value) {
                function fn() {
                    var ret;
                    if (value.init) {
                        ret = value.init.apply(global, arguments);
                    }
                    return ret || (value.exports && getGlobal(value.exports));
                }
                return fn;
            },

            makeRequire: function (relMap, options) {
                options = options || {};

                function localRequire(deps, callback, errback) {
                    var id, map, requireMod;

                    if (options.enableBuildCallback && callback && isFunction(callback)) {
                        callback.__requireJsBuild = true;
                    }

                    if (typeof deps === 'string') {
                        if (isFunction(callback)) {
                            //Invalid call
                            return onError(makeError('requireargs', 'Invalid require call'), errback);
                        }

                        //If require|exports|module are requested, get the
                        //value for them from the special handlers. Caveat:
                        //this only works while module is being defined.
                        if (relMap && hasProp(handlers, deps)) {
                            return handlers[deps](registry[relMap.id]);
                        }

                        //Synchronous access to one module. If require.get is
                        //available (as in the Node adapter), prefer that.
                        if (req.get) {
                            return req.get(context, deps, relMap, localRequire);
                        }

                        //Normalize module name, if it contains . or ..
                        map = makeModuleMap(deps, relMap, false, true);
                        id = map.id;

                        if (!hasProp(defined, id)) {
                            return onError(makeError('notloaded', 'Module name "' +
                                        id +
                                        '" has not been loaded yet for context: ' +
                                        contextName +
                                        (relMap ? '' : '. Use require([])')));
                        }
                        return defined[id];
                    }

                    //Grab defines waiting in the global queue.
                    intakeDefines();

                    //Mark all the dependencies as needing to be loaded.
                    context.nextTick(function () {
                        //Some defines could have been added since the
                        //require call, collect them.
                        intakeDefines();

                        requireMod = getModule(makeModuleMap(null, relMap));

                        //Store if map config should be applied to this require
                        //call for dependencies.
                        requireMod.skipMap = options.skipMap;

                        requireMod.init(deps, callback, errback, {
                            enabled: true
                        });

                        checkLoaded();
                    });

                    return localRequire;
                }

                mixin(localRequire, {
                    isBrowser: isBrowser,

                    /**
                     * Converts a module name + .extension into an URL path.
                     * *Requires* the use of a module name. It does not support using
                     * plain URLs like nameToUrl.
                     */
                    toUrl: function (moduleNamePlusExt) {
                        var ext,
                            index = moduleNamePlusExt.lastIndexOf('.'),
                            segment = moduleNamePlusExt.split('/')[0],
                            isRelative = segment === '.' || segment === '..';

                        //Have a file extension alias, and it is not the
                        //dots from a relative path.
                        if (index !== -1 && (!isRelative || index > 1)) {
                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);
                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);
                        }

                        return context.nameToUrl(normalize(moduleNamePlusExt,
                                                relMap && relMap.id, true), ext,  true);
                    },

                    defined: function (id) {
                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);
                    },

                    specified: function (id) {
                        id = makeModuleMap(id, relMap, false, true).id;
                        return hasProp(defined, id) || hasProp(registry, id);
                    }
                });

                //Only allow undef on top level require calls
                if (!relMap) {
                    localRequire.undef = function (id) {
                        //Bind any waiting define() calls to this context,
                        //fix for #408
                        takeGlobalQueue();

                        var map = makeModuleMap(id, relMap, true),
                            mod = getOwn(registry, id);

                        delete defined[id];
                        delete urlFetched[map.url];
                        delete undefEvents[id];

                        if (mod) {
                            //Hold on to listeners in case the
                            //module will be attempted to be reloaded
                            //using a different config.
                            if (mod.events.defined) {
                                undefEvents[id] = mod.events;
                            }

                            cleanRegistry(id);
                        }
                    };
                }

                return localRequire;
            },

            /**
             * Called to enable a module if it is still in the registry
             * awaiting enablement. A second arg, parent, the parent module,
             * is passed in for context, when this method is overriden by
             * the optimizer. Not shown here to keep code compact.
             */
            enable: function (depMap) {
                var mod = getOwn(registry, depMap.id);
                if (mod) {
                    getModule(depMap).enable();
                }
            },

            /**
             * Internal method used by environment adapters to complete a load event.
             * A load event could be a script load or just a load pass from a synchronous
             * load call.
             * @param {String} moduleName the name of the module to potentially complete.
             */
            completeLoad: function (moduleName) {
                var found, args, mod,
                    shim = getOwn(config.shim, moduleName) || {},
                    shExports = shim.exports;

                takeGlobalQueue();

                while (defQueue.length) {
                    args = defQueue.shift();
                    if (args[0] === null) {
                        args[0] = moduleName;
                        //If already found an anonymous module and bound it
                        //to this name, then this is some other anon module
                        //waiting for its completeLoad to fire.
                        if (found) {
                            break;
                        }
                        found = true;
                    } else if (args[0] === moduleName) {
                        //Found matching define call for this script!
                        found = true;
                    }

                    callGetModule(args);
                }

                //Do this after the cycle of callGetModule in case the result
                //of those calls/init calls changes the registry.
                mod = getOwn(registry, moduleName);

                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {
                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {
                        if (hasPathFallback(moduleName)) {
                            return;
                        } else {
                            return onError(makeError('nodefine',
                                             'No define call for ' + moduleName,
                                             null,
                                             [moduleName]));
                        }
                    } else {
                        //A script that does not call define(), so just simulate
                        //the call for it.
                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);
                    }
                }

                checkLoaded();
            },

            /**
             * Converts a module name to a file path. Supports cases where
             * moduleName may actually be just an URL.
             * Note that it **does not** call normalize on the moduleName,
             * it is assumed to have already been normalized. This is an
             * internal API, not a public one. Use toUrl for the public API.
             */
            nameToUrl: function (moduleName, ext, skipExt) {
                var paths, pkgs, pkg, pkgPath, syms, i, parentModule, url,
                    parentPath;

                //If a colon is in the URL, it indicates a protocol is used and it is just
                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)
                //or ends with .js, then assume the user meant to use an url and not a module id.
                //The slash is important for protocol-less URLs as well as full paths.
                if (req.jsExtRegExp.test(moduleName)) {
                    //Just a plain path, not module name lookup, so just return it.
                    //Add extension if it is included. This is a bit wonky, only non-.js things pass
                    //an extension, this method probably needs to be reworked.
                    url = moduleName + (ext || '');
                } else {
                    //A module that needs to be converted to a path.
                    paths = config.paths;
                    pkgs = config.pkgs;

                    syms = moduleName.split('/');
                    //For each module name segment, see if there is a path
                    //registered for it. Start with most specific name
                    //and work up from it.
                    for (i = syms.length; i > 0; i -= 1) {
                        parentModule = syms.slice(0, i).join('/');
                        pkg = getOwn(pkgs, parentModule);
                        parentPath = getOwn(paths, parentModule);
                        if (parentPath) {
                            //If an array, it means there are a few choices,
                            //Choose the one that is desired
                            if (isArray(parentPath)) {
                                parentPath = parentPath[0];
                            }
                            syms.splice(0, i, parentPath);
                            break;
                        } else if (pkg) {
                            //If module name is just the package name, then looking
                            //for the main module.
                            if (moduleName === pkg.name) {
                                pkgPath = pkg.location + '/' + pkg.main;
                            } else {
                                pkgPath = pkg.location;
                            }
                            syms.splice(0, i, pkgPath);
                            break;
                        }
                    }

                    //Join the path parts together, then figure out if baseUrl is needed.
                    url = syms.join('/');
                    url += (ext || (/\?/.test(url) || skipExt ? '' : '.js'));
                    url = (url.charAt(0) === '/' || url.match(/^[\w\+\.\-]+:/) ? '' : config.baseUrl) + url;
                }

                return config.urlArgs ? url +
                                        ((url.indexOf('?') === -1 ? '?' : '&') +
                                         config.urlArgs) : url;
            },

            //Delegates to req.load. Broken out as a separate function to
            //allow overriding in the optimizer.
            load: function (id, url) {
                req.load(context, id, url);
            },

            /**
             * Executes a module callack function. Broken out as a separate function
             * solely to allow the build system to sequence the files in the built
             * layer in the right sequence.
             *
             * @private
             */
            execCb: function (name, callback, args, exports) {
                return callback.apply(exports, args);
            },

            /**
             * callback for script loads, used to check status of loading.
             *
             * @param {Event} evt the event from the browser for the script
             * that was loaded.
             */
            onScriptLoad: function (evt) {
                //Using currentTarget instead of target for Firefox 2.0's sake. Not
                //all old browsers will be supported, but this one was easy enough
                //to support and still makes sense.
                if (evt.type === 'load' ||
                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {
                    //Reset interactive script so a script node is not held onto for
                    //to long.
                    interactiveScript = null;

                    //Pull out the name of the module and the context.
                    var data = getScriptData(evt);
                    context.completeLoad(data.id);
                }
            },

            /**
             * Callback for script errors.
             */
            onScriptError: function (evt) {
                var data = getScriptData(evt);
                if (!hasPathFallback(data.id)) {
                    return onError(makeError('scripterror', 'Script error', evt, [data.id]));
                }
            }
        };

        context.require = context.makeRequire();
        return context;
    }

    /**
     * Main entry point.
     *
     * If the only argument to require is a string, then the module that
     * is represented by that string is fetched for the appropriate context.
     *
     * If the first argument is an array, then it will be treated as an array
     * of dependency string names to fetch. An optional function callback can
     * be specified to execute when all of those dependencies are available.
     *
     * Make a local req variable to help Caja compliance (it assumes things
     * on a require that are not standardized), and to give a short
     * name for minification/local scope use.
     */
    req = requirejs = function (deps, callback, errback, optional) {

        //Find the right context, use default
        var context, config,
            contextName = defContextName;

        // Determine if have config object in the call.
        if (!isArray(deps) && typeof deps !== 'string') {
            // deps is a config object
            config = deps;
            if (isArray(callback)) {
                // Adjust args if there are dependencies
                deps = callback;
                callback = errback;
                errback = optional;
            } else {
                deps = [];
            }
        }

        if (config && config.context) {
            contextName = config.context;
        }

        context = getOwn(contexts, contextName);
        if (!context) {
            context = contexts[contextName] = req.s.newContext(contextName);
        }

        if (config) {
            context.configure(config);
        }

        return context.require(deps, callback, errback);
    };

    /**
     * Support timely.require.config() to make it easier to cooperate with other
     * AMD loaders on globally agreed names.
     */
    req.config = function (config) {
        return req(config);
    };

    /**
     * Execute something after the current tick
     * of the event loop. Override for other envs
     * that have a better solution than setTimeout.
     * @param  {Function} fn function to execute later.
     */
    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {
        setTimeout(fn, 4);
    } : function (fn) { fn(); };

    /**
     * Export require as a global, but only if it does not already exist.
     */
    if (!require) {
        require = req;
    }

    req.version = version;

    //Used to filter out dependencies that are already paths.
    req.jsExtRegExp = /^\/|:|\?|\.js$/;
    req.isBrowser = isBrowser;
    s = req.s = {
        contexts: contexts,
        newContext: newContext
    };

    //Create default context.
    req({});

    //Exports some context-sensitive methods on global require.
    each([
        'toUrl',
        'undef',
        'defined',
        'specified'
    ], function (prop) {
        //Reference from contexts instead of early binding to default context,
        //so that during builds, the latest instance of the default context
        //with its config gets used.
        req[prop] = function () {
            var ctx = contexts[defContextName];
            return ctx.require[prop].apply(ctx, arguments);
        };
    });

    if (isBrowser) {
        head = s.head = document.getElementsByTagName('head')[0];
        //If BASE tag is in play, using appendChild is a problem for IE6.
        //When that browser dies, this can be removed. Details in this jQuery bug:
        //http://dev.jquery.com/ticket/2709
        baseElement = document.getElementsByTagName('base')[0];
        if (baseElement) {
            head = s.head = baseElement.parentNode;
        }
    }

    /**
     * Any errors that require explicitly generates will be passed to this
     * function. Intercept/override it if you want custom error handling.
     * @param {Error} err the error object.
     */
    req.onError = function (err) {
        throw err;
    };

    /**
     * Does the request to load a module for the browser case.
     * Make this a separate function to allow other environments
     * to override it.
     *
     * @param {Object} context the require context to find state.
     * @param {String} moduleName the name of the module.
     * @param {Object} url the URL to the module.
     */
    req.load = function (context, moduleName, url) {
        var config = (context && context.config) || {},
            node;
        if (isBrowser) {
            //In the browser so use a script tag
            node = config.xhtml ?
                    document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :
                    document.createElement('script');
            node.type = config.scriptType || 'text/javascript';
            node.charset = 'utf-8';
            node.async = true;

            node.setAttribute('data-requirecontext', context.contextName);
            node.setAttribute('data-requiremodule', moduleName);

            //Set up load listener. Test attachEvent first because IE9 has
            //a subtle issue in its addEventListener and script onload firings
            //that do not match the behavior of all other browsers with
            //addEventListener support, which fire the onload event for a
            //script right after the script execution. See:
            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution
            //UNFORTUNATELY Opera implements attachEvent but does not follow the script
            //script execution mode.
            if (node.attachEvent &&
                    //Check if node.attachEvent is artificially added by custom script or
                    //natively supported by browser
                    //read https://github.com/jrburke/requirejs/issues/187
                    //if we can NOT find [native code] then it must NOT natively supported.
                    //in IE8, node.attachEvent does not have toString()
                    //Note the test for "[native code" with no closing brace, see:
                    //https://github.com/jrburke/requirejs/issues/273
                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&
                    !isOpera) {
                //Probably IE. IE (at least 6-8) do not fire
                //script onload right after executing the script, so
                //we cannot tie the anonymous define call to a name.
                //However, IE reports the script as being in 'interactive'
                //readyState at the time of the define call.
                useInteractive = true;

                node.attachEvent('onreadystatechange', context.onScriptLoad);
                //It would be great to add an error handler here to catch
                //404s in IE9+. However, onreadystatechange will fire before
                //the error handler, so that does not help. If addEventListener
                //is used, then IE will fire error before load, but we cannot
                //use that pathway given the connect.microsoft.com issue
                //mentioned above about not doing the 'script execute,
                //then fire the script load event listener before execute
                //next script' that other browsers do.
                //Best hope: IE10 fixes the issues,
                //and then destroys all installs of IE 6-9.
                //node.attachEvent('onerror', context.onScriptError);
            } else {
                node.addEventListener('load', context.onScriptLoad, false);
                node.addEventListener('error', context.onScriptError, false);
            }
            node.src = url;

            //For some cache cases in IE 6-8, the script executes before the end
            //of the appendChild execution, so to tie an anonymous define
            //call to the module name (which is stored on the node), hold on
            //to a reference to this node, but clear after the DOM insertion.
            currentlyAddingScript = node;
            if (baseElement) {
                head.insertBefore(node, baseElement);
            } else {
                head.appendChild(node);
            }
            currentlyAddingScript = null;

            return node;
        } else if (isWebWorker) {
            try {
                //In a web worker, use importScripts. This is not a very
                //efficient use of importScripts, importScripts will block until
                //its script is downloaded and evaluated. However, if web workers
                //are in play, the expectation that a build has been done so that
                //only one script needs to be loaded anyway. This may need to be
                //reevaluated if other use cases become common.
                importScripts(url);

                //Account for anonymous modules
                context.completeLoad(moduleName);
            } catch (e) {
                context.onError(makeError('importscripts',
                                'importScripts failed for ' +
                                    moduleName + ' at ' + url,
                                e,
                                [moduleName]));
            }
        }
    };

    function getInteractiveScript() {
        if (interactiveScript && interactiveScript.readyState === 'interactive') {
            return interactiveScript;
        }

        eachReverse(scripts(), function (script) {
            if (script.readyState === 'interactive') {
                return (interactiveScript = script);
            }
        });
        return interactiveScript;
    }

    //Look for a data-main script attribute, which could also adjust the baseUrl.
    if (isBrowser) {
        //Figure out baseUrl. Get it from the script tag with require.js in it.
        eachReverse(scripts(), function (script) {
            //Set the 'head' where we can append children by
            //using the script's parent.
            if (!head) {
                head = script.parentNode;
            }

            //Look for a data-main attribute to set main script for the page
            //to load. If it is there, the path to data main becomes the
            //baseUrl, if it is not already set.
            dataMain = script.getAttribute('data-main');
            if (dataMain) {
                //Set final baseUrl if there is not already an explicit one.
                if (!cfg.baseUrl) {
                    //Pull off the directory of data-main for use as the
                    //baseUrl.
                    src = dataMain.split('/');
                    mainScript = src.pop();
                    subPath = src.length ? src.join('/')  + '/' : './';

                    cfg.baseUrl = subPath;
                    dataMain = mainScript;
                }

                //Strip off any trailing .js since dataMain is now
                //like a module name.
                dataMain = dataMain.replace(jsSuffixRegExp, '');

                //Put the data-main script in the files to load.
                cfg.deps = cfg.deps ? cfg.deps.concat(dataMain) : [dataMain];

                return true;
            }
        });
    }

    /**
     * The function that handles definitions of modules. Differs from
     * require() in that a string for the module should be the first argument,
     * and the function to execute after dependencies are loaded should
     * return a value to define the module corresponding to the first argument's
     * name.
     */
    define = function (name, deps, callback) {
        var node, context;

        //Allow for anonymous modules
        if (typeof name !== 'string') {
            //Adjust args appropriately
            callback = deps;
            deps = name;
            name = null;
        }

        //This module may not have dependencies
        if (!isArray(deps)) {
            callback = deps;
            deps = [];
        }

        //If no name, and callback is a function, then figure out if it a
        //CommonJS thing with dependencies.
        if (!deps.length && isFunction(callback)) {
            //Remove comments from the callback string,
            //look for require calls, and pull them into the dependencies,
            //but only if there are function args.
            if (callback.length) {
                callback
                    .toString()
                    .replace(commentRegExp, '')
                    .replace(cjsRequireRegExp, function (match, dep) {
                        deps.push(dep);
                    });

                //May be a CommonJS thing even without require calls, but still
                //could use exports, and module. Avoid doing exports and module
                //work though if it just needs require.
                //REQUIRES the function to expect the CommonJS variables in the
                //order listed below.
                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);
            }
        }

        //If in IE 6-8 and hit an anonymous define() call, do the interactive
        //work.
        if (useInteractive) {
            node = currentlyAddingScript || getInteractiveScript();
            if (node) {
                if (!name) {
                    name = node.getAttribute('data-requiremodule');
                }
                context = contexts[node.getAttribute('data-requirecontext')];
            }
        }

        //Always save off evaluating the def call until the script onload handler.
        //This allows multiple modules to be in a file without prematurely
        //tracing dependencies, and allows for anonymous module support,
        //where the module name is not known until the script onload event
        //occurs. If no context, use the global queue, and get it processed
        //in the onscript load callback.
        (context ? context.defQueue : globalDefQueue).push([name, deps, callback]);
    };

    define.amd = {
        jQuery: true
    };


    /**
     * Executes the text. Normally just uses eval, but can be modified
     * to use a better, environment-specific call. Only used for transpiling
     * loader plugins, not for plain JS modules.
     * @param {String} text the text to execute/evaluate.
     */
    req.exec = function (text) {
        /*jslint evil: true */
        return eval(text);
    };

    //Set up with config info.
    req(cfg);
}(this));

timely.requirejs = requirejs;timely.require = require;timely.define = define;
}
}());
			// make timely global
			window.timely = timely;
					timely.require.config( {
			waitSeconds : 15,
			urlArgs     : 'ver=2.3.11',
			baseUrl     : 'http://localhost/wp-content/plugins/all-in-one-event-calendar/public/js/'
		} );
			// Load other modules
			timely.define( 'ai1ec_calendar', {"export_url":"webcal:\/\/localhost\/?plugin=all-in-one-event-calendar&controller=ai1ec_exporter_controller&action=export_events","fonts":[{"name":"League Gothic","url":"http:\/\/localhost\/wp-content\/plugins\/all-in-one-event-calendar\/public\/themes-ai1ec\/vortex\/font_css\/font-league-gothic.css"},{"name":"fontawesome","url":"http:\/\/localhost\/wp-content\/plugins\/all-in-one-event-calendar\/public\/themes-ai1ec\/vortex\/font_css\/font-awesome.css"}],"permalinks_structure":"\/%postname%\/","calendar_url":"http:\/\/localhost\/calendar-19\/","full_calendar_url":"http:\/\/localhost\/calendar-19\/","extension_urls":[{"url":"http:\/\/localhost\/wp-content\/plugins\/all-in-one-event-calendar-extended-views\/public\/js\/pages\/extended_views.js","id":"ai1ec_extended_views_js"}],"event_page":{"id":"ai1ec_event","url":"http:\/\/localhost\/wp-content\/plugins\/all-in-one-event-calendar\/public\/js\/pages\/event.js"}} );
			timely.define( 'ai1ec_config', {"calendar_feeds_nonce":"79c6843ff0","duplicate_feed_message":"This feed is already being imported.","invalid_url_message":"Please enter a valid iCalendar URL.","invalid_email_message":"Please enter a valid email address.","choose_image_message":"Choose Image","now":"1457365268","size_less_variable_not_ok":"The value you have entered is not a valid CSS length.","confirm_reset_theme":"Are you sure you want to reset your theme options to their default values?","error_message_not_valid_lat":"Please enter a valid latitude. A valid latitude is comprised between +90 and -90.","error_message_not_valid_long":"Please enter a valid longitude. A valid longitude is comprised between +180 and -180.","error_message_not_entered_lat":"When the \"Input coordinates\" checkbox is checked, \"Latitude\" is a required field.","error_message_not_entered_long":"When the \"Input coordinates\" checkbox is checked, \"Longitude\" is a required field.","ai1ec_contact_url_not_valid":"The URL you have entered in the <b>Organizer Contact Info<\/b> > <b>Website URL<\/b> seems to be invalid.","ai1ec_ticket_url_not_valid":"The URL you have entered in the <b>Event Cost and Tickets<\/b> > <b>Buy Tickets URL<\/b> seems to be invalid.","general_url_not_valid":"Please remember that URLs must start with either \"http:\/\/\" or \"https:\/\/\".","calendar_loading":"Loading\u2026","ticketing_required_fields":"<p class=\"ai1ec_ticketing_required_alert\"><b>Some fields required for Ticketing are missing.<\/b><br><i>Missing or incorrect fields are outlined red.<\/i><\/p>","language":"en","ajax_url":"http:\/\/localhost\/wp-admin\/admin-ajax.php","twentyfour_hour":"","date_format":"def","month_names":"January,February,March,April,May,June,July,August,September,October,November,December","day_names":"S,M,T,W,T,F,S","week_start_day":"0","week_view_starts_at":"8","week_view_ends_at":"24","blog_timezone":"0","affix_filter_menu":"","affix_vertical_offset_md":"0","affix_vertical_offset_lg":"0","affix_vertical_offset_sm":"0","affix_vertical_offset_xs":"0","calendar_page_id":"402","region":"","site_url":"http:\/\/localhost\/","javascript_widgets":{"ai1ec-superwidget":[],"ai1ec_superwidget":[],"ai1ec_agenda_widget":{"events_seek_type":"events","events_per_page":10,"days_per_page":10,"show_subscribe_buttons":true,"show_calendar_button":true,"hide_on_calendar_page":true,"limit_by_cat":false,"limit_by_tag":false,"cat_ids":[],"tag_ids":[]},"ai1eccfg_cog_widget":{"title":"Filter Groups","name":"","taxonomy":"events_tags","emphasis":"Next event:"}},"widget_creator":{"preview":"Preview:","preview_loading":"Loading preview&nbsp;<i class=\"ai1ec-fa ai1ec-fa-spin ai1ec-fa-spinner\"><\/i>"},"ticketing":{"details":"Ticketing Details","hide_details":"Hide Ticketing Details","loading_details":"Loading tickets details...","type_and_price":"Type and price","info":"Info","report":"Report","sale_dates":"Sale dates","limits":"Limits","actions":"Actions","sold":"Sold:","left":"Left:","start":"Start:","end":"End:","min":"Min:","max":"Max:","attendees":"Attendees","hide_attendees":"Hide Attendees","attendees_list":"Attendees List","guest_name":"Guest Name","status":"Status","email":"Email","no_attendees":"No attendees for this ticket type.","edit":"Edit","code":"Code","unlimited":"Unlimited"},"review":{"message_sent":"Your message has been sent. Thank you for your feedback.","message_error":"Your message has not been sent. Please try again or contact us."},"load_views_error":"Something went wrong while fetching events.<br>The request status is: %STATUS% <br>The error thrown was: %ERROR%","load_views_error_popup_title":"Response text received from server","load_views_error_link_popup":"Click here for technical details","cookie_path":"\/","disable_autocompletion":"","end_must_be_after_start":"The end date can't be earlier than the start date.","show_at_least_six_hours":"For week and day view, you must select an interval of at least 6 hours.","ai1ec_permalinks_enabled":"1","set_calendar_page":"You must choose the Calendar page before using the Super Widget"} );
			timely.define( "jquery_timely", function() {
	/*global jQuery: true */
	 // jshint ;_;
	/*!
	 * jQuery JavaScript Library v2.0.0
	 * http://jquery.com/
	 *
	 * Includes Sizzle.js
	 * http://sizzlejs.com/
	 *
	 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2013-04-18
	 */
	(function( window, undefined ) {

	// Can't do this because several apps including ASP.NET trace
	// the stack via arguments.caller.callee and Firefox dies if
	// you try to trace through "use strict" call chains. (#13335)
	// Support: Firefox 18+
	//
	var
		// A central reference to the root jQuery(document)
		rootjQuery,

		// The deferred used on DOM ready
		readyList,

		// Support: IE9
		// For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
		core_strundefined = typeof undefined,

		// Use the correct document accordingly with window argument (sandbox)
		location = window.location,
		document = window.document,
		docElem = document.documentElement,

		// Map over jQuery in case of overwrite
		_jQuery = window.jQuery,

		// Map over the $ in case of overwrite
		_$ = window.$,

		// [[Class]] -> type pairs
		class2type = {},

		// List of deleted data cache ids, so we can reuse them
		core_deletedIds = [],

		core_version = "2.0.0-ai1ec",

		// Save a reference to some core methods
		core_concat = core_deletedIds.concat,
		core_push = core_deletedIds.push,
		core_slice = core_deletedIds.slice,
		core_indexOf = core_deletedIds.indexOf,
		core_toString = class2type.toString,
		core_hasOwn = class2type.hasOwnProperty,
		core_trim = core_version.trim,

		// Define a local copy of jQuery
		jQuery = function( selector, context ) {
			// The jQuery object is actually just the init constructor 'enhanced'
			return new jQuery.fn.init( selector, context, rootjQuery );
		},

		// Used for matching numbers
		core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,

		// Used for splitting on whitespace
		core_rnotwhite = /\S+/g,

		// A simple way to check for HTML strings
		// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
		// Strict HTML recognition (#11290: must start with <)
		rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,

		// Match a standalone tag
		rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

		// Matches dashed string for camelizing
		rmsPrefix = /^-ms-/,
		rdashAlpha = /-([\da-z])/gi,

		// Used by jQuery.camelCase as callback to replace()
		fcamelCase = function( all, letter ) {
			return letter.toUpperCase();
		},

		// The ready event handler and self cleanup method
		completed = function() {
			document.removeEventListener( "DOMContentLoaded", completed, false );
			window.removeEventListener( "load", completed, false );
			jQuery.ready();
		};

	jQuery.fn = jQuery.prototype = {
		// The current version of jQuery being used
		jquery: core_version,

		constructor: jQuery,
		init: function( selector, context, rootjQuery ) {
			var match, elem;

			// HANDLE: $(""), $(null), $(undefined), $(false)
			if ( !selector ) {
				return this;
			}

			// Handle HTML strings
			if ( typeof selector === "string" ) {
				if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
					// Assume that strings that start and end with <> are HTML and skip the regex check
					match = [ null, selector, null ];

				} else {
					match = rquickExpr.exec( selector );
				}

				// Match html or make sure no context is specified for #id
				if ( match && (match[1] || !context) ) {

					// HANDLE: $(html) -> $(array)
					if ( match[1] ) {
						context = context instanceof jQuery ? context[0] : context;

						// scripts is true for back-compat
						jQuery.merge( this, jQuery.parseHTML(
							match[1],
							context && context.nodeType ? context.ownerDocument || context : document,
							true
						) );

						// HANDLE: $(html, props)
						if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
							for ( match in context ) {
								// Properties of context are called as methods if possible
								if ( jQuery.isFunction( this[ match ] ) ) {
									this[ match ]( context[ match ] );

								// ...and otherwise set as attributes
								} else {
									this.attr( match, context[ match ] );
								}
							}
						}

						return this;

					// HANDLE: $(#id)
					} else {
						elem = document.getElementById( match[2] );

						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Inject the element directly into the jQuery object
							this.length = 1;
							this[0] = elem;
						}

						this.context = document;
						this.selector = selector;
						return this;
					}

				// HANDLE: $(expr, $(...))
				} else if ( !context || context.jquery ) {
					return ( context || rootjQuery ).find( selector );

				// HANDLE: $(expr, context)
				// (which is just equivalent to: $(context).find(expr)
				} else {
					return this.constructor( context ).find( selector );
				}

			// HANDLE: $(DOMElement)
			} else if ( selector.nodeType ) {
				this.context = this[0] = selector;
				this.length = 1;
				return this;

			// HANDLE: $(function)
			// Shortcut for document ready
			} else if ( jQuery.isFunction( selector ) ) {
				return rootjQuery.ready( selector );
			}

			if ( selector.selector !== undefined ) {
				this.selector = selector.selector;
				this.context = selector.context;
			}

			return jQuery.makeArray( selector, this );
		},

		// Start with an empty selector
		selector: "",

		// The default length of a jQuery object is 0
		length: 0,

		toArray: function() {
			return core_slice.call( this );
		},

		// Get the Nth element in the matched element set OR
		// Get the whole matched element set as a clean array
		get: function( num ) {
			return num == null ?

				// Return a 'clean' array
				this.toArray() :

				// Return just the object
				( num < 0 ? this[ this.length + num ] : this[ num ] );
		},

		// Take an array of elements and push it onto the stack
		// (returning the new matched element set)
		pushStack: function( elems ) {

			// Build a new jQuery matched element set
			var ret = jQuery.merge( this.constructor(), elems );

			// Add the old object onto the stack (as a reference)
			ret.prevObject = this;
			ret.context = this.context;

			// Return the newly-formed element set
			return ret;
		},

		// Execute a callback for every element in the matched set.
		// (You can seed the arguments with an array of args, but this is
		// only used internally.)
		each: function( callback, args ) {
			return jQuery.each( this, callback, args );
		},

		ready: function( fn ) {
			// Add the callback
			jQuery.ready.promise().done( fn );

			return this;
		},

		slice: function() {
			return this.pushStack( core_slice.apply( this, arguments ) );
		},

		first: function() {
			return this.eq( 0 );
		},

		last: function() {
			return this.eq( -1 );
		},

		eq: function( i ) {
			var len = this.length,
				j = +i + ( i < 0 ? len : 0 );
			return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
		},

		map: function( callback ) {
			return this.pushStack( jQuery.map(this, function( elem, i ) {
				return callback.call( elem, i, elem );
			}));
		},

		end: function() {
			return this.prevObject || this.constructor(null);
		},

		// For internal use only.
		// Behaves like an Array's method, not like a jQuery method.
		push: core_push,
		sort: [].sort,
		splice: [].splice
	};

	// Give the init function the jQuery prototype for later instantiation
	jQuery.fn.init.prototype = jQuery.fn;

	jQuery.extend = jQuery.fn.extend = function() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0] || {},
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if ( typeof target === "boolean" ) {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		}

		// Handle case when target is a string or something (possible in deep copy)
		if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
			target = {};
		}

		// extend jQuery itself if only one argument is passed
		if ( length === i ) {
			target = this;
			--i;
		}

		for ( ; i < length; i++ ) {
			// Only deal with non-null/undefined values
			if ( (options = arguments[ i ]) != null ) {
				// Extend the base object
				for ( name in options ) {
					src = target[ name ];
					copy = options[ name ];

					// Prevent never-ending loop
					if ( target === copy ) {
						continue;
					}

					// Recurse if we're merging plain objects or arrays
					if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
						if ( copyIsArray ) {
							copyIsArray = false;
							clone = src && jQuery.isArray(src) ? src : [];

						} else {
							clone = src && jQuery.isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						target[ name ] = jQuery.extend( deep, clone, copy );

					// Don't bring in undefined values
					} else if ( copy !== undefined ) {
						target[ name ] = copy;
					}
				}
			}
		}

		// Return the modified object
		return target;
	};

	jQuery.extend({
		// Unique for each copy of jQuery on the page
		expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" ),

		noConflict: function( deep ) {
			if ( window.$ === jQuery ) {
				window.$ = _$;
			}

			if ( deep && window.jQuery === jQuery ) {
				window.jQuery = _jQuery;
			}

			return jQuery;
		},

		// Is the DOM ready to be used? Set to true once it occurs.
		isReady: false,

		// A counter to track how many items to wait for before
		// the ready event fires. See #6781
		readyWait: 1,

		// Hold (or release) the ready event
		holdReady: function( hold ) {
			if ( hold ) {
				jQuery.readyWait++;
			} else {
				jQuery.ready( true );
			}
		},

		// Handle when the DOM is ready
		ready: function( wait ) {

			// Abort if there are pending holds or we're already ready
			if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
				return;
			}

			// Remember that the DOM is ready
			jQuery.isReady = true;

			// If a normal DOM Ready event fired, decrement, and wait if need be
			if ( wait !== true && --jQuery.readyWait > 0 ) {
				return;
			}

			// If there are functions bound, to execute
			readyList.resolveWith( document, [ jQuery ] );

			// Trigger any bound ready events
			if ( jQuery.fn.trigger ) {
				jQuery( document ).trigger("ready").off("ready");
			}
		},

		// See test/unit/core.js for details concerning isFunction.
		// Since version 1.3, DOM methods and functions like alert
		// aren't supported. They return false on IE (#2968).
		isFunction: function( obj ) {
			return jQuery.type(obj) === "function";
		},

		isArray: Array.isArray,

		isWindow: function( obj ) {
			return obj != null && obj === obj.window;
		},

		isNumeric: function( obj ) {
			return !isNaN( parseFloat(obj) ) && isFinite( obj );
		},

		type: function( obj ) {
			if ( obj == null ) {
				return String( obj );
			}
			// Support: Safari <= 5.1 (functionish RegExp)
			return typeof obj === "object" || typeof obj === "function" ?
				class2type[ core_toString.call(obj) ] || "object" :
				typeof obj;
		},

		isPlainObject: function( obj ) {
			// Not plain objects:
			// - Any object or value whose internal [[Class]] property is not "[object Object]"
			// - DOM nodes
			// - window
			if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
				return false;
			}

			// Support: Firefox <20
			// The try/catch suppresses exceptions thrown when attempting to access
			// the "constructor" property of certain host objects, ie. |window.location|
			// https://bugzilla.mozilla.org/show_bug.cgi?id=814622
			try {
				if ( obj.constructor &&
						!core_hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
					return false;
				}
			} catch ( e ) {
				return false;
			}

			// If the function hasn't returned already, we're confident that
			// |obj| is a plain object, created by {} or constructed with new Object
			return true;
		},

		isEmptyObject: function( obj ) {
			var name;
			for ( name in obj ) {
				return false;
			}
			return true;
		},

		error: function( msg ) {
			throw new Error( msg );
		},

		// data: string of html
		// context (optional): If specified, the fragment will be created in this context, defaults to document
		// keepScripts (optional): If true, will include scripts passed in the html string
		parseHTML: function( data, context, keepScripts ) {
			if ( !data || typeof data !== "string" ) {
				return null;
			}
			if ( typeof context === "boolean" ) {
				keepScripts = context;
				context = false;
			}
			context = context || document;

			var parsed = rsingleTag.exec( data ),
				scripts = !keepScripts && [];

			// Single tag
			if ( parsed ) {
				return [ context.createElement( parsed[1] ) ];
			}

			parsed = jQuery.buildFragment( [ data ], context, scripts );

			if ( scripts ) {
				jQuery( scripts ).remove();
			}

			return jQuery.merge( [], parsed.childNodes );
		},

		parseJSON: JSON.parse,

		// Cross-browser xml parsing
		parseXML: function( data ) {
			var xml, tmp;
			if ( !data || typeof data !== "string" ) {
				return null;
			}

			// Support: IE9
			try {
				tmp = new DOMParser();
				xml = tmp.parseFromString( data , "text/xml" );
			} catch ( e ) {
				xml = undefined;
			}

			if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
				jQuery.error( "Invalid XML: " + data );
			}
			return xml;
		},

		noop: function() {},

		// Evaluates a script in a global context
		globalEval: function( code ) {
			var script,
					indirect = eval;

			code = jQuery.trim( code );

			if ( code ) {
				// If the code includes a valid, prologue position
				// strict mode pragma, execute code by injecting a
				// script tag into the document.
				if ( code.indexOf("use strict") === 1 ) {
					script = document.createElement("script");
					script.text = code;
					document.head.appendChild( script ).parentNode.removeChild( script );
				} else {
				// Otherwise, avoid the DOM node creation, insertion
				// and removal by using an indirect global eval
					indirect( code );
				}
			}
		},

		// Convert dashed to camelCase; used by the css and data modules
		// Microsoft forgot to hump their vendor prefix (#9572)
		camelCase: function( string ) {
			return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
		},

		nodeName: function( elem, name ) {
			return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
		},

		// args is for internal usage only
		each: function( obj, callback, args ) {
			var value,
				i = 0,
				length = obj.length,
				isArray = isArraylike( obj );

			if ( args ) {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.apply( obj[ i ], args );

						if ( value === false ) {
							break;
						}
					}
				}

			// A special, fast, case for the most common use of each
			} else {
				if ( isArray ) {
					for ( ; i < length; i++ ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				} else {
					for ( i in obj ) {
						value = callback.call( obj[ i ], i, obj[ i ] );

						if ( value === false ) {
							break;
						}
					}
				}
			}

			return obj;
		},

		trim: function( text ) {
			return text == null ? "" : core_trim.call( text );
		},

		// results is for internal usage only
		makeArray: function( arr, results ) {
			var ret = results || [];

			if ( arr != null ) {
				if ( isArraylike( Object(arr) ) ) {
					jQuery.merge( ret,
						typeof arr === "string" ?
						[ arr ] : arr
					);
				} else {
					core_push.call( ret, arr );
				}
			}

			return ret;
		},

		inArray: function( elem, arr, i ) {
			return arr == null ? -1 : core_indexOf.call( arr, elem, i );
		},

		merge: function( first, second ) {
			var l = second.length,
				i = first.length,
				j = 0;

			if ( typeof l === "number" ) {
				for ( ; j < l; j++ ) {
					first[ i++ ] = second[ j ];
				}
			} else {
				while ( second[j] !== undefined ) {
					first[ i++ ] = second[ j++ ];
				}
			}

			first.length = i;

			return first;
		},

		grep: function( elems, callback, inv ) {
			var retVal,
				ret = [],
				i = 0,
				length = elems.length;
			inv = !!inv;

			// Go through the array, only saving the items
			// that pass the validator function
			for ( ; i < length; i++ ) {
				retVal = !!callback( elems[ i ], i );
				if ( inv !== retVal ) {
					ret.push( elems[ i ] );
				}
			}

			return ret;
		},

		// arg is for internal usage only
		map: function( elems, callback, arg ) {
			var value,
				i = 0,
				length = elems.length,
				isArray = isArraylike( elems ),
				ret = [];

			// Go through the array, translating each of the items to their
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret[ ret.length ] = value;
					}
				}

			// Go through every key on the object,
			} else {
				for ( i in elems ) {
					value = callback( elems[ i ], i, arg );

					if ( value != null ) {
						ret[ ret.length ] = value;
					}
				}
			}

			// Flatten any nested arrays
			return core_concat.apply( [], ret );
		},

		// A global GUID counter for objects
		guid: 1,

		// Bind a function to a context, optionally partially applying any
		// arguments.
		proxy: function( fn, context ) {
			var tmp, args, proxy;

			if ( typeof context === "string" ) {
				tmp = fn[ context ];
				context = fn;
				fn = tmp;
			}

			// Quick check to determine if target is callable, in the spec
			// this throws a TypeError, but we will just return undefined.
			if ( !jQuery.isFunction( fn ) ) {
				return undefined;
			}

			// Simulated bind
			args = core_slice.call( arguments, 2 );
			proxy = function() {
				return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
			};

			// Set the guid of unique handler to the same of original handler, so it can be removed
			proxy.guid = fn.guid = fn.guid || jQuery.guid++;

			return proxy;
		},

		// Multifunctional method to get and set values of a collection
		// The value/s can optionally be executed if it's a function
		access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
			var i = 0,
				length = elems.length,
				bulk = key == null;

			// Sets many values
			if ( jQuery.type( key ) === "object" ) {
				chainable = true;
				for ( i in key ) {
					jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
				}

			// Sets one value
			} else if ( value !== undefined ) {
				chainable = true;

				if ( !jQuery.isFunction( value ) ) {
					raw = true;
				}

				if ( bulk ) {
					// Bulk operations run against the entire set
					if ( raw ) {
						fn.call( elems, value );
						fn = null;

					// ...except when executing function values
					} else {
						bulk = fn;
						fn = function( elem, key, value ) {
							return bulk.call( jQuery( elem ), value );
						};
					}
				}

				if ( fn ) {
					for ( ; i < length; i++ ) {
						fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
					}
				}
			}

			return chainable ?
				elems :

				// Gets
				bulk ?
					fn.call( elems ) :
					length ? fn( elems[0], key ) : emptyGet;
		},

		now: Date.now,

		// A method for quickly swapping in/out CSS properties to get correct calculations.
		// Note: this method belongs to the css module but it's needed here for the support module.
		// If support gets modularized, this method should be moved back to the css module.
		swap: function( elem, options, callback, args ) {
			var ret, name,
				old = {};

			// Remember the old values, and insert the new ones
			for ( name in options ) {
				old[ name ] = elem.style[ name ];
				elem.style[ name ] = options[ name ];
			}

			ret = callback.apply( elem, args || [] );

			// Revert the old values
			for ( name in options ) {
				elem.style[ name ] = old[ name ];
			}

			return ret;
		}
	});

	jQuery.ready.promise = function( obj ) {
		if ( !readyList ) {

			readyList = jQuery.Deferred();

			// Catch cases where $(document).ready() is called after the browser event has already occurred.
			// we once tried to use readyState "interactive" here, but it caused issues like the one
			// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
			if ( document.readyState === "complete" ) {
				// Handle it asynchronously to allow scripts the opportunity to delay ready
				setTimeout( jQuery.ready );

			} else {

				// Use the handy event callback
				document.addEventListener( "DOMContentLoaded", completed, false );

				// A fallback to window.onload, that will always work
				window.addEventListener( "load", completed, false );
			}
		}
		return readyList.promise( obj );
	};

	// Populate the class2type map
	jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	});

	function isArraylike( obj ) {
		var length = obj.length,
			type = jQuery.type( obj );

		if ( jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.nodeType === 1 && length ) {
			return true;
		}

		return type === "array" || type !== "function" &&
			( length === 0 ||
			typeof length === "number" && length > 0 && ( length - 1 ) in obj );
	}

	// All jQuery objects should point back to these
	rootjQuery = jQuery(document);
	/*!
	 * Sizzle CSS Selector Engine v1.9.2-pre
	 * http://sizzlejs.com/
	 *
	 * Copyright 2013 jQuery Foundation, Inc. and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2013-04-16
	 */
	(function( window, undefined ) {

	var i,
		cachedruns,
		Expr,
		getText,
		isXML,
		compile,
		outermostContext,
		sortInput,

		// Local document vars
		setDocument,
		document,
		docElem,
		documentIsHTML,
		rbuggyQSA,
		rbuggyMatches,
		matches,
		contains,

		// Instance-specific data
		expando = "sizzle" + -(new Date()),
		preferredDoc = window.document,
		support = {},
		dirruns = 0,
		done = 0,
		classCache = createCache(),
		tokenCache = createCache(),
		compilerCache = createCache(),
		hasDuplicate = false,
		sortOrder = function() { return 0; },

		// General-purpose constants
		strundefined = typeof undefined,
		MAX_NEGATIVE = 1 << 31,

		// Array methods
		arr = [],
		pop = arr.pop,
		push_native = arr.push,
		push = arr.push,
		slice = arr.slice,
		// Use a stripped-down indexOf if we can't use a native one
		indexOf = arr.indexOf || function( elem ) {
			var i = 0,
				len = this.length;
			for ( ; i < len; i++ ) {
				if ( this[i] === elem ) {
					return i;
				}
			}
			return -1;
		},

		booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

		// Regular expressions

		// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
		whitespace = "[\\x20\\t\\r\\n\\f]",
		// http://www.w3.org/TR/css3-syntax/#characters
		characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

		// Loosely modeled on CSS identifier characters
		// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
		// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
		identifier = characterEncoding.replace( "w", "w#" ),

		// Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
		attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
			"*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

		// Prefer arguments quoted,
		//   then not containing pseudos/brackets,
		//   then attribute selectors/non-parenthetical expressions,
		//   then anything else
		// These preferences are here to reduce the number of selectors
		//   needing tokenize in the PSEUDO preFilter
		pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",

		// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
		rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

		rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
		rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

		rsibling = new RegExp( whitespace + "*[+~]" ),
		rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*)" + whitespace + "*\\]", "g" ),

		rpseudo = new RegExp( pseudos ),
		ridentifier = new RegExp( "^" + identifier + "$" ),

		matchExpr = {
			"ID": new RegExp( "^#(" + characterEncoding + ")" ),
			"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
			"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
			"ATTR": new RegExp( "^" + attributes ),
			"PSEUDO": new RegExp( "^" + pseudos ),
			"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
				"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
				"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
			"boolean": new RegExp( "^(?:" + booleans + ")$", "i" ),
			// For use in libraries implementing .is()
			// We use this for POS matching in `select`
			"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
				whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
		},

		rnative = /^[^{]+\{\s*\[native \w/,

		// Easily-parseable/retrievable ID or TAG or CLASS selectors
		rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

		rinputs = /^(?:input|select|textarea|button)$/i,
		rheader = /^h\d$/i,

		rescape = /'|\\/g,

		// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
		runescape = /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,
		funescape = function( _, escaped ) {
			var high = "0x" + escaped - 0x10000;
			// NaN means non-codepoint
			return high !== high ?
				escaped :
				// BMP codepoint
				high < 0 ?
					String.fromCharCode( high + 0x10000 ) :
					// Supplemental Plane codepoint (surrogate pair)
					String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
		};

	// Optimize for push.apply( _, NodeList )
	try {
		push.apply(
			(arr = slice.call( preferredDoc.childNodes )),
			preferredDoc.childNodes
		);
		// Support: Android<4.0
		// Detect silently failing push.apply
		arr[ preferredDoc.childNodes.length ].nodeType;
	} catch ( e ) {
		push = { apply: arr.length ?

			// Leverage slice if possible
			function( target, els ) {
				push_native.apply( target, slice.call(els) );
			} :

			// Support: IE<9
			// Otherwise append directly
			function( target, els ) {
				var j = target.length,
					i = 0;
				// Can't trust NodeList.length
				while ( (target[j++] = els[i++]) ) {}
				target.length = j - 1;
			}
		};
	}

	/**
	 * For feature detection
	 * @param {Function} fn The function to test for native support
	 */
	function isNative( fn ) {
		return rnative.test( fn + "" );
	}

	/**
	 * Create key-value caches of limited size
	 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
	 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
	 *	deleting the oldest entry
	 */
	function createCache() {
		var cache,
			keys = [];

		return (cache = function( key, value ) {
			// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
			if ( keys.push( key += " " ) > Expr.cacheLength ) {
				// Only keep the most recent entries
				delete cache[ keys.shift() ];
			}
			return (cache[ key ] = value);
		});
	}

	/**
	 * Mark a function for special use by Sizzle
	 * @param {Function} fn The function to mark
	 */
	function markFunction( fn ) {
		fn[ expando ] = true;
		return fn;
	}

	/**
	 * Support testing using an element
	 * @param {Function} fn Passed the created div and expects a boolean result
	 */
	function assert( fn ) {
		var div = document.createElement("div");

		try {
			return !!fn( div );
		} catch (e) {
			return false;
		} finally {
			if ( div.parentNode ) {
				div.parentNode.removeChild( div );
			}
			// release memory in IE
			div = null;
		}
	}

	function Sizzle( selector, context, results, seed ) {
		var match, elem, m, nodeType,
			// QSA vars
			i, groups, old, nid, newContext, newSelector;

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}

		context = context || document;
		results = results || [];

		if ( !selector || typeof selector !== "string" ) {
			return results;
		}

		if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
			return [];
		}

		if ( documentIsHTML && !seed ) {

			// Shortcuts
			if ( (match = rquickExpr.exec( selector )) ) {
				// Speed-up: Sizzle("#ID")
				if ( (m = match[1]) ) {
					if ( nodeType === 9 ) {
						elem = context.getElementById( m );
						// Check parentNode to catch when Blackberry 4.6 returns
						// nodes that are no longer in the document #6963
						if ( elem && elem.parentNode ) {
							// Handle the case where IE, Opera, and Webkit return items
							// by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}
					} else {
						// Context is not a document
						if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
							contains( context, elem ) && elem.id === m ) {
							results.push( elem );
							return results;
						}
					}

				// Speed-up: Sizzle("TAG")
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Speed-up: Sizzle(".CLASS")
				} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// QSA path
			if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
				nid = old = expando;
				newContext = context;
				newSelector = nodeType === 9 && selector;

				// qSA works strangely on Element-rooted queries
				// We can work around this by specifying an extra ID on the root
				// and working up from there (Thanks to Andrew Dupont for the technique)
				// IE 8 doesn't work on object elements
				if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
					groups = tokenize( selector );

					if ( (old = context.getAttribute("id")) ) {
						nid = old.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", nid );
					}
					nid = "[id='" + nid + "'] ";

					i = groups.length;
					while ( i-- ) {
						groups[i] = nid + toSelector( groups[i] );
					}
					newContext = rsibling.test( selector ) && context.parentNode || context;
					newSelector = groups.join(",");
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch(qsaError) {
					} finally {
						if ( !old ) {
							context.removeAttribute("id");
						}
					}
				}
			}
		}

		// All others
		return select( selector.replace( rtrim, "$1" ), context, results, seed );
	}

	/**
	 * Detect xml
	 * @param {Element|Object} elem An element or a document
	 */
	isXML = Sizzle.isXML = function( elem ) {
		// documentElement is verified for cases where it doesn't yet exist
		// (such as loading iframes in IE - #4833)
		var documentElement = elem && (elem.ownerDocument || elem).documentElement;
		return documentElement ? documentElement.nodeName !== "HTML" : false;
	};

	/**
	 * Sets document-related variables once based on the current document
	 * @param {Element|Object} [doc] An element or document object to use to set the document
	 * @returns {Object} Returns the current document
	 */
	setDocument = Sizzle.setDocument = function( node ) {
		var doc = node ? node.ownerDocument || node : preferredDoc;

		// If no document and documentElement is available, return
		if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
			return document;
		}

		// Set our document
		document = doc;
		docElem = doc.documentElement;

		// Support tests
		documentIsHTML = !isXML( doc );

		// Check if getElementsByTagName("*") returns only elements
		support.getElementsByTagName = assert(function( div ) {
			div.appendChild( doc.createComment("") );
			return !div.getElementsByTagName("*").length;
		});

		// Support: IE<8
		// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
		support.attributes = assert(function( div ) {
			div.className = "i";
			return !div.getAttribute("className");
		});

		// Check if getElementsByClassName can be trusted
		support.getElementsByClassName = assert(function( div ) {
			div.innerHTML = "<div class='a'></div><div class='a i'></div>";

			// Support: Safari<4
			// Catch class over-caching
			div.firstChild.className = "i";
			// Support: Opera<10
			// Catch gEBCN failure to find non-leading classes
			return div.getElementsByClassName("i").length === 2;
		});

		// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
		// Detached nodes confoundingly follow *each other*
		support.sortDetached = assert(function( div1 ) {
			// Should return 1, but returns 4 (following)
			return div1.compareDocumentPosition( document.createElement("div") ) & 1;
		});

		// Support: IE<10
		// Check if getElementById returns elements by name
		// Support: Windows 8 Native Apps
		// Assigning innerHTML with "name" attributes throws uncatchable exceptions
		// (http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx)
		// and the broken getElementById methods don't pick up programatically-set names,
		// so use a roundabout getElementsByName test
		support.getById = assert(function( div ) {
			docElem.appendChild( div ).id = expando;
			return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
		});

		// ID find and filter
		if ( support.getById ) {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
					var m = context.getElementById( id );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					return m && m.parentNode ? [m] : [];
				}
			};
			Expr.filter["ID"] = function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					return elem.getAttribute("id") === attrId;
				};
			};
		} else {
			Expr.find["ID"] = function( id, context ) {
				if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
					var m = context.getElementById( id );

					return m ?
						m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ?
							[m] :
							undefined :
						[];
				}
			};
			Expr.filter["ID"] =  function( id ) {
				var attrId = id.replace( runescape, funescape );
				return function( elem ) {
					var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
					return node && node.value === attrId;
				};
			};
		}

		// Tag
		Expr.find["TAG"] = support.getElementsByTagName ?
			function( tag, context ) {
				if ( typeof context.getElementsByTagName !== strundefined ) {
					return context.getElementsByTagName( tag );
				}
			} :
			function( tag, context ) {
				var elem,
					tmp = [],
					i = 0,
					results = context.getElementsByTagName( tag );

				// Filter out possible comments
				if ( tag === "*" ) {
					while ( (elem = results[i++]) ) {
						if ( elem.nodeType === 1 ) {
							tmp.push( elem );
						}
					}

					return tmp;
				}
				return results;
			};

		// Class
		Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
			if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
				return context.getElementsByClassName( className );
			}
		};

		// QSA and matchesSelector support

		// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
		rbuggyMatches = [];

		// qSa(:focus) reports false when true (Chrome 21)
		// We allow this because of a bug in IE8/9 that throws an error
		// whenever `document.activeElement` is accessed on an iframe
		// So, we allow :focus to pass through QSA all the time to avoid the IE error
		// See http://bugs.jquery.com/ticket/13378
		rbuggyQSA = [];

		if ( (support.qsa = isNative(doc.querySelectorAll)) ) {
			// Build QSA regex
			// Regex strategy adopted from Diego Perini
			assert(function( div ) {
				// Select is set to empty string on purpose
				// This is to test IE's treatment of not explicitly
				// setting a boolean content attribute,
				// since its presence should be enough
				// http://bugs.jquery.com/ticket/12359
				div.innerHTML = "<select><option selected=''></option></select>";

				// Support: IE8
				// Boolean attributes and "value" are not treated correctly
				if ( !div.querySelectorAll("[selected]").length ) {
					rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
				}

				// Webkit/Opera - :checked should return selected option elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":checked").length ) {
					rbuggyQSA.push(":checked");
				}
			});

			assert(function( div ) {

				// Support: Opera 10-12/IE8
				// ^= $= *= and empty values
				// Should not select anything
				// Support: Windows 8 Native Apps
				// The type attribute is restricted during .innerHTML assignment
				var input = document.createElement("input");
				input.setAttribute( "type", "hidden" );
				div.appendChild( input ).setAttribute( "t", "" );

				if ( div.querySelectorAll("[t^='']").length ) {
					rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
				}

				// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
				// IE8 throws error here and will not see later tests
				if ( !div.querySelectorAll(":enabled").length ) {
					rbuggyQSA.push( ":enabled", ":disabled" );
				}

				// Opera 10-11 does not throw on post-comma invalid pseudos
				div.querySelectorAll("*,:x");
				rbuggyQSA.push(",.*:");
			});
		}

		if ( (support.matchesSelector = isNative( (matches = docElem.webkitMatchesSelector ||
			docElem.mozMatchesSelector ||
			docElem.oMatchesSelector ||
			docElem.msMatchesSelector) )) ) {

			assert(function( div ) {
				// Check to see if it's possible to do matchesSelector
				// on a disconnected node (IE 9)
				support.disconnectedMatch = matches.call( div, "div" );

				// This should fail with an exception
				// Gecko does not error, returns false instead
				matches.call( div, "[s!='']:x" );
				rbuggyMatches.push( "!=", pseudos );
			});
		}

		rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
		rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

		// Element contains another
		// Purposefully does not implement inclusive descendent
		// As in, an element does not contain itself
		contains = isNative(docElem.contains) || docElem.compareDocumentPosition ?
			function( a, b ) {
				var adown = a.nodeType === 9 ? a.documentElement : a,
					bup = b && b.parentNode;
				return a === bup || !!( bup && bup.nodeType === 1 && (
					adown.contains ?
						adown.contains( bup ) :
						a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
				));
			} :
			function( a, b ) {
				if ( b ) {
					while ( (b = b.parentNode) ) {
						if ( b === a ) {
							return true;
						}
					}
				}
				return false;
			};

		// Document order sorting
		sortOrder = docElem.compareDocumentPosition ?
		function( a, b ) {

			// Flag for duplicate removal
			if ( a === b ) {
				hasDuplicate = true;
				return 0;
			}

			var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );

			if ( compare ) {
				// Disconnected nodes
				if ( compare & 1 ||
					(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

					// Choose the first element that is related to our preferred document
					if ( a === doc || contains(preferredDoc, a) ) {
						return -1;
					}
					if ( b === doc || contains(preferredDoc, b) ) {
						return 1;
					}

					// Maintain original order
					return sortInput ?
						( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
						0;
				}

				return compare & 4 ? -1 : 1;
			}

			// Not directly comparable, sort on existence of method
			return a.compareDocumentPosition ? -1 : 1;
		} :
		function( a, b ) {
			var cur,
				i = 0,
				aup = a.parentNode,
				bup = b.parentNode,
				ap = [ a ],
				bp = [ b ];

			// Exit early if the nodes are identical
			if ( a === b ) {
				hasDuplicate = true;
				return 0;

			// Parentless nodes are either documents or disconnected
			} else if ( !aup || !bup ) {
				return a === doc ? -1 :
					b === doc ? 1 :
					aup ? -1 :
					bup ? 1 :
					sortInput ?
					( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
					0;

			// If the nodes are siblings, we can do a quick check
			} else if ( aup === bup ) {
				return siblingCheck( a, b );
			}

			// Otherwise we need full lists of their ancestors for comparison
			cur = a;
			while ( (cur = cur.parentNode) ) {
				ap.unshift( cur );
			}
			cur = b;
			while ( (cur = cur.parentNode) ) {
				bp.unshift( cur );
			}

			// Walk down the tree looking for a discrepancy
			while ( ap[i] === bp[i] ) {
				i++;
			}

			return i ?
				// Do a sibling check if the nodes have a common ancestor
				siblingCheck( ap[i], bp[i] ) :

				// Otherwise nodes in our document sort first
				ap[i] === preferredDoc ? -1 :
				bp[i] === preferredDoc ? 1 :
				0;
		};

		return document;
	};

	Sizzle.matches = function( expr, elements ) {
		return Sizzle( expr, null, null, elements );
	};

	Sizzle.matchesSelector = function( elem, expr ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		// Make sure that attribute selectors are quoted
		expr = expr.replace( rattributeQuotes, "='$1']" );

		// rbuggyQSA always contains :focus, so no need for an existence check
		if ( support.matchesSelector && documentIsHTML &&
			(!rbuggyMatches || !rbuggyMatches.test(expr)) &&
			(!rbuggyQSA     || !rbuggyQSA.test(expr)) ) {

			try {
				var ret = matches.call( elem, expr );

				// IE 9's matchesSelector returns false on disconnected nodes
				if ( ret || support.disconnectedMatch ||
						// As well, disconnected nodes are said to be in a document
						// fragment in IE 9
						elem.document && elem.document.nodeType !== 11 ) {
					return ret;
				}
			} catch(e) {}
		}

		return Sizzle( expr, document, null, [elem] ).length > 0;
	};

	Sizzle.contains = function( context, elem ) {
		// Set document vars if needed
		if ( ( context.ownerDocument || context ) !== document ) {
			setDocument( context );
		}
		return contains( context, elem );
	};

	Sizzle.attr = function( elem, name ) {
		// Set document vars if needed
		if ( ( elem.ownerDocument || elem ) !== document ) {
			setDocument( elem );
		}

		var fn = Expr.attrHandle[ name.toLowerCase() ],
			val = fn && fn( elem, name, !documentIsHTML );

		return val === undefined ?
			support.attributes || !documentIsHTML ?
				elem.getAttribute( name ) :
				(val = elem.getAttributeNode(name)) && val.specified ?
					val.value :
					null :
			val;
	};

	Sizzle.error = function( msg ) {
		throw new Error( "Syntax error, unrecognized expression: " + msg );
	};

	// Document sorting and removing duplicates
	Sizzle.uniqueSort = function( results ) {
		var elem,
			duplicates = [],
			j = 0,
			i = 0;

		// Unless we *know* we can detect duplicates, assume their presence
		hasDuplicate = !support.detectDuplicates;
		sortInput = !support.sortStable && results.slice( 0 );
		results.sort( sortOrder );

		if ( hasDuplicate ) {
			while ( (elem = results[i++]) ) {
				if ( elem === results[ i ] ) {
					j = duplicates.push( i );
				}
			}
			while ( j-- ) {
				results.splice( duplicates[ j ], 1 );
			}
		}

		return results;
	};

	/**
	 * Checks document order of two siblings
	 * @param {Element} a
	 * @param {Element} b
	 * @returns Returns -1 if a precedes b, 1 if a follows b
	 */
	function siblingCheck( a, b ) {
		var cur = b && a,
			diff = cur && ( ~b.sourceIndex || MAX_NEGATIVE ) - ( ~a.sourceIndex || MAX_NEGATIVE );

		// Use IE sourceIndex if available on both nodes
		if ( diff ) {
			return diff;
		}

		// Check if b follows a
		if ( cur ) {
			while ( (cur = cur.nextSibling) ) {
				if ( cur === b ) {
					return -1;
				}
			}
		}

		return a ? 1 : -1;
	}

	// Fetches boolean attributes by node
	function boolHandler( elem, name, isXML ) {
		var val;
		return isXML ?
			undefined :
			(val = elem.getAttributeNode( name )) && val.specified ?
				val.value :
				elem[ name ] === true ? name.toLowerCase() : null;
	}

	// Fetches attributes without interpolation
	// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
	function interpolationHandler( elem, name, isXML ) {
		var val;
		return isXML ?
			undefined :
			(val = elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 ));
	}

	// Returns a function to use in pseudos for input types
	function createInputPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === type;
		};
	}

	// Returns a function to use in pseudos for buttons
	function createButtonPseudo( type ) {
		return function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return (name === "input" || name === "button") && elem.type === type;
		};
	}

	// Returns a function to use in pseudos for positionals
	function createPositionalPseudo( fn ) {
		return markFunction(function( argument ) {
			argument = +argument;
			return markFunction(function( seed, matches ) {
				var j,
					matchIndexes = fn( [], seed.length, argument ),
					i = matchIndexes.length;

				// Match elements found at the specified indexes
				while ( i-- ) {
					if ( seed[ (j = matchIndexes[i]) ] ) {
						seed[j] = !(matches[j] = seed[j]);
					}
				}
			});
		});
	}

	/**
	 * Utility function for retrieving the text value of an array of DOM nodes
	 * @param {Array|Element} elem
	 */
	getText = Sizzle.getText = function( elem ) {
		var node,
			ret = "",
			i = 0,
			nodeType = elem.nodeType;

		if ( !nodeType ) {
			// If no nodeType, this is expected to be an array
			for ( ; (node = elem[i]); i++ ) {
				// Do not traverse comment nodes
				ret += getText( node );
			}
		} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
			// Use textContent for elements
			// innerText usage removed for consistency of new lines (see #11153)
			if ( typeof elem.textContent === "string" ) {
				return elem.textContent;
			} else {
				// Traverse its children
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					ret += getText( elem );
				}
			}
		} else if ( nodeType === 3 || nodeType === 4 ) {
			return elem.nodeValue;
		}
		// Do not include comment or processing instruction nodes

		return ret;
	};

	Expr = Sizzle.selectors = {

		// Can be adjusted by the user
		cacheLength: 50,

		createPseudo: markFunction,

		match: matchExpr,

		attrHandle: {},

		find: {},

		relative: {
			">": { dir: "parentNode", first: true },
			" ": { dir: "parentNode" },
			"+": { dir: "previousSibling", first: true },
			"~": { dir: "previousSibling" }
		},

		preFilter: {
			"ATTR": function( match ) {
				match[1] = match[1].replace( runescape, funescape );

				// Move the given value to match[3] whether quoted or unquoted
				match[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );

				if ( match[2] === "~=" ) {
					match[3] = " " + match[3] + " ";
				}

				return match.slice( 0, 4 );
			},

			"CHILD": function( match ) {
				/* matches from matchExpr["CHILD"]
					1 type (only|nth|...)
					2 what (child|of-type)
					3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
					4 xn-component of xn+y argument ([+-]?\d*n|)
					5 sign of xn-component
					6 x of xn-component
					7 sign of y-component
					8 y of y-component
				*/
				match[1] = match[1].toLowerCase();

				if ( match[1].slice( 0, 3 ) === "nth" ) {
					// nth-* requires argument
					if ( !match[3] ) {
						Sizzle.error( match[0] );
					}

					// numeric x and y parameters for Expr.filter.CHILD
					// remember that false/true cast respectively to 0/1
					match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
					match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

				// other types prohibit arguments
				} else if ( match[3] ) {
					Sizzle.error( match[0] );
				}

				return match;
			},

			"PSEUDO": function( match ) {
				var excess,
					unquoted = !match[5] && match[2];

				if ( matchExpr["CHILD"].test( match[0] ) ) {
					return null;
				}

				// Accept quoted arguments as-is
				if ( match[4] ) {
					match[2] = match[4];

				// Strip excess characters from unquoted arguments
				} else if ( unquoted && rpseudo.test( unquoted ) &&
					// Get excess from tokenize (recursively)
					(excess = tokenize( unquoted, true )) &&
					// advance to the next closing parenthesis
					(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

					// excess is a negative index
					match[0] = match[0].slice( 0, excess );
					match[2] = unquoted.slice( 0, excess );
				}

				// Return only captures needed by the pseudo filter method (type and argument)
				return match.slice( 0, 3 );
			}
		},

		filter: {

			"TAG": function( nodeNameSelector ) {
				var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
				return nodeNameSelector === "*" ?
					function() { return true; } :
					function( elem ) {
						return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
					};
			},

			"CLASS": function( className ) {
				var pattern = classCache[ className + " " ];

				return pattern ||
					(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
					classCache( className, function( elem ) {
						return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
					});
			},

			"ATTR": function( name, operator, check ) {
				return function( elem ) {
					var result = Sizzle.attr( elem, name );

					if ( result == null ) {
						return operator === "!=";
					}
					if ( !operator ) {
						return true;
					}

					result += "";

					return operator === "=" ? result === check :
						operator === "!=" ? result !== check :
						operator === "^=" ? check && result.indexOf( check ) === 0 :
						operator === "*=" ? check && result.indexOf( check ) > -1 :
						operator === "$=" ? check && result.slice( -check.length ) === check :
						operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
						operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
						false;
				};
			},

			"CHILD": function( type, what, argument, first, last ) {
				var simple = type.slice( 0, 3 ) !== "nth",
					forward = type.slice( -4 ) !== "last",
					ofType = what === "of-type";

				return first === 1 && last === 0 ?

					// Shortcut for :nth-*(n)
					function( elem ) {
						return !!elem.parentNode;
					} :

					function( elem, context, xml ) {
						var cache, outerCache, node, diff, nodeIndex, start,
							dir = simple !== forward ? "nextSibling" : "previousSibling",
							parent = elem.parentNode,
							name = ofType && elem.nodeName.toLowerCase(),
							useCache = !xml && !ofType;

						if ( parent ) {

							// :(first|last|only)-(child|of-type)
							if ( simple ) {
								while ( dir ) {
									node = elem;
									while ( (node = node[ dir ]) ) {
										if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
											return false;
										}
									}
									// Reverse direction for :only-* (if we haven't yet done so)
									start = dir = type === "only" && !start && "nextSibling";
								}
								return true;
							}

							start = [ forward ? parent.firstChild : parent.lastChild ];

							// non-xml :nth-child(...) stores cache data on `parent`
							if ( forward && useCache ) {
								// Seek `elem` from a previously-cached index
								outerCache = parent[ expando ] || (parent[ expando ] = {});
								cache = outerCache[ type ] || [];
								nodeIndex = cache[0] === dirruns && cache[1];
								diff = cache[0] === dirruns && cache[2];
								node = nodeIndex && parent.childNodes[ nodeIndex ];

								while ( (node = ++nodeIndex && node && node[ dir ] ||

									// Fallback to seeking `elem` from the start
									(diff = nodeIndex = 0) || start.pop()) ) {

									// When found, cache indexes on `parent` and break
									if ( node.nodeType === 1 && ++diff && node === elem ) {
										outerCache[ type ] = [ dirruns, nodeIndex, diff ];
										break;
									}
								}

							// Use previously-cached element index if available
							} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
								diff = cache[1];

							// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
							} else {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
										// Cache the index of each encountered element
										if ( useCache ) {
											(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}

							// Incorporate the offset, then check against cycle size
							diff -= last;
							return diff === first || ( diff % first === 0 && diff / first >= 0 );
						}
					};
			},

			"PSEUDO": function( pseudo, argument ) {
				// pseudo-class names are case-insensitive
				// http://www.w3.org/TR/selectors/#pseudo-classes
				// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
				// Remember that setFilters inherits from pseudos
				var args,
					fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
						Sizzle.error( "unsupported pseudo: " + pseudo );

				// The user may use createPseudo to indicate that
				// arguments are needed to create the filter function
				// just as Sizzle does
				if ( fn[ expando ] ) {
					return fn( argument );
				}

				// But maintain support for old signatures
				if ( fn.length > 1 ) {
					args = [ pseudo, pseudo, "", argument ];
					return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
						markFunction(function( seed, matches ) {
							var idx,
								matched = fn( seed, argument ),
								i = matched.length;
							while ( i-- ) {
								idx = indexOf.call( seed, matched[i] );
								seed[ idx ] = !( matches[ idx ] = matched[i] );
							}
						}) :
						function( elem ) {
							return fn( elem, 0, args );
						};
				}

				return fn;
			}
		},

		pseudos: {
			// Potentially complex pseudos
			"not": markFunction(function( selector ) {
				// Trim the selector passed to compile
				// to avoid treating leading and trailing
				// spaces as combinators
				var input = [],
					results = [],
					matcher = compile( selector.replace( rtrim, "$1" ) );

				return matcher[ expando ] ?
					markFunction(function( seed, matches, context, xml ) {
						var elem,
							unmatched = matcher( seed, null, xml, [] ),
							i = seed.length;

						// Match elements unmatched by `matcher`
						while ( i-- ) {
							if ( (elem = unmatched[i]) ) {
								seed[i] = !(matches[i] = elem);
							}
						}
					}) :
					function( elem, context, xml ) {
						input[0] = elem;
						matcher( input, null, xml, results );
						return !results.pop();
					};
			}),

			"has": markFunction(function( selector ) {
				return function( elem ) {
					return Sizzle( selector, elem ).length > 0;
				};
			}),

			"contains": markFunction(function( text ) {
				return function( elem ) {
					return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
				};
			}),

			// "Whether an element is represented by a :lang() selector
			// is based solely on the element's language value
			// being equal to the identifier C,
			// or beginning with the identifier C immediately followed by "-".
			// The matching of C against the element's language value is performed case-insensitively.
			// The identifier C does not have to be a valid language name."
			// http://www.w3.org/TR/selectors/#lang-pseudo
			"lang": markFunction( function( lang ) {
				// lang value must be a valid identifier
				if ( !ridentifier.test(lang || "") ) {
					Sizzle.error( "unsupported lang: " + lang );
				}
				lang = lang.replace( runescape, funescape ).toLowerCase();
				return function( elem ) {
					var elemLang;
					do {
						if ( (elemLang = documentIsHTML ?
							elem.lang :
							elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

							elemLang = elemLang.toLowerCase();
							return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
						}
					} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
					return false;
				};
			}),

			// Miscellaneous
			"target": function( elem ) {
				var hash = window.location && window.location.hash;
				return hash && hash.slice( 1 ) === elem.id;
			},

			"root": function( elem ) {
				return elem === docElem;
			},

			"focus": function( elem ) {
				return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
			},

			// Boolean properties
			"enabled": function( elem ) {
				return elem.disabled === false;
			},

			"disabled": function( elem ) {
				return elem.disabled === true;
			},

			"checked": function( elem ) {
				// In CSS3, :checked should return both checked and selected elements
				// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
				var nodeName = elem.nodeName.toLowerCase();
				return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
			},

			"selected": function( elem ) {
				// Accessing this property makes selected-by-default
				// options in Safari work properly
				if ( elem.parentNode ) {
					elem.parentNode.selectedIndex;
				}

				return elem.selected === true;
			},

			// Contents
			"empty": function( elem ) {
				// http://www.w3.org/TR/selectors/#empty-pseudo
				// :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
				//   not comment, processing instructions, or others
				// Thanks to Diego Perini for the nodeName shortcut
				//   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
				for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
					if ( elem.nodeName > "@" || elem.nodeType === 3 || elem.nodeType === 4 ) {
						return false;
					}
				}
				return true;
			},

			"parent": function( elem ) {
				return !Expr.pseudos["empty"]( elem );
			},

			// Element/input types
			"header": function( elem ) {
				return rheader.test( elem.nodeName );
			},

			"input": function( elem ) {
				return rinputs.test( elem.nodeName );
			},

			"button": function( elem ) {
				var name = elem.nodeName.toLowerCase();
				return name === "input" && elem.type === "button" || name === "button";
			},

			"text": function( elem ) {
				var attr;
				// IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
				// use getAttribute instead to test this case
				return elem.nodeName.toLowerCase() === "input" &&
					elem.type === "text" &&
					( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === elem.type );
			},

			// Position-in-collection
			"first": createPositionalPseudo(function() {
				return [ 0 ];
			}),

			"last": createPositionalPseudo(function( matchIndexes, length ) {
				return [ length - 1 ];
			}),

			"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
				return [ argument < 0 ? argument + length : argument ];
			}),

			"even": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 0;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"odd": createPositionalPseudo(function( matchIndexes, length ) {
				var i = 1;
				for ( ; i < length; i += 2 ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; --i >= 0; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			}),

			"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
				var i = argument < 0 ? argument + length : argument;
				for ( ; ++i < length; ) {
					matchIndexes.push( i );
				}
				return matchIndexes;
			})
		}
	};

	// Add button/input type pseudos
	for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
		Expr.pseudos[ i ] = createInputPseudo( i );
	}
	for ( i in { submit: true, reset: true } ) {
		Expr.pseudos[ i ] = createButtonPseudo( i );
	}

	function tokenize( selector, parseOnly ) {
		var matched, match, tokens, type,
			soFar, groups, preFilters,
			cached = tokenCache[ selector + " " ];

		if ( cached ) {
			return parseOnly ? 0 : cached.slice( 0 );
		}

		soFar = selector;
		groups = [];
		preFilters = Expr.preFilter;

		while ( soFar ) {

			// Comma and first run
			if ( !matched || (match = rcomma.exec( soFar )) ) {
				if ( match ) {
					// Don't consume trailing commas as valid
					soFar = soFar.slice( match[0].length ) || soFar;
				}
				groups.push( tokens = [] );
			}

			matched = false;

			// Combinators
			if ( (match = rcombinators.exec( soFar )) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					// Cast descendant combinators to space
					type: match[0].replace( rtrim, " " )
				} );
				soFar = soFar.slice( matched.length );
			}

			// Filters
			for ( type in Expr.filter ) {
				if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
					(match = preFilters[ type ]( match ))) ) {
					matched = match.shift();
					tokens.push( {
						value: matched,
						type: type,
						matches: match
					} );
					soFar = soFar.slice( matched.length );
				}
			}

			if ( !matched ) {
				break;
			}
		}

		// Return the length of the invalid excess
		// if we're just parsing
		// Otherwise, throw an error or return tokens
		return parseOnly ?
			soFar.length :
			soFar ?
				Sizzle.error( selector ) :
				// Cache the tokens
				tokenCache( selector, groups ).slice( 0 );
	}

	function toSelector( tokens ) {
		var i = 0,
			len = tokens.length,
			selector = "";
		for ( ; i < len; i++ ) {
			selector += tokens[i].value;
		}
		return selector;
	}

	function addCombinator( matcher, combinator, base ) {
		var dir = combinator.dir,
			checkNonElements = base && dir === "parentNode",
			doneName = done++;

		return combinator.first ?
			// Check against closest ancestor/preceding element
			function( elem, context, xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						return matcher( elem, context, xml );
					}
				}
			} :

			// Check against all ancestor/preceding elements
			function( elem, context, xml ) {
				var data, cache, outerCache,
					dirkey = dirruns + " " + doneName;

				// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
				if ( xml ) {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							if ( matcher( elem, context, xml ) ) {
								return true;
							}
						}
					}
				} else {
					while ( (elem = elem[ dir ]) ) {
						if ( elem.nodeType === 1 || checkNonElements ) {
							outerCache = elem[ expando ] || (elem[ expando ] = {});
							if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {
								if ( (data = cache[1]) === true || data === cachedruns ) {
									return data === true;
								}
							} else {
								cache = outerCache[ dir ] = [ dirkey ];
								cache[1] = matcher( elem, context, xml ) || cachedruns;
								if ( cache[1] === true ) {
									return true;
								}
							}
						}
					}
				}
			};
	}

	function elementMatcher( matchers ) {
		return matchers.length > 1 ?
			function( elem, context, xml ) {
				var i = matchers.length;
				while ( i-- ) {
					if ( !matchers[i]( elem, context, xml ) ) {
						return false;
					}
				}
				return true;
			} :
			matchers[0];
	}

	function condense( unmatched, map, filter, context, xml ) {
		var elem,
			newUnmatched = [],
			i = 0,
			len = unmatched.length,
			mapped = map != null;

		for ( ; i < len; i++ ) {
			if ( (elem = unmatched[i]) ) {
				if ( !filter || filter( elem, context, xml ) ) {
					newUnmatched.push( elem );
					if ( mapped ) {
						map.push( i );
					}
				}
			}
		}

		return newUnmatched;
	}

	function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
		if ( postFilter && !postFilter[ expando ] ) {
			postFilter = setMatcher( postFilter );
		}
		if ( postFinder && !postFinder[ expando ] ) {
			postFinder = setMatcher( postFinder, postSelector );
		}
		return markFunction(function( seed, results, context, xml ) {
			var temp, i, elem,
				preMap = [],
				postMap = [],
				preexisting = results.length,

				// Get initial elements from seed or context
				elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

				// Prefilter to get matcher input, preserving a map for seed-results synchronization
				matcherIn = preFilter && ( seed || !selector ) ?
					condense( elems, preMap, preFilter, context, xml ) :
					elems,

				matcherOut = matcher ?
					// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
					postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

						// ...intermediate processing is necessary
						[] :

						// ...otherwise use results directly
						results :
					matcherIn;

			// Find primary matches
			if ( matcher ) {
				matcher( matcherIn, matcherOut, context, xml );
			}

			// Apply postFilter
			if ( postFilter ) {
				temp = condense( matcherOut, postMap );
				postFilter( temp, [], context, xml );

				// Un-match failing elements by moving them back to matcherIn
				i = temp.length;
				while ( i-- ) {
					if ( (elem = temp[i]) ) {
						matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
					}
				}
			}

			if ( seed ) {
				if ( postFinder || preFilter ) {
					if ( postFinder ) {
						// Get the final matcherOut by condensing this intermediate into postFinder contexts
						temp = [];
						i = matcherOut.length;
						while ( i-- ) {
							if ( (elem = matcherOut[i]) ) {
								// Restore matcherIn since elem is not yet a final match
								temp.push( (matcherIn[i] = elem) );
							}
						}
						postFinder( null, (matcherOut = []), temp, xml );
					}

					// Move matched elements from seed to results to keep them synchronized
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) &&
							(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

							seed[temp] = !(results[temp] = elem);
						}
					}
				}

			// Add elements to results, through postFinder if defined
			} else {
				matcherOut = condense(
					matcherOut === results ?
						matcherOut.splice( preexisting, matcherOut.length ) :
						matcherOut
				);
				if ( postFinder ) {
					postFinder( null, results, matcherOut, xml );
				} else {
					push.apply( results, matcherOut );
				}
			}
		});
	}

	function matcherFromTokens( tokens ) {
		var checkContext, matcher, j,
			len = tokens.length,
			leadingRelative = Expr.relative[ tokens[0].type ],
			implicitRelative = leadingRelative || Expr.relative[" "],
			i = leadingRelative ? 1 : 0,

			// The foundational matcher ensures that elements are reachable from top-level context(s)
			matchContext = addCombinator( function( elem ) {
				return elem === checkContext;
			}, implicitRelative, true ),
			matchAnyContext = addCombinator( function( elem ) {
				return indexOf.call( checkContext, elem ) > -1;
			}, implicitRelative, true ),
			matchers = [ function( elem, context, xml ) {
				return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
					(checkContext = context).nodeType ?
						matchContext( elem, context, xml ) :
						matchAnyContext( elem, context, xml ) );
			} ];

		for ( ; i < len; i++ ) {
			if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
				matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
			} else {
				matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

				// Return special upon seeing a positional matcher
				if ( matcher[ expando ] ) {
					// Find the next relative operator (if any) for proper handling
					j = ++i;
					for ( ; j < len; j++ ) {
						if ( Expr.relative[ tokens[j].type ] ) {
							break;
						}
					}
					return setMatcher(
						i > 1 && elementMatcher( matchers ),
						i > 1 && toSelector( tokens.slice( 0, i - 1 ) ).replace( rtrim, "$1" ),
						matcher,
						i < j && matcherFromTokens( tokens.slice( i, j ) ),
						j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
						j < len && toSelector( tokens )
					);
				}
				matchers.push( matcher );
			}
		}

		return elementMatcher( matchers );
	}

	function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
		// A counter to specify which element is currently being matched
		var matcherCachedRuns = 0,
			bySet = setMatchers.length > 0,
			byElement = elementMatchers.length > 0,
			superMatcher = function( seed, context, xml, results, expandContext ) {
				var elem, j, matcher,
					setMatched = [],
					matchedCount = 0,
					i = "0",
					unmatched = seed && [],
					outermost = expandContext != null,
					contextBackup = outermostContext,
					// We must always have either seed elements or context
					elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
					// Use integer dirruns iff this is the outermost matcher
					dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);

				if ( outermost ) {
					outermostContext = context !== document && context;
					cachedruns = matcherCachedRuns;
				}

				// Add elements passing elementMatchers directly to results
				// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
				for ( ; (elem = elems[i]) != null; i++ ) {
					if ( byElement && elem ) {
						j = 0;
						while ( (matcher = elementMatchers[j++]) ) {
							if ( matcher( elem, context, xml ) ) {
								results.push( elem );
								break;
							}
						}
						if ( outermost ) {
							dirruns = dirrunsUnique;
							cachedruns = ++matcherCachedRuns;
						}
					}

					// Track unmatched elements for set filters
					if ( bySet ) {
						// They will have gone through all possible matchers
						if ( (elem = !matcher && elem) ) {
							matchedCount--;
						}

						// Lengthen the array for every element, matched or not
						if ( seed ) {
							unmatched.push( elem );
						}
					}
				}

				// Apply set filters to unmatched elements
				matchedCount += i;
				if ( bySet && i !== matchedCount ) {
					j = 0;
					while ( (matcher = setMatchers[j++]) ) {
						matcher( unmatched, setMatched, context, xml );
					}

					if ( seed ) {
						// Reintegrate element matches to eliminate the need for sorting
						if ( matchedCount > 0 ) {
							while ( i-- ) {
								if ( !(unmatched[i] || setMatched[i]) ) {
									setMatched[i] = pop.call( results );
								}
							}
						}

						// Discard index placeholder values to get only actual matches
						setMatched = condense( setMatched );
					}

					// Add matches to results
					push.apply( results, setMatched );

					// Seedless set matches succeeding multiple successful matchers stipulate sorting
					if ( outermost && !seed && setMatched.length > 0 &&
						( matchedCount + setMatchers.length ) > 1 ) {

						Sizzle.uniqueSort( results );
					}
				}

				// Override manipulation of globals by nested matchers
				if ( outermost ) {
					dirruns = dirrunsUnique;
					outermostContext = contextBackup;
				}

				return unmatched;
			};

		return bySet ?
			markFunction( superMatcher ) :
			superMatcher;
	}

	compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
		var i,
			setMatchers = [],
			elementMatchers = [],
			cached = compilerCache[ selector + " " ];

		if ( !cached ) {
			// Generate a function of recursive functions that can be used to check each element
			if ( !group ) {
				group = tokenize( selector );
			}
			i = group.length;
			while ( i-- ) {
				cached = matcherFromTokens( group[i] );
				if ( cached[ expando ] ) {
					setMatchers.push( cached );
				} else {
					elementMatchers.push( cached );
				}
			}

			// Cache the compiled function
			cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
		}
		return cached;
	};

	function multipleContexts( selector, contexts, results ) {
		var i = 0,
			len = contexts.length;
		for ( ; i < len; i++ ) {
			Sizzle( selector, contexts[i], results );
		}
		return results;
	}

	function select( selector, context, results, seed ) {
		var i, tokens, token, type, find,
			match = tokenize( selector );

		if ( !seed ) {
			// Try to minimize operations if there is only one group
			if ( match.length === 1 ) {

				// Take a shortcut and set the context if the root selector is an ID
				tokens = match[0] = match[0].slice( 0 );
				if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
						context.nodeType === 9 && documentIsHTML &&
						Expr.relative[ tokens[1].type ] ) {

					context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
					if ( !context ) {
						return results;
					}

					selector = selector.slice( tokens.shift().value.length );
				}

				// Fetch a seed set for right-to-left matching
				i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
				while ( i-- ) {
					token = tokens[i];

					// Abort if we hit a combinator
					if ( Expr.relative[ (type = token.type) ] ) {
						break;
					}
					if ( (find = Expr.find[ type ]) ) {
						// Search, expanding context for leading sibling combinators
						if ( (seed = find(
							token.matches[0].replace( runescape, funescape ),
							rsibling.test( tokens[0].type ) && context.parentNode || context
						)) ) {

							// If seed is empty or no tokens remain, we can return early
							tokens.splice( i, 1 );
							selector = seed.length && toSelector( tokens );
							if ( !selector ) {
								push.apply( results, seed );
								return results;
							}

							break;
						}
					}
				}
			}
		}

		// Compile and execute a filtering function
		// Provide `match` to avoid retokenization if we modified the selector above
		compile( selector, match )(
			seed,
			context,
			!documentIsHTML,
			results,
			rsibling.test( selector )
		);
		return results;
	}

	// Deprecated
	Expr.pseudos["nth"] = Expr.pseudos["eq"];

	// Easy API for creating new setFilters
	function setFilters() {}
	setFilters.prototype = Expr.filters = Expr.pseudos;
	Expr.setFilters = new setFilters();

	// One-time assignments

	// Sort stability
	support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

	// Initialize against the default document
	setDocument();

	// Support: Chrome<<14
	// Always assume duplicates if they aren't passed to the comparison function
	[0, 0].sort( sortOrder );
	support.detectDuplicates = hasDuplicate;

	// Support: IE<8
	// Prevent attribute/property "interpolation"
	assert(function( div ) {
		div.innerHTML = "<a href='#'></a>";
		if ( div.firstChild.getAttribute("href") !== "#" ) {
			var attrs = "type|href|height|width".split("|"),
				i = attrs.length;
			while ( i-- ) {
				Expr.attrHandle[ attrs[i] ] = interpolationHandler;
			}
		}
	});

	// Support: IE<9
	// Use getAttributeNode to fetch booleans when getAttribute lies
	assert(function( div ) {
		if ( div.getAttribute("disabled") != null ) {
			var attrs = booleans.split("|"),
				i = attrs.length;
			while ( i-- ) {
				Expr.attrHandle[ attrs[i] ] = boolHandler;
			}
		}
	});

	jQuery.find = Sizzle;
	jQuery.expr = Sizzle.selectors;
	jQuery.expr[":"] = jQuery.expr.pseudos;
	jQuery.unique = Sizzle.uniqueSort;
	jQuery.text = Sizzle.getText;
	jQuery.isXMLDoc = Sizzle.isXML;
	jQuery.contains = Sizzle.contains;


	})( window );
	// String to Object options format cache
	var optionsCache = {};

	// Convert String-formatted options into Object-formatted ones and store in cache
	function createOptions( options ) {
		var object = optionsCache[ options ] = {};
		jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
			object[ flag ] = true;
		});
		return object;
	}

	/*
	 * Create a callback list using the following parameters:
	 *
	 *	options: an optional list of space-separated options that will change how
	 *			the callback list behaves or a more traditional option object
	 *
	 * By default a callback list will act like an event callback list and can be
	 * "fired" multiple times.
	 *
	 * Possible options:
	 *
	 *	once:			will ensure the callback list can only be fired once (like a Deferred)
	 *
	 *	memory:			will keep track of previous values and will call any callback added
	 *					after the list has been fired right away with the latest "memorized"
	 *					values (like a Deferred)
	 *
	 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
	 *
	 *	stopOnFalse:	interrupt callings when a callback returns false
	 *
	 */
	jQuery.Callbacks = function( options ) {

		// Convert options from String-formatted to Object-formatted if needed
		// (we check in cache first)
		options = typeof options === "string" ?
			( optionsCache[ options ] || createOptions( options ) ) :
			jQuery.extend( {}, options );

		var // Last fire value (for non-forgettable lists)
			memory,
			// Flag to know if list was already fired
			fired,
			// Flag to know if list is currently firing
			firing,
			// First callback to fire (used internally by add and fireWith)
			firingStart,
			// End of the loop when firing
			firingLength,
			// Index of currently firing callback (modified by remove if needed)
			firingIndex,
			// Actual callback list
			list = [],
			// Stack of fire calls for repeatable lists
			stack = !options.once && [],
			// Fire callbacks
			fire = function( data ) {
				memory = options.memory && data;
				fired = true;
				firingIndex = firingStart || 0;
				firingStart = 0;
				firingLength = list.length;
				firing = true;
				for ( ; list && firingIndex < firingLength; firingIndex++ ) {
					if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
						memory = false; // To prevent further calls using add
						break;
					}
				}
				firing = false;
				if ( list ) {
					if ( stack ) {
						if ( stack.length ) {
							fire( stack.shift() );
						}
					} else if ( memory ) {
						list = [];
					} else {
						self.disable();
					}
				}
			},
			// Actual Callbacks object
			self = {
				// Add a callback or a collection of callbacks to the list
				add: function() {
					if ( list ) {
						// First, we save the current length
						var start = list.length;
						(function add( args ) {
							jQuery.each( args, function( _, arg ) {
								var type = jQuery.type( arg );
								if ( type === "function" ) {
									if ( !options.unique || !self.has( arg ) ) {
										list.push( arg );
									}
								} else if ( arg && arg.length && type !== "string" ) {
									// Inspect recursively
									add( arg );
								}
							});
						})( arguments );
						// Do we need to add the callbacks to the
						// current firing batch?
						if ( firing ) {
							firingLength = list.length;
						// With memory, if we're not firing then
						// we should call right away
						} else if ( memory ) {
							firingStart = start;
							fire( memory );
						}
					}
					return this;
				},
				// Remove a callback from the list
				remove: function() {
					if ( list ) {
						jQuery.each( arguments, function( _, arg ) {
							var index;
							while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
								list.splice( index, 1 );
								// Handle firing indexes
								if ( firing ) {
									if ( index <= firingLength ) {
										firingLength--;
									}
									if ( index <= firingIndex ) {
										firingIndex--;
									}
								}
							}
						});
					}
					return this;
				},
				// Check if a given callback is in the list.
				// If no argument is given, return whether or not list has callbacks attached.
				has: function( fn ) {
					return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
				},
				// Remove all callbacks from the list
				empty: function() {
					list = [];
					firingLength = 0;
					return this;
				},
				// Have the list do nothing anymore
				disable: function() {
					list = stack = memory = undefined;
					return this;
				},
				// Is it disabled?
				disabled: function() {
					return !list;
				},
				// Lock the list in its current state
				lock: function() {
					stack = undefined;
					if ( !memory ) {
						self.disable();
					}
					return this;
				},
				// Is it locked?
				locked: function() {
					return !stack;
				},
				// Call all callbacks with the given context and arguments
				fireWith: function( context, args ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( list && ( !fired || stack ) ) {
						if ( firing ) {
							stack.push( args );
						} else {
							fire( args );
						}
					}
					return this;
				},
				// Call all the callbacks with the given arguments
				fire: function() {
					self.fireWith( this, arguments );
					return this;
				},
				// To know if the callbacks have already been called at least once
				fired: function() {
					return !!fired;
				}
			};

		return self;
	};
	jQuery.extend({

		Deferred: function( func ) {
			var tuples = [
					// action, add listener, listener list, final state
					[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
					[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
					[ "notify", "progress", jQuery.Callbacks("memory") ]
				],
				state = "pending",
				promise = {
					state: function() {
						return state;
					},
					always: function() {
						deferred.done( arguments ).fail( arguments );
						return this;
					},
					then: function( /* fnDone, fnFail, fnProgress */ ) {
						var fns = arguments;
						return jQuery.Deferred(function( newDefer ) {
							jQuery.each( tuples, function( i, tuple ) {
								var action = tuple[ 0 ],
									fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
								// deferred[ done | fail | progress ] for forwarding actions to newDefer
								deferred[ tuple[1] ](function() {
									var returned = fn && fn.apply( this, arguments );
									if ( returned && jQuery.isFunction( returned.promise ) ) {
										returned.promise()
											.done( newDefer.resolve )
											.fail( newDefer.reject )
											.progress( newDefer.notify );
									} else {
										newDefer[ action + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
									}
								});
							});
							fns = null;
						}).promise();
					},
					// Get a promise for this deferred
					// If obj is provided, the promise aspect is added to the object
					promise: function( obj ) {
						return obj != null ? jQuery.extend( obj, promise ) : promise;
					}
				},
				deferred = {};

			// Keep pipe for back-compat
			promise.pipe = promise.then;

			// Add list-specific methods
			jQuery.each( tuples, function( i, tuple ) {
				var list = tuple[ 2 ],
					stateString = tuple[ 3 ];

				// promise[ done | fail | progress ] = list.add
				promise[ tuple[1] ] = list.add;

				// Handle state
				if ( stateString ) {
					list.add(function() {
						// state = [ resolved | rejected ]
						state = stateString;

					// [ reject_list | resolve_list ].disable; progress_list.lock
					}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
				}

				// deferred[ resolve | reject | notify ]
				deferred[ tuple[0] ] = function() {
					deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
					return this;
				};
				deferred[ tuple[0] + "With" ] = list.fireWith;
			});

			// Make the deferred a promise
			promise.promise( deferred );

			// Call given func if any
			if ( func ) {
				func.call( deferred, deferred );
			}

			// All done!
			return deferred;
		},

		// Deferred helper
		when: function( subordinate /* , ..., subordinateN */ ) {
			var i = 0,
				resolveValues = core_slice.call( arguments ),
				length = resolveValues.length,

				// the count of uncompleted subordinates
				remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

				// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
				deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

				// Update function for both resolve and progress values
				updateFunc = function( i, contexts, values ) {
					return function( value ) {
						contexts[ i ] = this;
						values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
						if( values === progressValues ) {
							deferred.notifyWith( contexts, values );
						} else if ( !( --remaining ) ) {
							deferred.resolveWith( contexts, values );
						}
					};
				},

				progressValues, progressContexts, resolveContexts;

			// add listeners to Deferred subordinates; treat others as resolved
			if ( length > 1 ) {
				progressValues = new Array( length );
				progressContexts = new Array( length );
				resolveContexts = new Array( length );
				for ( ; i < length; i++ ) {
					if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
						resolveValues[ i ].promise()
							.done( updateFunc( i, resolveContexts, resolveValues ) )
							.fail( deferred.reject )
							.progress( updateFunc( i, progressContexts, progressValues ) );
					} else {
						--remaining;
					}
				}
			}

			// if we're not waiting on anything, resolve the master
			if ( !remaining ) {
				deferred.resolveWith( resolveContexts, resolveValues );
			}

			return deferred.promise();
		}
	});
	jQuery.support = (function( support ) {
		var input = document.createElement("input"),
			fragment = document.createDocumentFragment(),
			div = document.createElement("div"),
			select = document.createElement("select"),
			opt = select.appendChild( document.createElement("option") );

		// Finish early in limited environments
		if ( !input.type ) {
			return support;
		}

		input.type = "checkbox";

		// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
		// Check the default checkbox/radio value ("" on old WebKit; "on" elsewhere)
		support.checkOn = input.value !== "";

		// Must access the parent to make an option select properly
		// Support: IE9, IE10
		support.optSelected = opt.selected;

		// Will be defined later
		support.reliableMarginRight = true;
		support.boxSizingReliable = true;
		support.pixelPosition = false;

		// Make sure checked status is properly cloned
		// Support: IE9, IE10
		input.checked = true;
		support.noCloneChecked = input.cloneNode( true ).checked;

		// Make sure that the options inside disabled selects aren't marked as disabled
		// (WebKit marks them as disabled)
		select.disabled = true;
		support.optDisabled = !opt.disabled;

		// Check if an input maintains its value after becoming a radio
		// Support: IE9, IE10
		input = document.createElement("input");
		input.value = "t";
		input.type = "radio";
		support.radioValue = input.value === "t";

		// #11217 - WebKit loses check when the name is after the checked attribute
		input.setAttribute( "checked", "t" );
		input.setAttribute( "name", "t" );

		fragment.appendChild( input );

		// Support: Safari 5.1, Android 4.x, Android 2.3
		// old WebKit doesn't clone checked state correctly in fragments
		support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

		// Support: Firefox, Chrome, Safari
		// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
		support.focusinBubbles = "onfocusin" in window;

		div.style.backgroundClip = "content-box";
		div.cloneNode( true ).style.backgroundClip = "";
		support.clearCloneStyle = div.style.backgroundClip === "content-box";

		// Run tests that need a body at doc ready
		jQuery(function() {
			var container, marginDiv,
				// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
				divReset = "padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box",
				body = document.getElementsByTagName("body")[ 0 ];

			if ( !body ) {
				// Return for frameset docs that don't have a body
				return;
			}

			container = document.createElement("div");
			container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";

			// Check box-sizing and margin behavior.
			body.appendChild( container ).appendChild( div );
			div.innerHTML = "";
			// Support: Firefox, Android 2.3 (Prefixed box-sizing versions).
			div.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%";

			// Workaround failing boxSizing test due to offsetWidth returning wrong value
			// with some non-1 values of body zoom, ticket #13543
			jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {
				support.boxSizing = div.offsetWidth === 4;
			});

			// Use window.getComputedStyle because jsdom on node.js will break without it.
			if ( window.getComputedStyle ) {
				support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
				support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				marginDiv = div.appendChild( document.createElement("div") );
				marginDiv.style.cssText = div.style.cssText = divReset;
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";

				support.reliableMarginRight =
					!parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
			}

			body.removeChild( container );
		});

		return support;
	})( {} );

	/*
		Implementation Summary

		1. Enforce API surface and semantic compatibility with 1.9.x branch
		2. Improve the module's maintainability by reducing the storage
			paths to a single mechanism.
		3. Use the same single mechanism to support "private" and "user" data.
		4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
		5. Avoid exposing implementation details on user objects (eg. expando properties)
		6. Provide a clear path for implementation upgrade to WeakMap in 2014
	*/
	var data_user, data_priv,
		rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
		rmultiDash = /([A-Z])/g;

	function Data() {
		// Support: Android < 4,
		// Old WebKit does not have Object.preventExtensions/freeze method,
		// return new empty object instead with no [[set]] accessor
		Object.defineProperty( this.cache = {}, 0, {
			get: function() {
				return {};
			}
		});

		this.expando = jQuery.expando + Math.random();
	}

	Data.uid = 1;

	Data.accepts = function( owner ) {
		// Accepts only:
		//  - Node
		//    - Node.ELEMENT_NODE
		//    - Node.DOCUMENT_NODE
		//  - Object
		//    - Any
		return owner.nodeType ?
			owner.nodeType === 1 || owner.nodeType === 9 : true;
	};

	Data.prototype = {
		key: function( owner ) {
			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return the key for a frozen object.
			if ( !Data.accepts( owner ) ) {
				return 0;
			}

			var descriptor = {},
				// Check if the owner object already has a cache key
				unlock = owner[ this.expando ];

			// If not, create one
			if ( !unlock ) {
				unlock = Data.uid++;

				// Secure it in a non-enumerable, non-writable property
				try {
					descriptor[ this.expando ] = { value: unlock };
					Object.defineProperties( owner, descriptor );

				// Support: Android < 4
				// Fallback to a less secure definition
				} catch ( e ) {
					descriptor[ this.expando ] = unlock;
					jQuery.extend( owner, descriptor );
				}
			}

			// Ensure the cache object
			if ( !this.cache[ unlock ] ) {
				this.cache[ unlock ] = {};
			}

			return unlock;
		},
		set: function( owner, data, value ) {
			var prop,
				// There may be an unlock assigned to this node,
				// if there is no entry for this "owner", create one inline
				// and set the unlock as though an owner entry had always existed
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			// Handle: [ owner, key, value ] args
			if ( typeof data === "string" ) {
				cache[ data ] = value;

			// Handle: [ owner, { properties } ] args
			} else {
				// Support an expectation from the old data system where plain
				// objects used to initialize would be set to the cache by
				// reference, instead of having properties and values copied.
				// Note, this will kill the connection between
				// "this.cache[ unlock ]" and "cache"
				if ( jQuery.isEmptyObject( cache ) ) {
					this.cache[ unlock ] = data;
				// Otherwise, copy the properties one-by-one to the cache object
				} else {
					for ( prop in data ) {
						cache[ prop ] = data[ prop ];
					}
				}
			}
		},
		get: function( owner, key ) {
			// Either a valid cache is found, or will be created.
			// New caches will be created and the unlock returned,
			// allowing direct access to the newly created
			// empty data object. A valid owner object must be provided.
			var cache = this.cache[ this.key( owner ) ];

			return key === undefined ?
				cache : cache[ key ];
		},
		access: function( owner, key, value ) {
			// In cases where either:
			//
			//   1. No key was specified
			//   2. A string key was specified, but no value provided
			//
			// Take the "read" path and allow the get method to determine
			// which value to return, respectively either:
			//
			//   1. The entire cache object
			//   2. The data stored at the key
			//
			if ( key === undefined ||
					((key && typeof key === "string") && value === undefined) ) {
				return this.get( owner, key );
			}

			// [*]When the key is not a string, or both a key and value
			// are specified, set or extend (existing objects) with either:
			//
			//   1. An object of properties
			//   2. A key and value
			//
			this.set( owner, key, value );

			// Since the "set" path can have two possible entry points
			// return the expected data based on which path was taken[*]
			return value !== undefined ? value : key;
		},
		remove: function( owner, key ) {
			var i, name,
				unlock = this.key( owner ),
				cache = this.cache[ unlock ];

			if ( key === undefined ) {
				this.cache[ unlock ] = {};

			} else {
				// Support array or space separated string of keys
				if ( jQuery.isArray( key ) ) {
					// If "name" is an array of keys...
					// When data is initially created, via ("key", "val") signature,
					// keys will be converted to camelCase.
					// Since there is no way to tell _how_ a key was added, remove
					// both plain key and camelCase key. #12786
					// This will only penalize the array argument path.
					name = key.concat( key.map( jQuery.camelCase ) );
				} else {
					// Try the string as a key before any manipulation
					if ( key in cache ) {
						name = [ key ];
					} else {
						// If a key with the spaces exists, use it.
						// Otherwise, create an array by matching non-whitespace
						name = jQuery.camelCase( key );
						name = name in cache ?
							[ name ] : ( name.match( core_rnotwhite ) || [] );
					}
				}

				i = name.length;
				while ( i-- ) {
					delete cache[ name[ i ] ];
				}
			}
		},
		hasData: function( owner ) {
			return !jQuery.isEmptyObject(
				this.cache[ owner[ this.expando ] ] || {}
			);
		},
		discard: function( owner ) {
			delete this.cache[ this.key( owner ) ];
		}
	};

	// These may be used throughout the jQuery core codebase
	data_user = new Data();
	data_priv = new Data();


	jQuery.extend({
		acceptData: Data.accepts,

		hasData: function( elem ) {
			return data_user.hasData( elem ) || data_priv.hasData( elem );
		},

		data: function( elem, name, data ) {
			return data_user.access( elem, name, data );
		},

		removeData: function( elem, name ) {
			data_user.remove( elem, name );
		},

		// TODO: Now that all calls to _data and _removeData have been replaced
		// with direct calls to data_priv methods, these can be deprecated.
		_data: function( elem, name, data ) {
			return data_priv.access( elem, name, data );
		},

		_removeData: function( elem, name ) {
			data_priv.remove( elem, name );
		}
	});

	jQuery.fn.extend({
		data: function( key, value ) {
			var attrs, name,
				elem = this[ 0 ],
				i = 0,
				data = null;

			// Gets all values
			if ( key === undefined ) {
				if ( this.length ) {
					data = data_user.get( elem );

					if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
						attrs = elem.attributes;
						for ( ; i < attrs.length; i++ ) {
							name = attrs[ i ].name;

							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.substring(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
						data_priv.set( elem, "hasDataAttrs", true );
					}
				}

				return data;
			}

			// Sets multiple values
			if ( typeof key === "object" ) {
				return this.each(function() {
					data_user.set( this, key );
				});
			}

			return jQuery.access( this, function( value ) {
				var data,
					camelKey = jQuery.camelCase( key );

				// The calling jQuery object (element matches) is not empty
				// (and therefore has an element appears at this[ 0 ]) and the
				// `value` parameter was not undefined. An empty jQuery object
				// will result in `undefined` for elem = this[ 0 ] which will
				// throw an exception if an attempt to read a data cache is made.
				if ( elem && value === undefined ) {
					// Attempt to get data from the cache
					// with the key as-is
					data = data_user.get( elem, key );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to get data from the cache
					// with the key camelized
					data = data_user.get( elem, camelKey );
					if ( data !== undefined ) {
						return data;
					}

					// Attempt to "discover" the data in
					// HTML5 custom data-* attrs
					data = dataAttr( elem, camelKey, undefined );
					if ( data !== undefined ) {
						return data;
					}

					// We tried really hard, but the data doesn't exist.
					return;
				}

				// Set the data...
				this.each(function() {
					// First, attempt to store a copy or reference of any
					// data that might've been store with a camelCased key.
					var data = data_user.get( this, camelKey );

					// For HTML5 data-* attribute interop, we have to
					// store property names with dashes in a camelCase form.
					// This might not apply to all properties...*
					data_user.set( this, camelKey, value );

					// *... In the case of properties that might _actually_
					// have dashes, we need to also store a copy of that
					// unchanged property.
					if ( key.indexOf("-") !== -1 && data !== undefined ) {
						data_user.set( this, key, value );
					}
				});
			}, null, value, arguments.length > 1, null, true );
		},

		removeData: function( key ) {
			return this.each(function() {
				data_user.remove( this, key );
			});
		}
	});

	function dataAttr( elem, key, data ) {
		var name;

		// If nothing was found internally, try to fetch any
		// data from the HTML5 data-* attribute
		if ( data === undefined && elem.nodeType === 1 ) {
			name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
			data = elem.getAttribute( name );

			if ( typeof data === "string" ) {
				try {
					data = data === "true" ? true :
						data === "false" ? false :
						data === "null" ? null :
						// Only convert to a number if it doesn't change the string
						+data + "" === data ? +data :
						rbrace.test( data ) ? JSON.parse( data ) :
						data;
				} catch( e ) {}

				// Make sure we set the data so it isn't changed later
				data_user.set( elem, key, data );
			} else {
				data = undefined;
			}
		}
		return data;
	}
	jQuery.extend({
		queue: function( elem, type, data ) {
			var queue;

			if ( elem ) {
				type = ( type || "fx" ) + "queue";
				queue = data_priv.get( elem, type );

				// Speed up dequeue by getting out quickly if this is just a lookup
				if ( data ) {
					if ( !queue || jQuery.isArray( data ) ) {
						queue = data_priv.access( elem, type, jQuery.makeArray(data) );
					} else {
						queue.push( data );
					}
				}
				return queue || [];
			}
		},

		dequeue: function( elem, type ) {
			type = type || "fx";

			var queue = jQuery.queue( elem, type ),
				startLength = queue.length,
				fn = queue.shift(),
				hooks = jQuery._queueHooks( elem, type ),
				next = function() {
					jQuery.dequeue( elem, type );
				};

			// If the fx queue is dequeued, always remove the progress sentinel
			if ( fn === "inprogress" ) {
				fn = queue.shift();
				startLength--;
			}

			hooks.cur = fn;
			if ( fn ) {

				// Add a progress sentinel to prevent the fx queue from being
				// automatically dequeued
				if ( type === "fx" ) {
					queue.unshift( "inprogress" );
				}

				// clear up the last queue stop function
				delete hooks.stop;
				fn.call( elem, next, hooks );
			}

			if ( !startLength && hooks ) {
				hooks.empty.fire();
			}
		},

		// not intended for public consumption - generates a queueHooks object, or returns the current one
		_queueHooks: function( elem, type ) {
			var key = type + "queueHooks";
			return data_priv.get( elem, key ) || data_priv.access( elem, key, {
				empty: jQuery.Callbacks("once memory").add(function() {
					data_priv.remove( elem, [ type + "queue", key ] );
				})
			});
		}
	});

	jQuery.fn.extend({
		queue: function( type, data ) {
			var setter = 2;

			if ( typeof type !== "string" ) {
				data = type;
				type = "fx";
				setter--;
			}

			if ( arguments.length < setter ) {
				return jQuery.queue( this[0], type );
			}

			return data === undefined ?
				this :
				this.each(function() {
					var queue = jQuery.queue( this, type, data );

					// ensure a hooks for this queue
					jQuery._queueHooks( this, type );

					if ( type === "fx" && queue[0] !== "inprogress" ) {
						jQuery.dequeue( this, type );
					}
				});
		},
		dequeue: function( type ) {
			return this.each(function() {
				jQuery.dequeue( this, type );
			});
		},
		// Based off of the plugin by Clint Helfers, with permission.
		// http://blindsignals.com/index.php/2009/07/jquery-delay/
		delay: function( time, type ) {
			time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
			type = type || "fx";

			return this.queue( type, function( next, hooks ) {
				var timeout = setTimeout( next, time );
				hooks.stop = function() {
					clearTimeout( timeout );
				};
			});
		},
		clearQueue: function( type ) {
			return this.queue( type || "fx", [] );
		},
		// Get a promise resolved when queues of a certain type
		// are emptied (fx is the type by default)
		promise: function( type, obj ) {
			var tmp,
				count = 1,
				defer = jQuery.Deferred(),
				elements = this,
				i = this.length,
				resolve = function() {
					if ( !( --count ) ) {
						defer.resolveWith( elements, [ elements ] );
					}
				};

			if ( typeof type !== "string" ) {
				obj = type;
				type = undefined;
			}
			type = type || "fx";

			while( i-- ) {
				tmp = data_priv.get( elements[ i ], type + "queueHooks" );
				if ( tmp && tmp.empty ) {
					count++;
					tmp.empty.add( resolve );
				}
			}
			resolve();
			return defer.promise( obj );
		}
	});
	var nodeHook, boolHook,
		rclass = /[\t\r\n]/g,
		rreturn = /\r/g,
		rfocusable = /^(?:input|select|textarea|button)$/i;

	jQuery.fn.extend({
		attr: function( name, value ) {
			return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
		},

		removeAttr: function( name ) {
			return this.each(function() {
				jQuery.removeAttr( this, name );
			});
		},

		prop: function( name, value ) {
			return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
		},

		removeProp: function( name ) {
			return this.each(function() {
				delete this[ jQuery.propFix[ name ] || name ];
			});
		},

		addClass: function( value ) {
			var classes, elem, cur, clazz, j,
				i = 0,
				len = this.length,
				proceed = typeof value === "string" && value;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).addClass( value.call( this, j, this.className ) );
				});
			}

			if ( proceed ) {
				// The disjunction here is for better compressibility (see removeClass)
				classes = ( value || "" ).match( core_rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						" "
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
								cur += clazz + " ";
							}
						}
						elem.className = jQuery.trim( cur );

					}
				}
			}

			return this;
		},

		removeClass: function( value ) {
			var classes, elem, cur, clazz, j,
				i = 0,
				len = this.length,
				proceed = arguments.length === 0 || typeof value === "string" && value;

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( j ) {
					jQuery( this ).removeClass( value.call( this, j, this.className ) );
				});
			}
			if ( proceed ) {
				classes = ( value || "" ).match( core_rnotwhite ) || [];

				for ( ; i < len; i++ ) {
					elem = this[ i ];
					// This expression is here for better compressibility (see addClass)
					cur = elem.nodeType === 1 && ( elem.className ?
						( " " + elem.className + " " ).replace( rclass, " " ) :
						""
					);

					if ( cur ) {
						j = 0;
						while ( (clazz = classes[j++]) ) {
							// Remove *all* instances
							while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
								cur = cur.replace( " " + clazz + " ", " " );
							}
						}
						elem.className = value ? jQuery.trim( cur ) : "";
					}
				}
			}

			return this;
		},

		toggleClass: function( value, stateVal ) {
			var type = typeof value,
				isBool = typeof stateVal === "boolean";

			if ( jQuery.isFunction( value ) ) {
				return this.each(function( i ) {
					jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
				});
			}

			return this.each(function() {
				if ( type === "string" ) {
					// toggle individual class names
					var className,
						i = 0,
						self = jQuery( this ),
						state = stateVal,
						classNames = value.match( core_rnotwhite ) || [];

					while ( (className = classNames[ i++ ]) ) {
						// check each className given, space separated list
						state = isBool ? state : !self.hasClass( className );
						self[ state ? "addClass" : "removeClass" ]( className );
					}

				// Toggle whole class name
				} else if ( type === core_strundefined || type === "boolean" ) {
					if ( this.className ) {
						// store className if set
						data_priv.set( this, "__className__", this.className );
					}

					// If the element has a class name or if we're passed "false",
					// then remove the whole classname (if there was one, the above saved it).
					// Otherwise bring back whatever was previously saved (if anything),
					// falling back to the empty string if nothing was stored.
					this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
				}
			});
		},

		hasClass: function( selector ) {
			var className = " " + selector + " ",
				i = 0,
				l = this.length;
			for ( ; i < l; i++ ) {
				if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
					return true;
				}
			}

			return false;
		},

		val: function( value ) {
			var hooks, ret, isFunction,
				elem = this[0];

			if ( !arguments.length ) {
				if ( elem ) {
					hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

					if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
						return ret;
					}

					ret = elem.value;

					return typeof ret === "string" ?
						// handle most common string cases
						ret.replace(rreturn, "") :
						// handle cases where value is null/undef or number
						ret == null ? "" : ret;
				}

				return;
			}

			isFunction = jQuery.isFunction( value );

			return this.each(function( i ) {
				var val,
					self = jQuery(this);

				if ( this.nodeType !== 1 ) {
					return;
				}

				if ( isFunction ) {
					val = value.call( this, i, self.val() );
				} else {
					val = value;
				}

				// Treat null/undefined as ""; convert numbers to string
				if ( val == null ) {
					val = "";
				} else if ( typeof val === "number" ) {
					val += "";
				} else if ( jQuery.isArray( val ) ) {
					val = jQuery.map(val, function ( value ) {
						return value == null ? "" : value + "";
					});
				}

				hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

				// If set returns undefined, fall back to normal setting
				if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
					this.value = val;
				}
			});
		}
	});

	jQuery.extend({
		valHooks: {
			option: {
				get: function( elem ) {
					// attributes.value is undefined in Blackberry 4.7 but
					// uses .value. See #6932
					var val = elem.attributes.value;
					return !val || val.specified ? elem.value : elem.text;
				}
			},
			select: {
				get: function( elem ) {
					var value, option,
						options = elem.options,
						index = elem.selectedIndex,
						one = elem.type === "select-one" || index < 0,
						values = one ? null : [],
						max = one ? index + 1 : options.length,
						i = index < 0 ?
							max :
							one ? index : 0;

					// Loop through all the selected options
					for ( ; i < max; i++ ) {
						option = options[ i ];

						// IE6-9 doesn't update selected after form reset (#2551)
						if ( ( option.selected || i === index ) &&
								// Don't return options that are disabled or in a disabled optgroup
								( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
								( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

							// Get the specific value for the option
							value = jQuery( option ).val();

							// We don't need an array for one selects
							if ( one ) {
								return value;
							}

							// Multi-Selects return an array
							values.push( value );
						}
					}

					return values;
				},

				set: function( elem, value ) {
					var optionSet, option,
						options = elem.options,
						values = jQuery.makeArray( value ),
						i = options.length;

					while ( i-- ) {
						option = options[ i ];
						if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {
							optionSet = true;
						}
					}

					// force browsers to behave consistently when non-matching value is set
					if ( !optionSet ) {
						elem.selectedIndex = -1;
					}
					return values;
				}
			}
		},

		attr: function( elem, name, value ) {
			var hooks, ret,
				nType = elem.nodeType;

			// don't get/set attributes on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			// Fallback to prop when attributes are not supported
			if ( typeof elem.getAttribute === core_strundefined ) {
				return jQuery.prop( elem, name, value );
			}

			// All attributes are lowercase
			// Grab necessary hook if one is defined
			if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
				name = name.toLowerCase();
				hooks = jQuery.attrHooks[ name ] ||
					( jQuery.expr.match.boolean.test( name ) ? boolHook : nodeHook );
			}

			if ( value !== undefined ) {

				if ( value === null ) {
					jQuery.removeAttr( elem, name );

				} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
					return ret;

				} else {
					elem.setAttribute( name, value + "" );
					return value;
				}

			} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
				return ret;

			} else {
				ret = jQuery.find.attr( elem, name );

				// Non-existent attributes return null, we normalize to undefined
				return ret == null ?
					undefined :
					ret;
			}
		},

		removeAttr: function( elem, value ) {
			var name, propName,
				i = 0,
				attrNames = value && value.match( core_rnotwhite );

			if ( attrNames && elem.nodeType === 1 ) {
				while ( (name = attrNames[i++]) ) {
					propName = jQuery.propFix[ name ] || name;

					// Boolean attributes get special treatment (#10870)
					if ( jQuery.expr.match.boolean.test( name ) ) {
						// Set corresponding property to false
						elem[ propName ] = false;
					}

					elem.removeAttribute( name );
				}
			}
		},

		attrHooks: {
			type: {
				set: function( elem, value ) {
					if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
						// Setting the type on a radio button after the value resets the value in IE6-9
						// Reset value to default in case type is set after value during creation
						var val = elem.value;
						elem.setAttribute( "type", value );
						if ( val ) {
							elem.value = val;
						}
						return value;
					}
				}
			}
		},

		propFix: {
			"for": "htmlFor",
			"class": "className"
		},

		prop: function( elem, name, value ) {
			var ret, hooks, notxml,
				nType = elem.nodeType;

			// don't get/set properties on text, comment and attribute nodes
			if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
				return;
			}

			notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

			if ( notxml ) {
				// Fix name and attach hooks
				name = jQuery.propFix[ name ] || name;
				hooks = jQuery.propHooks[ name ];
			}

			if ( value !== undefined ) {
				return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
					ret :
					( elem[ name ] = value );

			} else {
				return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
					ret :
					elem[ name ];
			}
		},

		propHooks: {
			tabIndex: {
				get: function( elem ) {
					return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
						elem.tabIndex :
						-1;
				}
			}
		}
	});

	// Hooks for boolean attributes
	boolHook = {
		set: function( elem, value, name ) {
			if ( value === false ) {
				// Remove boolean attributes when set to false
				jQuery.removeAttr( elem, name );
			} else {
				elem.setAttribute( name, name );
			}
			return name;
		}
	};
	jQuery.each( jQuery.expr.match.boolean.source.match( /\w+/g ), function( i, name ) {
		var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;

		jQuery.expr.attrHandle[ name ] = function( elem, name, isXML ) {
			var fn = jQuery.expr.attrHandle[ name ],
				ret = isXML ?
					undefined :
					/* jshint eqeqeq: false */
					// Temporarily disable this handler to check existence
					(jQuery.expr.attrHandle[ name ] = undefined) !=
						getter( elem, name, isXML ) ?

						name.toLowerCase() :
						null;

			// Restore handler
			jQuery.expr.attrHandle[ name ] = fn;

			return ret;
		};
	});

	// Support: IE9+
	// Selectedness for an option in an optgroup can be inaccurate
	if ( !jQuery.support.optSelected ) {
		jQuery.propHooks.selected = {
			get: function( elem ) {
				var parent = elem.parentNode;
				if ( parent && parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
				return null;
			}
		};
	}

	jQuery.each([
		"tabIndex",
		"readOnly",
		"maxLength",
		"cellSpacing",
		"cellPadding",
		"rowSpan",
		"colSpan",
		"useMap",
		"frameBorder",
		"contentEditable"
	], function() {
		jQuery.propFix[ this.toLowerCase() ] = this;
	});

	// Radios and checkboxes getter/setter
	jQuery.each([ "radio", "checkbox" ], function() {
		jQuery.valHooks[ this ] = {
			set: function( elem, value ) {
				if ( jQuery.isArray( value ) ) {
					return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
				}
			}
		};
		if ( !jQuery.support.checkOn ) {
			jQuery.valHooks[ this ].get = function( elem ) {
				// Support: Webkit
				// "" is returned instead of "on" if a value isn't specified
				return elem.getAttribute("value") === null ? "on" : elem.value;
			};
		}
	});
	var rkeyEvent = /^key/,
		rmouseEvent = /^(?:mouse|contextmenu)|click/,
		rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
		rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

	function returnTrue() {
		return true;
	}

	function returnFalse() {
		return false;
	}

	function safeActiveElement() {
		try {
			return document.activeElement;
		} catch ( err ) { }
	}

	/*
	 * Helper functions for managing events -- not part of the public interface.
	 * Props to Dean Edwards' addEvent library for many of the ideas.
	 */
	jQuery.event = {

		global: {},

		add: function( elem, types, handler, data, selector ) {

			var handleObjIn, eventHandle, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.get( elem );

			// Don't attach events to noData or text/comment nodes (but allow plain objects)
			if ( !elemData ) {
				return;
			}

			// Caller can pass in an object of custom data in lieu of the handler
			if ( handler.handler ) {
				handleObjIn = handler;
				handler = handleObjIn.handler;
				selector = handleObjIn.selector;
			}

			// Make sure that the handler has a unique ID, used to find/remove it later
			if ( !handler.guid ) {
				handler.guid = jQuery.guid++;
			}

			// Init the element's event structure and main handler, if this is the first
			if ( !(events = elemData.events) ) {
				events = elemData.events = {};
			}
			if ( !(eventHandle = elemData.handle) ) {
				eventHandle = elemData.handle = function( e ) {
					// Discard the second event of a jQuery.event.trigger() and
					// when an event is called after a page has unloaded
					return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?
						jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
						undefined;
				};
				// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
				eventHandle.elem = elem;
			}

			// Handle multiple events separated by a space
			types = ( types || "" ).match( core_rnotwhite ) || [""];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// There *must* be a type, no attaching namespace-only handlers
				if ( !type ) {
					continue;
				}

				// If event changes its type, use the special event handlers for the changed type
				special = jQuery.event.special[ type ] || {};

				// If selector defined, determine special event api type, otherwise given type
				type = ( selector ? special.delegateType : special.bindType ) || type;

				// Update special based on newly reset type
				special = jQuery.event.special[ type ] || {};

				// handleObj is passed to all event handlers
				handleObj = jQuery.extend({
					type: type,
					origType: origType,
					data: data,
					handler: handler,
					guid: handler.guid,
					selector: selector,
					needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
					namespace: namespaces.join(".")
				}, handleObjIn );

				// Init the event handler queue if we're the first
				if ( !(handlers = events[ type ]) ) {
					handlers = events[ type ] = [];
					handlers.delegateCount = 0;

					// Only use addEventListener if the special events handler returns false
					if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
						if ( elem.addEventListener ) {
							elem.addEventListener( type, eventHandle, false );
						}
					}
				}

				if ( special.add ) {
					special.add.call( elem, handleObj );

					if ( !handleObj.handler.guid ) {
						handleObj.handler.guid = handler.guid;
					}
				}

				// Add to the element's handler list, delegates in front
				if ( selector ) {
					handlers.splice( handlers.delegateCount++, 0, handleObj );
				} else {
					handlers.push( handleObj );
				}

				// Keep track of which events have ever been used, for event optimization
				jQuery.event.global[ type ] = true;
			}

			// Nullify elem to prevent memory leaks in IE
			elem = null;
		},

		// Detach an event or set of events from an element
		remove: function( elem, types, handler, selector, mappedTypes ) {

			var j, origCount, tmp,
				events, t, handleObj,
				special, handlers, type, namespaces, origType,
				elemData = data_priv.hasData( elem ) && data_priv.get( elem );

			if ( !elemData || !(events = elemData.events) ) {
				return;
			}

			// Once for each type.namespace in types; type may be omitted
			types = ( types || "" ).match( core_rnotwhite ) || [""];
			t = types.length;
			while ( t-- ) {
				tmp = rtypenamespace.exec( types[t] ) || [];
				type = origType = tmp[1];
				namespaces = ( tmp[2] || "" ).split( "." ).sort();

				// Unbind all events (on this namespace, if provided) for the element
				if ( !type ) {
					for ( type in events ) {
						jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
					}
					continue;
				}

				special = jQuery.event.special[ type ] || {};
				type = ( selector ? special.delegateType : special.bindType ) || type;
				handlers = events[ type ] || [];
				tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

				// Remove matching events
				origCount = j = handlers.length;
				while ( j-- ) {
					handleObj = handlers[ j ];

					if ( ( mappedTypes || origType === handleObj.origType ) &&
						( !handler || handler.guid === handleObj.guid ) &&
						( !tmp || tmp.test( handleObj.namespace ) ) &&
						( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
						handlers.splice( j, 1 );

						if ( handleObj.selector ) {
							handlers.delegateCount--;
						}
						if ( special.remove ) {
							special.remove.call( elem, handleObj );
						}
					}
				}

				// Remove generic event handler if we removed something and no more handlers exist
				// (avoids potential for endless recursion during removal of special event handlers)
				if ( origCount && !handlers.length ) {
					if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
						jQuery.removeEvent( elem, type, elemData.handle );
					}

					delete events[ type ];
				}
			}

			// Remove the expando if it's no longer used
			if ( jQuery.isEmptyObject( events ) ) {
				delete elemData.handle;
				data_priv.remove( elem, "events" );
			}
		},

		trigger: function( event, data, elem, onlyHandlers ) {

			var i, cur, tmp, bubbleType, ontype, handle, special,
				eventPath = [ elem || document ],
				type = core_hasOwn.call( event, "type" ) ? event.type : event,
				namespaces = core_hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

			cur = tmp = elem = elem || document;

			// Don't do events on text and comment nodes
			if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
				return;
			}

			// focus/blur morphs to focusin/out; ensure we're not firing them right now
			if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
				return;
			}

			if ( type.indexOf(".") >= 0 ) {
				// Namespaced trigger; create a regexp to match event type in handle()
				namespaces = type.split(".");
				type = namespaces.shift();
				namespaces.sort();
			}
			ontype = type.indexOf(":") < 0 && "on" + type;

			// Caller can pass in a jQuery.Event object, Object, or just an event type string
			event = event[ jQuery.expando ] ?
				event :
				new jQuery.Event( type, typeof event === "object" && event );

			// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
			event.isTrigger = onlyHandlers ? 2 : 3;
			event.namespace = namespaces.join(".");
			event.namespace_re = event.namespace ?
				new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
				null;

			// Clean up the event in case it is being reused
			event.result = undefined;
			if ( !event.target ) {
				event.target = elem;
			}

			// Clone any incoming data and prepend the event, creating the handler arg list
			data = data == null ?
				[ event ] :
				jQuery.makeArray( data, [ event ] );

			// Allow special events to draw outside the lines
			special = jQuery.event.special[ type ] || {};
			if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
				return;
			}

			// Determine event propagation path in advance, per W3C events spec (#9951)
			// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
			if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

				bubbleType = special.delegateType || type;
				if ( !rfocusMorph.test( bubbleType + type ) ) {
					cur = cur.parentNode;
				}
				for ( ; cur; cur = cur.parentNode ) {
					eventPath.push( cur );
					tmp = cur;
				}

				// Only add window if we got to document (e.g., not plain obj or detached DOM)
				if ( tmp === (elem.ownerDocument || document) ) {
					eventPath.push( tmp.defaultView || tmp.parentWindow || window );
				}
			}

			// Fire handlers on the event path
			i = 0;
			while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

				event.type = i > 1 ?
					bubbleType :
					special.bindType || type;

				// jQuery handler
				handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
				if ( handle ) {
					handle.apply( cur, data );
				}

				// Native handler
				handle = ontype && cur[ ontype ];
				if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
					event.preventDefault();
				}
			}
			event.type = type;

			// If nobody prevented the default action, do it now
			if ( !onlyHandlers && !event.isDefaultPrevented() ) {

				if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
					jQuery.acceptData( elem ) ) {

					// Call a native DOM method on the target with the same name name as the event.
					// Don't do default actions on window, that's where global variables be (#6170)
					if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

						// Don't re-trigger an onFOO event when we call its FOO() method
						tmp = elem[ ontype ];

						if ( tmp ) {
							elem[ ontype ] = null;
						}

						// Prevent re-triggering of the same event, since we already bubbled it above
						jQuery.event.triggered = type;
						elem[ type ]();
						jQuery.event.triggered = undefined;

						if ( tmp ) {
							elem[ ontype ] = tmp;
						}
					}
				}
			}

			return event.result;
		},

		dispatch: function( event ) {

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( event );

			var i, j, ret, matched, handleObj,
				handlerQueue = [],
				args = core_slice.call( arguments ),
				handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
				special = jQuery.event.special[ event.type ] || {};

			// Use the fix-ed jQuery.Event rather than the (read-only) native event
			args[0] = event;
			event.delegateTarget = this;

			// Call the preDispatch hook for the mapped type, and let it bail if desired
			if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
				return;
			}

			// Determine handlers
			handlerQueue = jQuery.event.handlers.call( this, event, handlers );

			// Run delegates first; they may want to stop propagation beneath us
			i = 0;
			while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
				event.currentTarget = matched.elem;

				j = 0;
				while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

					// Triggered event must either 1) have no namespace, or
					// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
					if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

						event.handleObj = handleObj;
						event.data = handleObj.data;

						ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
								.apply( matched.elem, args );

						if ( ret !== undefined ) {
							if ( (event.result = ret) === false ) {
								event.preventDefault();
								event.stopPropagation();
							}
						}
					}
				}
			}

			// Call the postDispatch hook for the mapped type
			if ( special.postDispatch ) {
				special.postDispatch.call( this, event );
			}

			return event.result;
		},

		handlers: function( event, handlers ) {
			var i, matches, sel, handleObj,
				handlerQueue = [],
				delegateCount = handlers.delegateCount,
				cur = event.target;

			// Find delegate handlers
			// Black-hole SVG <use> instance trees (#13180)
			// Avoid non-left-click bubbling in Firefox (#3861)
			if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

				for ( ; cur !== this; cur = cur.parentNode || this ) {

					// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
					if ( cur.disabled !== true || event.type !== "click" ) {
						matches = [];
						for ( i = 0; i < delegateCount; i++ ) {
							handleObj = handlers[ i ];

							// Don't conflict with Object.prototype properties (#13203)
							sel = handleObj.selector + " ";

							if ( matches[ sel ] === undefined ) {
								matches[ sel ] = handleObj.needsContext ?
									jQuery( sel, this ).index( cur ) >= 0 :
									jQuery.find( sel, this, null, [ cur ] ).length;
							}
							if ( matches[ sel ] ) {
								matches.push( handleObj );
							}
						}
						if ( matches.length ) {
							handlerQueue.push({ elem: cur, handlers: matches });
						}
					}
				}
			}

			// Add the remaining (directly-bound) handlers
			if ( delegateCount < handlers.length ) {
				handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
			}

			return handlerQueue;
		},

		// Includes some event props shared by KeyEvent and MouseEvent
		props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

		fixHooks: {},

		keyHooks: {
			props: "char charCode key keyCode".split(" "),
			filter: function( event, original ) {

				// Add which for key events
				if ( event.which == null ) {
					event.which = original.charCode != null ? original.charCode : original.keyCode;
				}

				return event;
			}
		},

		mouseHooks: {
			props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
			filter: function( event, original ) {
				var eventDoc, doc, body,
					button = original.button;

				// Calculate pageX/Y if missing and clientX/Y available
				if ( event.pageX == null && original.clientX != null ) {
					eventDoc = event.target.ownerDocument || document;
					doc = eventDoc.documentElement;
					body = eventDoc.body;

					event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
					event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
				}

				// Add which for click: 1 === left; 2 === middle; 3 === right
				// Note: button is not normalized, so don't use it
				if ( !event.which && button !== undefined ) {
					event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
				}

				return event;
			}
		},

		fix: function( event ) {
			if ( event[ jQuery.expando ] ) {
				return event;
			}

			// Create a writable copy of the event object and normalize some properties
			var i, prop, copy,
				type = event.type,
				originalEvent = event,
				fixHook = this.fixHooks[ type ];

			if ( !fixHook ) {
				this.fixHooks[ type ] = fixHook =
					rmouseEvent.test( type ) ? this.mouseHooks :
					rkeyEvent.test( type ) ? this.keyHooks :
					{};
			}
			copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

			event = new jQuery.Event( originalEvent );

			i = copy.length;
			while ( i-- ) {
				prop = copy[ i ];
				event[ prop ] = originalEvent[ prop ];
			}

			// Support: Safari 6.0+, Chrome < 28
			// Target should not be a text node (#504, #13143)
			if ( event.target.nodeType === 3 ) {
				event.target = event.target.parentNode;
			}

			return fixHook.filter? fixHook.filter( event, originalEvent ) : event;
		},

		special: {
			load: {
				// Prevent triggered image.load events from bubbling to window.load
				noBubble: true
			},
			focus: {
				// Fire native event if possible so blur/focus sequence is correct
				trigger: function() {
					if ( this !== safeActiveElement() && this.focus ) {
						this.focus();
						return false;
					}
				},
				delegateType: "focusin"
			},
			blur: {
				trigger: function() {
					if ( this === safeActiveElement() && this.blur ) {
						this.blur();
						return false;
					}
				},
				delegateType: "focusout"
			},
			click: {
				// For checkbox, fire native event so checked state will be right
				trigger: function() {
					if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
						this.click();
						return false;
					}
				},

				// For cross-browser consistency, don't fire native .click() on links
				_default: function( event ) {
					return jQuery.nodeName( event.target, "a" );
				}
			},

			beforeunload: {
				postDispatch: function( event ) {

					// Support: Firefox 20+
					// Firefox doesn't alert if the returnValue field is not set.
					if ( event.result !== undefined ) {
						event.originalEvent.returnValue = event.result;
					}
				}
			}
		},

		simulate: function( type, elem, event, bubble ) {
			// Piggyback on a donor event to simulate a different one.
			// Fake originalEvent to avoid donor's stopPropagation, but if the
			// simulated event prevents default then we do the same on the donor.
			var e = jQuery.extend(
				new jQuery.Event(),
				event,
				{
					type: type,
					isSimulated: true,
					originalEvent: {}
				}
			);
			if ( bubble ) {
				jQuery.event.trigger( e, null, elem );
			} else {
				jQuery.event.dispatch.call( elem, e );
			}
			if ( e.isDefaultPrevented() ) {
				event.preventDefault();
			}
		}
	};

	jQuery.removeEvent = function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	};

	jQuery.Event = function( src, props ) {
		// Allow instantiation without the 'new' keyword
		if ( !(this instanceof jQuery.Event) ) {
			return new jQuery.Event( src, props );
		}

		// Event object
		if ( src && src.type ) {
			this.originalEvent = src;
			this.type = src.type;

			// Events bubbling up the document may have been marked as prevented
			// by a handler lower down the tree; reflect the correct value.
			this.isDefaultPrevented = ( src.defaultPrevented ||
				src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

		// Event type
		} else {
			this.type = src;
		}

		// Put explicitly provided properties onto the event object
		if ( props ) {
			jQuery.extend( this, props );
		}

		// Create a timestamp if incoming event doesn't have one
		this.timeStamp = src && src.timeStamp || jQuery.now();

		// Mark it as fixed
		this[ jQuery.expando ] = true;
	};

	// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
	// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
	jQuery.Event.prototype = {
		isDefaultPrevented: returnFalse,
		isPropagationStopped: returnFalse,
		isImmediatePropagationStopped: returnFalse,

		preventDefault: function() {
			var e = this.originalEvent;

			this.isDefaultPrevented = returnTrue;

			if ( e && e.preventDefault ) {
				e.preventDefault();
			}
		},
		stopPropagation: function() {
			var e = this.originalEvent;

			this.isPropagationStopped = returnTrue;

			if ( e && e.stopPropagation ) {
				e.stopPropagation();
			}
		},
		stopImmediatePropagation: function() {
			this.isImmediatePropagationStopped = returnTrue;
			this.stopPropagation();
		}
	};

	// Create mouseenter/leave events using mouseover/out and event-time checks
	// Support: Chrome 15+
	jQuery.each({
		mouseenter: "mouseover",
		mouseleave: "mouseout"
	}, function( orig, fix ) {
		jQuery.event.special[ orig ] = {
			delegateType: fix,
			bindType: fix,

			handle: function( event ) {
				var ret,
					target = this,
					related = event.relatedTarget,
					handleObj = event.handleObj;

				// For mousenter/leave call the handler if related is outside the target.
				// NB: No relatedTarget if the mouse left/entered the browser window
				if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
					event.type = handleObj.origType;
					ret = handleObj.handler.apply( this, arguments );
					event.type = fix;
				}
				return ret;
			}
		};
	});

	// Create "bubbling" focus and blur events
	// Support: Firefox, Chrome, Safari
	if ( !jQuery.support.focusinBubbles ) {
		jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

			// Attach a single capturing handler while someone wants focusin/focusout
			var attaches = 0,
				handler = function( event ) {
					jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
				};

			jQuery.event.special[ fix ] = {
				setup: function() {
					if ( attaches++ === 0 ) {
						document.addEventListener( orig, handler, true );
					}
				},
				teardown: function() {
					if ( --attaches === 0 ) {
						document.removeEventListener( orig, handler, true );
					}
				}
			};
		});
	}

	jQuery.fn.extend({

		on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
			var origFn, type;

			// Types can be a map of types/handlers
			if ( typeof types === "object" ) {
				// ( types-Object, selector, data )
				if ( typeof selector !== "string" ) {
					// ( types-Object, data )
					data = data || selector;
					selector = undefined;
				}
				for ( type in types ) {
					this.on( type, selector, data, types[ type ], one );
				}
				return this;
			}

			if ( data == null && fn == null ) {
				// ( types, fn )
				fn = selector;
				data = selector = undefined;
			} else if ( fn == null ) {
				if ( typeof selector === "string" ) {
					// ( types, selector, fn )
					fn = data;
					data = undefined;
				} else {
					// ( types, data, fn )
					fn = data;
					data = selector;
					selector = undefined;
				}
			}
			if ( fn === false ) {
				fn = returnFalse;
			} else if ( !fn ) {
				return this;
			}

			if ( one === 1 ) {
				origFn = fn;
				fn = function( event ) {
					// Can use an empty set, since event contains the info
					jQuery().off( event );
					return origFn.apply( this, arguments );
				};
				// Use same guid so caller can remove using origFn
				fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
			}
			return this.each( function() {
				jQuery.event.add( this, types, fn, data, selector );
			});
		},
		one: function( types, selector, data, fn ) {
			return this.on( types, selector, data, fn, 1 );
		},
		off: function( types, selector, fn ) {
			var handleObj, type;
			if ( types && types.preventDefault && types.handleObj ) {
				// ( event )  dispatched jQuery.Event
				handleObj = types.handleObj;
				jQuery( types.delegateTarget ).off(
					handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
					handleObj.selector,
					handleObj.handler
				);
				return this;
			}
			if ( typeof types === "object" ) {
				// ( types-object [, selector] )
				for ( type in types ) {
					this.off( type, selector, types[ type ] );
				}
				return this;
			}
			if ( selector === false || typeof selector === "function" ) {
				// ( types [, fn] )
				fn = selector;
				selector = undefined;
			}
			if ( fn === false ) {
				fn = returnFalse;
			}
			return this.each(function() {
				jQuery.event.remove( this, types, fn, selector );
			});
		},

		trigger: function( type, data ) {
			return this.each(function() {
				jQuery.event.trigger( type, data, this );
			});
		},
		triggerHandler: function( type, data ) {
			var elem = this[0];
			if ( elem ) {
				return jQuery.event.trigger( type, data, elem, true );
			}
		}
	});
	var isSimple = /^.[^:#\[\.,]*$/,
		rneedsContext = jQuery.expr.match.needsContext,
		// methods guaranteed to produce a unique set when starting from a unique set
		guaranteedUnique = {
			children: true,
			contents: true,
			next: true,
			prev: true
		};

	jQuery.fn.extend({
		find: function( selector ) {
			var self, matched, i,
				l = this.length;

			if ( typeof selector !== "string" ) {
				self = this;
				return this.pushStack( jQuery( selector ).filter(function() {
					for ( i = 0; i < l; i++ ) {
						if ( jQuery.contains( self[ i ], this ) ) {
							return true;
						}
					}
				}) );
			}

			matched = [];
			for ( i = 0; i < l; i++ ) {
				jQuery.find( selector, this[ i ], matched );
			}

			// Needed because $( selector, context ) becomes $( context ).find( selector )
			matched = this.pushStack( l > 1 ? jQuery.unique( matched ) : matched );
			matched.selector = ( this.selector ? this.selector + " " : "" ) + selector;
			return matched;
		},

		has: function( target ) {
			var targets = jQuery( target, this ),
				l = targets.length;

			return this.filter(function() {
				var i = 0;
				for ( ; i < l; i++ ) {
					if ( jQuery.contains( this, targets[i] ) ) {
						return true;
					}
				}
			});
		},

		not: function( selector ) {
			return this.pushStack( winnow(this, selector || [], true) );
		},

		filter: function( selector ) {
			return this.pushStack( winnow(this, selector || [], false) );
		},

		is: function( selector ) {
			return !!selector && (
				typeof selector === "string" ?
					// If this is a positional/relative selector, check membership in the returned set
					// so $("p:first").is("p:last") won't return true for a doc with two "p".
					rneedsContext.test( selector ) ?
						jQuery( selector, this.context ).index( this[ 0 ] ) >= 0 :
						jQuery.filter( selector, this ).length > 0 :
					this.filter( selector ).length > 0 );
		},

		closest: function( selectors, context ) {
			var cur,
				i = 0,
				l = this.length,
				matched = [],
				pos = ( rneedsContext.test( selectors ) || typeof selectors !== "string" ) ?
					jQuery( selectors, context || this.context ) :
					0;

			for ( ; i < l; i++ ) {
				for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
					// Always skip document fragments
					if ( cur.nodeType < 11 && (pos ?
						pos.index(cur) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector(cur, selectors)) ) {

						cur = matched.push( cur );
						break;
					}
				}
			}

			return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
		},

		// Determine the position of an element within
		// the matched set of elements
		index: function( elem ) {

			// No argument, return index in parent
			if ( !elem ) {
				return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
			}

			// index in selector
			if ( typeof elem === "string" ) {
				return core_indexOf.call( jQuery( elem ), this[ 0 ] );
			}

			// Locate the position of the desired element
			return core_indexOf.call( this,

				// If it receives a jQuery object, the first element is used
				elem.jquery ? elem[ 0 ] : elem
			);
		},

		add: function( selector, context ) {
			var set = typeof selector === "string" ?
					jQuery( selector, context ) :
					jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
				all = jQuery.merge( this.get(), set );

			return this.pushStack( jQuery.unique(all) );
		},

		addBack: function( selector ) {
			return this.add( selector == null ?
				this.prevObject : this.prevObject.filter(selector)
			);
		}
	});

	function sibling( cur, dir ) {
		while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}

		return cur;
	}

	jQuery.each({
		parent: function( elem ) {
			var parent = elem.parentNode;
			return parent && parent.nodeType !== 11 ? parent : null;
		},
		parents: function( elem ) {
			return jQuery.dir( elem, "parentNode" );
		},
		parentsUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "parentNode", until );
		},
		next: function( elem ) {
			return sibling( elem, "nextSibling" );
		},
		prev: function( elem ) {
			return sibling( elem, "previousSibling" );
		},
		nextAll: function( elem ) {
			return jQuery.dir( elem, "nextSibling" );
		},
		prevAll: function( elem ) {
			return jQuery.dir( elem, "previousSibling" );
		},
		nextUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "nextSibling", until );
		},
		prevUntil: function( elem, i, until ) {
			return jQuery.dir( elem, "previousSibling", until );
		},
		siblings: function( elem ) {
			return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
		},
		children: function( elem ) {
			return jQuery.sibling( elem.firstChild );
		},
		contents: function( elem ) {
			return jQuery.nodeName( elem, "iframe" ) ?
				elem.contentDocument || elem.contentWindow.document :
				jQuery.merge( [], elem.childNodes );
		}
	}, function( name, fn ) {
		jQuery.fn[ name ] = function( until, selector ) {
			var matched = jQuery.map( this, fn, until );

			if ( name.slice( -5 ) !== "Until" ) {
				selector = until;
			}

			if ( selector && typeof selector === "string" ) {
				matched = jQuery.filter( selector, matched );
			}

			if ( this.length > 1 ) {
				// Remove duplicates
				if ( !guaranteedUnique[ name ] ) {
					jQuery.unique( matched );
				}

				// Reverse order for parents* and prev*
				if ( name[ 0 ] === "p" ) {
					matched.reverse();
				}
			}

			return this.pushStack( matched );
		};
	});

	jQuery.extend({
		filter: function( expr, elems, not ) {
			var elem = elems[ 0 ];

			if ( not ) {
				expr = ":not(" + expr + ")";
			}

			return elems.length === 1 && elem.nodeType === 1 ?
				jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
				jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
					return elem.nodeType === 1;
				}));
		},

		dir: function( elem, dir, until ) {
			var matched = [],
				truncate = until !== undefined;

			while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
				if ( elem.nodeType === 1 ) {
					if ( truncate && jQuery( elem ).is( until ) ) {
						break;
					}
					matched.push( elem );
				}
			}
			return matched;
		},

		sibling: function( n, elem ) {
			var matched = [];

			for ( ; n; n = n.nextSibling ) {
				if ( n.nodeType === 1 && n !== elem ) {
					matched.push( n );
				}
			}

			return matched;
		}
	});

	// Implement the identical functionality for filter and not
	function winnow( elements, qualifier, not ) {
		if ( jQuery.isFunction( qualifier ) ) {
			return jQuery.grep( elements, function( elem, i ) {
				/* jshint -W018 */
				return !!qualifier.call( elem, i, elem ) !== not;
			});

		}

		if ( qualifier.nodeType ) {
			return jQuery.grep( elements, function( elem ) {
				return ( elem === qualifier ) !== not;
			});

		}

		if ( typeof qualifier === "string" ) {
			if ( isSimple.test( qualifier ) ) {
				return jQuery.filter( qualifier, elements, not );
			}

			qualifier = jQuery.filter( qualifier, elements );
		}

		return jQuery.grep( elements, function( elem ) {
			return ( core_indexOf.call( qualifier, elem ) >= 0 ) !== not;
		});
	}
	var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
		rtagName = /<([\w:]+)/,
		rhtml = /<|&#?\w+;/,
		rnoInnerhtml = /<(?:script|style|link)/i,
		manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
		// checked="checked" or checked
		rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
		rscriptType = /^$|\/(?:java|ecma)script/i,
		rscriptTypeMasked = /^true\/(.*)/,
		rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

		// We have to close these tags to support XHTML (#13200)
		wrapMap = {

			// Support: IE 9
			option: [ 1, "<select multiple='multiple'>", "</select>" ],

			thead: [ 1, "<table>", "</table>" ],
			tr: [ 2, "<table><tbody>", "</tbody></table>" ],
			td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

			_default: [ 0, "", "" ]
		};

	// Support: IE 9
	wrapMap.optgroup = wrapMap.option;

	wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.col = wrapMap.thead;
	wrapMap.th = wrapMap.td;

	jQuery.fn.extend({
		text: function( value ) {
			return jQuery.access( this, function( value ) {
				return value === undefined ?
					jQuery.text( this ) :
					this.empty().append( ( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value ) );
			}, null, value, arguments.length );
		},

		append: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.appendChild( elem );
				}
			});
		},

		prepend: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
					var target = manipulationTarget( this, elem );
					target.insertBefore( elem, target.firstChild );
				}
			});
		},

		before: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this );
				}
			});
		},

		after: function() {
			return this.domManip( arguments, function( elem ) {
				if ( this.parentNode ) {
					this.parentNode.insertBefore( elem, this.nextSibling );
				}
			});
		},

		// keepData is for internal use only--do not document
		remove: function( selector, keepData ) {
			var elem,
				elems = selector ? jQuery.filter( selector, this ) : this,
				i = 0;

			for ( ; (elem = elems[i]) != null; i++ ) {
				if ( !keepData && elem.nodeType === 1 ) {
					jQuery.cleanData( getAll( elem ) );
				}

				if ( elem.parentNode ) {
					if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
						setGlobalEval( getAll( elem, "script" ) );
					}
					elem.parentNode.removeChild( elem );
				}
			}

			return this;
		},

		empty: function() {
			var elem,
				i = 0;

			for ( ; (elem = this[i]) != null; i++ ) {
				if ( elem.nodeType === 1 ) {

					// Prevent memory leaks
					jQuery.cleanData( getAll( elem, false ) );

					// Remove any remaining nodes
					elem.textContent = "";
				}
			}

			return this;
		},

		clone: function( dataAndEvents, deepDataAndEvents ) {
			dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
			deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

			return this.map( function () {
				return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
			});
		},

		html: function( value ) {
			return jQuery.access( this, function( value ) {
				var elem = this[ 0 ] || {},
					i = 0,
					l = this.length;

				if ( value === undefined && elem.nodeType === 1 ) {
					return elem.innerHTML;
				}

				// See if we can take a shortcut and just use innerHTML
				if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
					!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

					value = value.replace( rxhtmlTag, "<$1></$2>" );

					try {
						for ( ; i < l; i++ ) {
							elem = this[ i ] || {};

							// Remove element nodes and prevent memory leaks
							if ( elem.nodeType === 1 ) {
								jQuery.cleanData( getAll( elem, false ) );
								elem.innerHTML = value;
							}
						}

						elem = 0;

					// If using innerHTML throws an exception, use the fallback method
					} catch( e ) {}
				}

				if ( elem ) {
					this.empty().append( value );
				}
			}, null, value, arguments.length );
		},

		replaceWith: function() {
			var
				// Snapshot the DOM in case .domManip sweeps something relevant into its fragment
				args = jQuery.map( this, function( elem ) {
					return [ elem.nextSibling, elem.parentNode ];
				}),
				i = 0;

			// Make the changes, replacing each context element with the new content
			this.domManip( arguments, function( elem ) {
				var next = args[ i++ ],
					parent = args[ i++ ];

				if ( parent ) {
					jQuery( this ).remove();
					parent.insertBefore( elem, next );
				}
			// Allow new content to include elements from the context set
			}, true );

			// Force removal if there was no new content (e.g., from empty arguments)
			return i ? this : this.remove();
		},

		detach: function( selector ) {
			return this.remove( selector, true );
		},

		domManip: function( args, callback, allowIntersection ) {

			// Flatten any nested arrays
			args = core_concat.apply( [], args );

			var fragment, first, scripts, hasScripts, node, doc,
				i = 0,
				l = this.length,
				set = this,
				iNoClone = l - 1,
				value = args[ 0 ],
				isFunction = jQuery.isFunction( value );

			// We can't cloneNode fragments that contain checked, in WebKit
			if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
				return this.each(function( index ) {
					var self = set.eq( index );
					if ( isFunction ) {
						args[ 0 ] = value.call( this, index, self.html() );
					}
					self.domManip( args, callback, allowIntersection );
				});
			}

			if ( l ) {
				fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );
				first = fragment.firstChild;

				if ( fragment.childNodes.length === 1 ) {
					fragment = first;
				}

				if ( first ) {
					scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
					hasScripts = scripts.length;

					// Use the original fragment for the last item instead of the first because it can end up
					// being emptied incorrectly in certain situations (#8070).
					for ( ; i < l; i++ ) {
						node = fragment;

						if ( i !== iNoClone ) {
							node = jQuery.clone( node, true, true );

							// Keep references to cloned scripts for later restoration
							if ( hasScripts ) {
								// Support: QtWebKit
								// jQuery.merge because core_push.apply(_, arraylike) throws
								jQuery.merge( scripts, getAll( node, "script" ) );
							}
						}

						callback.call( this[ i ], node, i );
					}

					if ( hasScripts ) {
						doc = scripts[ scripts.length - 1 ].ownerDocument;

						// Reenable scripts
						jQuery.map( scripts, restoreScript );

						// Evaluate executable scripts on first document insertion
						for ( i = 0; i < hasScripts; i++ ) {
							node = scripts[ i ];
							if ( rscriptType.test( node.type || "" ) &&
								!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

								if ( node.src ) {
									// Hope ajax is available...
									jQuery._evalUrl( node.src );
								} else {
									jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
								}
							}
						}
					}
				}
			}

			return this;
		}
	});

	jQuery.each({
		appendTo: "append",
		prependTo: "prepend",
		insertBefore: "before",
		insertAfter: "after",
		replaceAll: "replaceWith"
	}, function( name, original ) {
		jQuery.fn[ name ] = function( selector ) {
			var elems,
				ret = [],
				insert = jQuery( selector ),
				last = insert.length - 1,
				i = 0;

			for ( ; i <= last; i++ ) {
				elems = i === last ? this : this.clone( true );
				jQuery( insert[ i ] )[ original ]( elems );

				// Support: QtWebKit
				// .get() because core_push.apply(_, arraylike) throws
				core_push.apply( ret, elems.get() );
			}

			return this.pushStack( ret );
		};
	});

	jQuery.extend({
		clone: function( elem, dataAndEvents, deepDataAndEvents ) {
			var i, l, srcElements, destElements,
				clone = elem.cloneNode( true ),
				inPage = jQuery.contains( elem.ownerDocument, elem );

			// Support: IE >= 9
			// Fix Cloning issues
			if ( !jQuery.support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

				// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
				destElements = getAll( clone );
				srcElements = getAll( elem );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					fixInput( srcElements[ i ], destElements[ i ] );
				}
			}

			// Copy the events from the original to the clone
			if ( dataAndEvents ) {
				if ( deepDataAndEvents ) {
					srcElements = srcElements || getAll( elem );
					destElements = destElements || getAll( clone );

					for ( i = 0, l = srcElements.length; i < l; i++ ) {
						cloneCopyEvent( srcElements[ i ], destElements[ i ] );
					}
				} else {
					cloneCopyEvent( elem, clone );
				}
			}

			// Preserve script evaluation history
			destElements = getAll( clone, "script" );
			if ( destElements.length > 0 ) {
				setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
			}

			// Return the cloned set
			return clone;
		},

		buildFragment: function( elems, context, scripts, selection ) {
			var elem, tmp, tag, wrap, contains, j,
				i = 0,
				l = elems.length,
				fragment = context.createDocumentFragment(),
				nodes = [];

			for ( ; i < l; i++ ) {
				elem = elems[ i ];

				if ( elem || elem === 0 ) {

					// Add nodes directly
					if ( jQuery.type( elem ) === "object" ) {
						// Support: QtWebKit
						// jQuery.merge because core_push.apply(_, arraylike) throws
						jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

					// Convert non-html into a text node
					} else if ( !rhtml.test( elem ) ) {
						nodes.push( context.createTextNode( elem ) );

					// Convert html into DOM nodes
					} else {
						tmp = tmp || fragment.appendChild( context.createElement("div") );

						// Deserialize a standard representation
						tag = ( rtagName.exec( elem ) || ["", ""] )[ 1 ].toLowerCase();
						wrap = wrapMap[ tag ] || wrapMap._default;
						tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

						// Descend through wrappers to the right content
						j = wrap[ 0 ];
						while ( j-- ) {
							tmp = tmp.firstChild;
						}

						// Support: QtWebKit
						// jQuery.merge because core_push.apply(_, arraylike) throws
						jQuery.merge( nodes, tmp.childNodes );

						// Remember the top-level container
						tmp = fragment.firstChild;

						// Fixes #12346
						// Support: Webkit, IE
						tmp.textContent = "";
					}
				}
			}

			// Remove wrapper from fragment
			fragment.textContent = "";

			i = 0;
			while ( (elem = nodes[ i++ ]) ) {

				// #4087 - If origin and destination elements are the same, and this is
				// that element, do not do anything
				if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
					continue;
				}

				contains = jQuery.contains( elem.ownerDocument, elem );

				// Append to fragment
				tmp = getAll( fragment.appendChild( elem ), "script" );

				// Preserve script evaluation history
				if ( contains ) {
					setGlobalEval( tmp );
				}

				// Capture executables
				if ( scripts ) {
					j = 0;
					while ( (elem = tmp[ j++ ]) ) {
						if ( rscriptType.test( elem.type || "" ) ) {
							scripts.push( elem );
						}
					}
				}
			}

			return fragment;
		},

		cleanData: function( elems ) {
			var data, elem, type,
				l = elems.length,
				i = 0,
				special = jQuery.event.special;

			for ( ; i < l; i++ ) {
				elem = elems[ i ];

				if ( jQuery.acceptData( elem ) ) {

					data = data_priv.access( elem );

					if ( data ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
				}
				// Discard any remaining `private` and `user` data
				// One day we'll replace the dual arrays with a WeakMap and this won't be an issue.
				// (Splices the data objects out of the internal cache arrays)
				data_user.discard( elem );
				data_priv.discard( elem );
			}
		},

		_evalUrl: function( url ) {
			return jQuery.ajax({
				url: url,
				type: "GET",
				dataType: "text",
				async: false,
				global: false,
				success: jQuery.globalEval
			});
		}
	});

	// Support: 1.x compatibility
	// Manipulating tables requires a tbody
	function manipulationTarget( elem, content ) {
		return jQuery.nodeName( elem, "table" ) &&
			jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, "tr" ) ?

			elem.getElementsByTagName("tbody")[0] ||
				elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
			elem;
	}

	// Replace/restore the type attribute of script elements for safe DOM manipulation
	function disableScript( elem ) {
		elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
		return elem;
	}
	function restoreScript( elem ) {
		var match = rscriptTypeMasked.exec( elem.type );

		if ( match ) {
			elem.type = match[ 1 ];
		} else {
			elem.removeAttribute("type");
		}

		return elem;
	}

	// Mark scripts as having already been evaluated
	function setGlobalEval( elems, refElements ) {
		var l = elems.length,
			i = 0;

		for ( ; i < l; i++ ) {
			data_priv.set(
				elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
			);
		}
	}

	function cloneCopyEvent( src, dest ) {
		var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

		if ( dest.nodeType !== 1 ) {
			return;
		}

		// 1. Copy private data: events, handlers, etc.
		if ( data_priv.hasData( src ) ) {
			pdataOld = data_priv.access( src );
			pdataCur = jQuery.extend( {}, pdataOld );
			events = pdataOld.events;

			data_priv.set( dest, pdataCur );

			if ( events ) {
				delete pdataCur.handle;
				pdataCur.events = {};

				for ( type in events ) {
					for ( i = 0, l = events[ type ].length; i < l; i++ ) {
						jQuery.event.add( dest, type, events[ type ][ i ] );
					}
				}
			}
		}

		// 2. Copy user data
		if ( data_user.hasData( src ) ) {
			udataOld = data_user.access( src );
			udataCur = jQuery.extend( {}, udataOld );

			data_user.set( dest, udataCur );
		}
	}


	function getAll( context, tag ) {
		var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
				context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
				[];

		return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
			jQuery.merge( [ context ], ret ) :
			ret;
	}

	// Support: IE >= 9
	function fixInput( src, dest ) {
		var nodeName = dest.nodeName.toLowerCase();

		// Fails to persist the checked state of a cloned checkbox or radio button.
		if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
			dest.checked = src.checked;

		// Fails to return the selected option to the default selected state when cloning options
		} else if ( nodeName === "input" || nodeName === "textarea" ) {
			dest.defaultValue = src.defaultValue;
		}
	}
	jQuery.fn.extend({
		wrapAll: function( html ) {
			var wrap;

			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapAll( html.call(this, i) );
				});
			}

			if ( this[ 0 ] ) {

				// The elements to wrap the target around
				wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

				if ( this[ 0 ].parentNode ) {
					wrap.insertBefore( this[ 0 ] );
				}

				wrap.map(function() {
					var elem = this;

					while ( elem.firstElementChild ) {
						elem = elem.firstElementChild;
					}

					return elem;
				}).append( this );
			}

			return this;
		},

		wrapInner: function( html ) {
			if ( jQuery.isFunction( html ) ) {
				return this.each(function( i ) {
					jQuery( this ).wrapInner( html.call(this, i) );
				});
			}

			return this.each(function() {
				var self = jQuery( this ),
					contents = self.contents();

				if ( contents.length ) {
					contents.wrapAll( html );

				} else {
					self.append( html );
				}
			});
		},

		wrap: function( html ) {
			var isFunction = jQuery.isFunction( html );

			return this.each(function( i ) {
				jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
			});
		},

		unwrap: function() {
			return this.parent().each(function() {
				if ( !jQuery.nodeName( this, "body" ) ) {
					jQuery( this ).replaceWith( this.childNodes );
				}
			}).end();
		}
	});
	var curCSS, iframe,
		// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
		// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
		rdisplayswap = /^(none|table(?!-c[ea]).+)/,
		rmargin = /^margin/,
		rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
		rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
		rrelNum = new RegExp( "^([+-])=(" + core_pnum + ")", "i" ),
		elemdisplay = { BODY: "block" },

		cssShow = { position: "absolute", visibility: "hidden", display: "block" },
		cssNormalTransform = {
			letterSpacing: 0,
			fontWeight: 400
		},

		cssExpand = [ "Top", "Right", "Bottom", "Left" ],
		cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

	// return a css property mapped to a potentially vendor prefixed property
	function vendorPropName( style, name ) {

		// shortcut for names that are not vendor prefixed
		if ( name in style ) {
			return name;
		}

		// check for vendor prefixed names
		var capName = name.charAt(0).toUpperCase() + name.slice(1),
			origName = name,
			i = cssPrefixes.length;

		while ( i-- ) {
			name = cssPrefixes[ i ] + capName;
			if ( name in style ) {
				return name;
			}
		}

		return origName;
	}

	function isHidden( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	}

	// NOTE: we've included the "window" in window.getComputedStyle
	// because jsdom on node.js will break without it.
	function getStyles( elem ) {
		return window.getComputedStyle( elem, null );
	}

	function showHide( elements, show ) {
		var display, elem, hidden,
			values = [],
			index = 0,
			length = elements.length;

		for ( ; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}

			values[ index ] = data_priv.get( elem, "olddisplay" );
			display = elem.style.display;
			if ( show ) {
				// Reset the inline display of this element to learn if it is
				// being hidden by cascaded rules or not
				if ( !values[ index ] && display === "none" ) {
					elem.style.display = "";
				}

				// Set elements which have been overridden with display: none
				// in a stylesheet to whatever the default browser style is
				// for such an element
				if ( elem.style.display === "" && isHidden( elem ) ) {
					values[ index ] = data_priv.access( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
				}
			} else {

				if ( !values[ index ] ) {
					hidden = isHidden( elem );

					if ( display && display !== "none" || !hidden ) {
						data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css(elem, "display") );
					}
				}
			}
		}

		// Set the display of most of the elements in a second loop
		// to avoid the constant reflow
		for ( index = 0; index < length; index++ ) {
			elem = elements[ index ];
			if ( !elem.style ) {
				continue;
			}
			if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
				elem.style.display = show ? values[ index ] || "" : "none";
			}
		}

		return elements;
	}

	jQuery.fn.extend({
		css: function( name, value ) {
			return jQuery.access( this, function( elem, name, value ) {
				var styles, len,
					map = {},
					i = 0;

				if ( jQuery.isArray( name ) ) {
					styles = getStyles( elem );
					len = name.length;

					for ( ; i < len; i++ ) {
						map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
					}

					return map;
				}

				return value !== undefined ?
					jQuery.style( elem, name, value ) :
					jQuery.css( elem, name );
			}, name, value, arguments.length > 1 );
		},
		show: function() {
			return showHide( this, true );
		},
		hide: function() {
			return showHide( this );
		},
		toggle: function( state ) {
			var bool = typeof state === "boolean";

			return this.each(function() {
				if ( bool ? state : isHidden( this ) ) {
					jQuery( this ).show();
				} else {
					jQuery( this ).hide();
				}
			});
		}
	});

	jQuery.extend({
		// Add in style property hooks for overriding the default
		// behavior of getting and setting a style property
		cssHooks: {
			opacity: {
				get: function( elem, computed ) {
					if ( computed ) {
						// We should always get a number back from opacity
						var ret = curCSS( elem, "opacity" );
						return ret === "" ? "1" : ret;
					}
				}
			}
		},

		// Exclude the following css properties to add px
		cssNumber: {
			"columnCount": true,
			"fillOpacity": true,
			"fontWeight": true,
			"lineHeight": true,
			"opacity": true,
			"orphans": true,
			"widows": true,
			"zIndex": true,
			"zoom": true
		},

		// Add in properties whose names you wish to fix before
		// setting or getting the value
		cssProps: {
			// normalize float css property
			"float": "cssFloat"
		},

		// Get and set the style property on a DOM Node
		style: function( elem, name, value, extra ) {
			// Don't set styles on text and comment nodes
			if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
				return;
			}

			// Make sure that we're working with the right name
			var ret, type, hooks,
				origName = jQuery.camelCase( name ),
				style = elem.style;

			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

			// gets hook for the prefixed version
			// followed by the unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// Check if we're setting a value
			if ( value !== undefined ) {
				type = typeof value;

				// convert relative number strings (+= or -=) to relative numbers. #7345
				if ( type === "string" && (ret = rrelNum.exec( value )) ) {
					value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
					// Fixes bug #9237
					type = "number";
				}

				// Make sure that NaN and null values aren't set. See: #7116
				if ( value == null || type === "number" && isNaN( value ) ) {
					return;
				}

				// If a number was passed in, add 'px' to the (except for certain CSS properties)
				if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
					value += "px";
				}

				// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,
				// but it would mean to define eight (for every problematic property) identical functions
				if ( !jQuery.support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
					style[ name ] = "inherit";
				}

				// If a hook was provided, use that value, otherwise just set the specified value
				if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
					style[ name ] = value;
				}

			} else {
				// If a hook was provided get the non-computed value from there
				if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
					return ret;
				}

				// Otherwise just get the value from the style object
				return style[ name ];
			}
		},

		css: function( elem, name, extra, styles ) {
			var val, num, hooks,
				origName = jQuery.camelCase( name );

			// Make sure that we're working with the right name
			name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

			// gets hook for the prefixed version
			// followed by the unprefixed version
			hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

			// If a hook was provided get the computed value from there
			if ( hooks && "get" in hooks ) {
				val = hooks.get( elem, true, extra );
			}

			// Otherwise, if a way to get the computed value exists, use that
			if ( val === undefined ) {
				val = curCSS( elem, name, styles );
			}

			//convert "normal" to computed value
			if ( val === "normal" && name in cssNormalTransform ) {
				val = cssNormalTransform[ name ];
			}

			// Return, converting to number if forced or a qualifier was provided and val looks numeric
			if ( extra === "" || extra ) {
				num = parseFloat( val );
				return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
			}
			return val;
		}
	});

	curCSS = function( elem, name, _computed ) {
		var width, minWidth, maxWidth,
			computed = _computed || getStyles( elem ),

			// Support: IE9
			// getPropertyValue is only needed for .css('filter') in IE9, see #12537
			ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,
			style = elem.style;

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// Support: Safari 5.1
			// A tribute to the "awesome hack by Dean Edwards"
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		return ret;
	};


	function setPositiveNumber( elem, value, subtract ) {
		var matches = rnumsplit.exec( value );
		return matches ?
			// Guard against undefined "subtract", e.g., when used as in cssHooks
			Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
			value;
	}

	function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
		var i = extra === ( isBorderBox ? "border" : "content" ) ?
			// If we already have the right measurement, avoid augmentation
			4 :
			// Otherwise initialize for horizontal or vertical properties
			name === "width" ? 1 : 0,

			val = 0;

		for ( ; i < 4; i += 2 ) {
			// both box models exclude margin, so add it if we want it
			if ( extra === "margin" ) {
				val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
			}

			if ( isBorderBox ) {
				// border-box includes padding, so remove it if we want content
				if ( extra === "content" ) {
					val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
				}

				// at this point, extra isn't border nor margin, so remove border
				if ( extra !== "margin" ) {
					val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			} else {
				// at this point, extra isn't content, so add padding
				val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

				// at this point, extra isn't content nor padding, so add border
				if ( extra !== "padding" ) {
					val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
				}
			}
		}

		return val;
	}

	function getWidthOrHeight( elem, name, extra ) {

		// Start with offset property, which is equivalent to the border-box value
		var valueIsBorderBox = true,
			val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
			styles = getStyles( elem ),
			isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// some non-html elements return undefined for offsetWidth, so check for null/undefined
		// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
		// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
		if ( val <= 0 || val == null ) {
			// Fall back to computed then uncomputed css if necessary
			val = curCSS( elem, name, styles );
			if ( val < 0 || val == null ) {
				val = elem.style[ name ];
			}

			// Computed unit is not pixels. Stop here and return.
			if ( rnumnonpx.test(val) ) {
				return val;
			}

			// we need the check for style in case a browser which returns unreliable values
			// for getComputedStyle silently falls back to the reliable elem.style
			valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

			// Normalize "", auto, and prepare for extra
			val = parseFloat( val ) || 0;
		}

		// use the active box-sizing model to add/subtract irrelevant styles
		return ( val +
			augmentWidthOrHeight(
				elem,
				name,
				extra || ( isBorderBox ? "border" : "content" ),
				valueIsBorderBox,
				styles
			)
		) + "px";
	}

	// Try to determine the default display value of an element
	function css_defaultDisplay( nodeName ) {
		var doc = document,
			display = elemdisplay[ nodeName ];

		if ( !display ) {
			display = actualDisplay( nodeName, doc );

			// If the simple way fails, read from inside an iframe
			if ( display === "none" || !display ) {
				// Use the already-created iframe if possible
				iframe = ( iframe ||
					jQuery("<iframe frameborder='0' width='0' height='0'/>")
					.css( "cssText", "display:block !important" )
				).appendTo( doc.documentElement );

				// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
				doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;
				doc.write("<!doctype html><html><body>");
				doc.close();

				display = actualDisplay( nodeName, doc );
				iframe.detach();
			}

			// Store the correct default display
			elemdisplay[ nodeName ] = display;
		}

		return display;
	}

	// Called ONLY from within css_defaultDisplay
	function actualDisplay( name, doc ) {
		var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
			display = jQuery.css( elem[0], "display" );
		elem.remove();
		return display;
	}

	jQuery.each([ "height", "width" ], function( i, name ) {
		jQuery.cssHooks[ name ] = {
			get: function( elem, computed, extra ) {
				if ( computed ) {
					// certain elements can have dimension info if we invisibly show them
					// however, it must have a current display style that would benefit from this
					return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
						jQuery.swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						}) :
						getWidthOrHeight( elem, name, extra );
				}
			},

			set: function( elem, value, extra ) {
				var styles = extra && getStyles( elem );
				return setPositiveNumber( elem, value, extra ?
					augmentWidthOrHeight(
						elem,
						name,
						extra,
						jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
						styles
					) : 0
				);
			}
		};
	});

	// These hooks cannot be added until DOM ready because the support test
	// for it is not run until after DOM ready
	jQuery(function() {
		// Support: Android 2.3
		if ( !jQuery.support.reliableMarginRight ) {
			jQuery.cssHooks.marginRight = {
				get: function( elem, computed ) {
					if ( computed ) {
						// Support: Android 2.3
						// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
						// Work around by temporarily setting element display to inline-block
						return jQuery.swap( elem, { "display": "inline-block" },
							curCSS, [ elem, "marginRight" ] );
					}
				}
			};
		}

		// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
		// getComputedStyle returns percent when specified for top/left/bottom/right
		// rather than make the css module depend on the offset module, we just check for it here
		if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
			jQuery.each( [ "top", "left" ], function( i, prop ) {
				jQuery.cssHooks[ prop ] = {
					get: function( elem, computed ) {
						if ( computed ) {
							computed = curCSS( elem, prop );
							// if curCSS returns percentage, fallback to offset
							return rnumnonpx.test( computed ) ?
								jQuery( elem ).position()[ prop ] + "px" :
								computed;
						}
					}
				};
			});
		}

	});

	if ( jQuery.expr && jQuery.expr.filters ) {
		jQuery.expr.filters.hidden = function( elem ) {
			// Support: Opera <= 12.12
			// Opera reports offsetWidths and offsetHeights less than zero on some elements
			return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
		};

		jQuery.expr.filters.visible = function( elem ) {
			return !jQuery.expr.filters.hidden( elem );
		};
	}

	// These hooks are used by animate to expand properties
	jQuery.each({
		margin: "",
		padding: "",
		border: "Width"
	}, function( prefix, suffix ) {
		jQuery.cssHooks[ prefix + suffix ] = {
			expand: function( value ) {
				var i = 0,
					expanded = {},

					// assumes a single number if not a string
					parts = typeof value === "string" ? value.split(" ") : [ value ];

				for ( ; i < 4; i++ ) {
					expanded[ prefix + cssExpand[ i ] + suffix ] =
						parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
				}

				return expanded;
			}
		};

		if ( !rmargin.test( prefix ) ) {
			jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
		}
	});
	var r20 = /%20/g,
		rbracket = /\[\]$/,
		rCRLF = /\r?\n/g,
		rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
		rsubmittable = /^(?:input|select|textarea|keygen)/i;

	jQuery.fn.extend({
		serialize: function() {
			return jQuery.param( this.serializeArray() );
		},
		serializeArray: function() {
			return this.map(function(){
				// Can add propHook for "elements" to filter or add form elements
				var elements = jQuery.prop( this, "elements" );
				return elements ? jQuery.makeArray( elements ) : this;
			})
			.filter(function(){
				var type = this.type;
				// Use .is(":disabled") so that fieldset[disabled] works
				return this.name && !jQuery( this ).is( ":disabled" ) &&
					rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
					( this.checked || !manipulation_rcheckableType.test( type ) );
			})
			.map(function( i, elem ){
				var val = jQuery( this ).val();

				return val == null ?
					null :
					jQuery.isArray( val ) ?
						jQuery.map( val, function( val ){
							return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
						}) :
						{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
			}).get();
		}
	});

	//Serialize an array of form elements or a set of
	//key/values into a query string
	jQuery.param = function( a, traditional ) {
		var prefix,
			s = [],
			add = function( key, value ) {
				// If value is a function, invoke it and return its value
				value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
				s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
			};

		// Set traditional to true for jQuery <= 1.3.2 behavior.
		if ( traditional === undefined ) {
			traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
		}

		// If an array was passed in, assume that it is an array of form elements.
		if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
			// Serialize the form elements
			jQuery.each( a, function() {
				add( this.name, this.value );
			});

		} else {
			// If traditional, encode the "old" way (the way 1.3.2 or older
			// did it), otherwise encode params recursively.
			for ( prefix in a ) {
				buildParams( prefix, a[ prefix ], traditional, add );
			}
		}

		// Return the resulting serialization
		return s.join( "&" ).replace( r20, "+" );
	};

	function buildParams( prefix, obj, traditional, add ) {
		var name;

		if ( jQuery.isArray( obj ) ) {
			// Serialize array item.
			jQuery.each( obj, function( i, v ) {
				if ( traditional || rbracket.test( prefix ) ) {
					// Treat each array item as a scalar.
					add( prefix, v );

				} else {
					// Item is non-scalar (array or object), encode its numeric index.
					buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
				}
			});

		} else if ( !traditional && jQuery.type( obj ) === "object" ) {
			// Serialize object item.
			for ( name in obj ) {
				buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
			}

		} else {
			// Serialize scalar item.
			add( prefix, obj );
		}
	}
	jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
		"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
		"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	});

	jQuery.fn.extend({
		hover: function( fnOver, fnOut ) {
			return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
		},

		bind: function( types, data, fn ) {
			return this.on( types, null, data, fn );
		},
		unbind: function( types, fn ) {
			return this.off( types, null, fn );
		},

		delegate: function( selector, types, data, fn ) {
			return this.on( types, selector, data, fn );
		},
		undelegate: function( selector, types, fn ) {
			// ( namespace ) or ( selector, types [, fn] )
			return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
		}
	});
	var
		// Document location
		ajaxLocParts,
		ajaxLocation,

		ajax_nonce = jQuery.now(),

		ajax_rquery = /\?/,
		rhash = /#.*$/,
		rts = /([?&])_=[^&]*/,
		rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
		// #7653, #8125, #8152: local protocol detection
		rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
		rnoContent = /^(?:GET|HEAD)$/,
		rprotocol = /^\/\//,
		rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

		// Keep a copy of the old load method
		_load = jQuery.fn.load,

		/* Prefilters
		 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
		 * 2) These are called:
		 *    - BEFORE asking for a transport
		 *    - AFTER param serialization (s.data is a string if s.processData is true)
		 * 3) key is the dataType
		 * 4) the catchall symbol "*" can be used
		 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
		 */
		prefilters = {},

		/* Transports bindings
		 * 1) key is the dataType
		 * 2) the catchall symbol "*" can be used
		 * 3) selection will start with transport dataType and THEN go to "*" if needed
		 */
		transports = {},

		// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
		allTypes = "*/".concat("*");

	// #8138, IE may throw an exception when accessing
	// a field from window.location if document.domain has been set
	try {
		ajaxLocation = location.href;
	} catch( e ) {
		// Use the href attribute of an A element
		// since IE will modify it given document.location
		ajaxLocation = document.createElement( "a" );
		ajaxLocation.href = "";
		ajaxLocation = ajaxLocation.href;
	}

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

	// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
	function addToPrefiltersOrTransports( structure ) {

		// dataTypeExpression is optional and defaults to "*"
		return function( dataTypeExpression, func ) {

			if ( typeof dataTypeExpression !== "string" ) {
				func = dataTypeExpression;
				dataTypeExpression = "*";
			}

			var dataType,
				i = 0,
				dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];

			if ( jQuery.isFunction( func ) ) {
				// For each dataType in the dataTypeExpression
				while ( (dataType = dataTypes[i++]) ) {
					// Prepend if requested
					if ( dataType[0] === "+" ) {
						dataType = dataType.slice( 1 ) || "*";
						(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

					// Otherwise append
					} else {
						(structure[ dataType ] = structure[ dataType ] || []).push( func );
					}
				}
			}
		};
	}

	// Base inspection function for prefilters and transports
	function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

		var inspected = {},
			seekingTransport = ( structure === transports );

		function inspect( dataType ) {
			var selected;
			inspected[ dataType ] = true;
			jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
				var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
				if( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
					options.dataTypes.unshift( dataTypeOrTransport );
					inspect( dataTypeOrTransport );
					return false;
				} else if ( seekingTransport ) {
					return !( selected = dataTypeOrTransport );
				}
			});
			return selected;
		}

		return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
	}

	// A special extend for ajax options
	// that takes "flat" options (not to be deep extended)
	// Fixes #9887
	function ajaxExtend( target, src ) {
		var key, deep,
			flatOptions = jQuery.ajaxSettings.flatOptions || {};

		for ( key in src ) {
			if ( src[ key ] !== undefined ) {
				( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
			}
		}
		if ( deep ) {
			jQuery.extend( true, target, deep );
		}

		return target;
	}

	jQuery.fn.load = function( url, params, callback ) {
		if ( typeof url !== "string" && _load ) {
			return _load.apply( this, arguments );
		}

		var selector, type, response,
			self = this,
			off = url.indexOf(" ");

		if ( off >= 0 ) {
			selector = url.slice( off );
			url = url.slice( 0, off );
		}

		// If it's a function
		if ( jQuery.isFunction( params ) ) {

			// We assume that it's the callback
			callback = params;
			params = undefined;

		// Otherwise, build a param string
		} else if ( params && typeof params === "object" ) {
			type = "POST";
		}

		// If we have elements to modify, make the request
		if ( self.length > 0 ) {
			jQuery.ajax({
				url: url,

				// if "type" variable is undefined, then "GET" method will be used
				type: type,
				dataType: "html",
				data: params
			}).done(function( responseText ) {

				// Save response for use in complete callback
				response = arguments;

				self.html( selector ?

					// If a selector was specified, locate the right elements in a dummy div
					// Exclude scripts to avoid IE 'Permission Denied' errors
					jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

					// Otherwise use the full result
					responseText );

			}).complete( callback && function( jqXHR, status ) {
				self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
			});
		}

		return this;
	};

	// Attach a bunch of functions for handling common AJAX events
	jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
		jQuery.fn[ type ] = function( fn ){
			return this.on( type, fn );
		};
	});

	jQuery.extend({

		// Counter for holding the number of active queries
		active: 0,

		// Last-Modified header cache for next request
		lastModified: {},
		etag: {},

		ajaxSettings: {
			url: ajaxLocation,
			type: "GET",
			isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
			global: true,
			processData: true,
			async: true,
			contentType: "application/x-www-form-urlencoded; charset=UTF-8",
			/*
			timeout: 0,
			data: null,
			dataType: null,
			username: null,
			password: null,
			cache: null,
			throws: false,
			traditional: false,
			headers: {},
			*/

			accepts: {
				"*": allTypes,
				text: "text/plain",
				html: "text/html",
				xml: "application/xml, text/xml",
				json: "application/json, text/javascript"
			},

			contents: {
				xml: /xml/,
				html: /html/,
				json: /json/
			},

			responseFields: {
				xml: "responseXML",
				text: "responseText",
				json: "responseJSON"
			},

			// Data converters
			// Keys separate source (or catchall "*") and destination types with a single space
			converters: {

				// Convert anything to text
				"* text": String,

				// Text to html (true = no transformation)
				"text html": true,

				// Evaluate text as a json expression
				"text json": jQuery.parseJSON,

				// Parse text as xml
				"text xml": jQuery.parseXML
			},

			// For options that shouldn't be deep extended:
			// you can add your own custom options here if
			// and when you create one that shouldn't be
			// deep extended (see ajaxExtend)
			flatOptions: {
				url: true,
				context: true
			}
		},

		// Creates a full fledged settings object into target
		// with both ajaxSettings and settings fields.
		// If target is omitted, writes into ajaxSettings.
		ajaxSetup: function( target, settings ) {
			return settings ?

				// Building a settings object
				ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

				// Extending ajaxSettings
				ajaxExtend( jQuery.ajaxSettings, target );
		},

		ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
		ajaxTransport: addToPrefiltersOrTransports( transports ),

		// Main method
		ajax: function( url, options ) {

			// If url is an object, simulate pre-1.5 signature
			if ( typeof url === "object" ) {
				options = url;
				url = undefined;
			}

			// Force options to be an object
			options = options || {};

			var transport,
				// URL without anti-cache param
				cacheURL,
				// Response headers
				responseHeadersString,
				responseHeaders,
				// timeout handle
				timeoutTimer,
				// Cross-domain detection vars
				parts,
				// To know if global events are to be dispatched
				fireGlobals,
				// Loop variable
				i,
				// Create the final options object
				s = jQuery.ajaxSetup( {}, options ),
				// Callbacks context
				callbackContext = s.context || s,
				// Context for global events is callbackContext if it is a DOM node or jQuery collection
				globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,
				// Deferreds
				deferred = jQuery.Deferred(),
				completeDeferred = jQuery.Callbacks("once memory"),
				// Status-dependent callbacks
				statusCode = s.statusCode || {},
				// Headers (they are sent all at once)
				requestHeaders = {},
				requestHeadersNames = {},
				// The jqXHR state
				state = 0,
				// Default abort message
				strAbort = "canceled",
				// Fake xhr
				jqXHR = {
					readyState: 0,

					// Builds headers hashtable if needed
					getResponseHeader: function( key ) {
						var match;
						if ( state === 2 ) {
							if ( !responseHeaders ) {
								responseHeaders = {};
								while ( (match = rheaders.exec( responseHeadersString )) ) {
									responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
								}
							}
							match = responseHeaders[ key.toLowerCase() ];
						}
						return match == null ? null : match;
					},

					// Raw string
					getAllResponseHeaders: function() {
						return state === 2 ? responseHeadersString : null;
					},

					// Caches the header
					setRequestHeader: function( name, value ) {
						var lname = name.toLowerCase();
						if ( !state ) {
							name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
							requestHeaders[ name ] = value;
						}
						return this;
					},

					// Overrides response content-type header
					overrideMimeType: function( type ) {
						if ( !state ) {
							s.mimeType = type;
						}
						return this;
					},

					// Status-dependent callbacks
					statusCode: function( map ) {
						var code;
						if ( map ) {
							if ( state < 2 ) {
								for ( code in map ) {
									// Lazy-add the new callback in a way that preserves old ones
									statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
								}
							} else {
								// Execute the appropriate callbacks
								jqXHR.always( map[ jqXHR.status ] );
							}
						}
						return this;
					},

					// Cancel the request
					abort: function( statusText ) {
						var finalText = statusText || strAbort;
						if ( transport ) {
							transport.abort( finalText );
						}
						done( 0, finalText );
						return this;
					}
				};

			// Attach deferreds
			deferred.promise( jqXHR ).complete = completeDeferred.add;
			jqXHR.success = jqXHR.done;
			jqXHR.error = jqXHR.fail;

			// Remove hash character (#7531: and string promotion)
			// Add protocol if not provided (prefilters might expect it)
			// Handle falsy url in the settings object (#10093: consistency with old signature)
			// We also use the url parameter if available
			s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
				.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

			// Alias method option to type as per ticket #12004
			s.type = options.method || options.type || s.method || s.type;

			// Extract dataTypes list
			s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( core_rnotwhite ) || [""];

			// A cross-domain request is in order when we have a protocol:host:port mismatch
			if ( s.crossDomain == null ) {
				parts = rurl.exec( s.url.toLowerCase() );
				s.crossDomain = !!( parts &&
					( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
						( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
							( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
				);
			}

			// Convert data if not already a string
			if ( s.data && s.processData && typeof s.data !== "string" ) {
				s.data = jQuery.param( s.data, s.traditional );
			}

			// Apply prefilters
			inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

			// If request was aborted inside a prefilter, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// We can fire global events as of now if asked to
			fireGlobals = s.global;

			// Watch for a new set of requests
			if ( fireGlobals && jQuery.active++ === 0 ) {
				jQuery.event.trigger("ajaxStart");
			}

			// Uppercase the type
			s.type = s.type.toUpperCase();

			// Determine if request has content
			s.hasContent = !rnoContent.test( s.type );

			// Save the URL in case we're toying with the If-Modified-Since
			// and/or If-None-Match header later on
			cacheURL = s.url;

			// More options handling for requests with no content
			if ( !s.hasContent ) {

				// If data is available, append data to url
				if ( s.data ) {
					cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
					// #9682: remove data so that it's not used in an eventual retry
					delete s.data;
				}

				// Add anti-cache in url if needed
				if ( s.cache === false ) {
					s.url = rts.test( cacheURL ) ?

						// If there is already a '_' parameter, set its value
						cacheURL.replace( rts, "$1_=" + ajax_nonce++ ) :

						// Otherwise add one to the end
						cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
				}
			}

			// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
			if ( s.ifModified ) {
				if ( jQuery.lastModified[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
				}
				if ( jQuery.etag[ cacheURL ] ) {
					jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
				}
			}

			// Set the correct header, if data is being sent
			if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
				jqXHR.setRequestHeader( "Content-Type", s.contentType );
			}

			// Set the Accepts header for the server, depending on the dataType
			jqXHR.setRequestHeader(
				"Accept",
				s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
					s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
					s.accepts[ "*" ]
			);

			// Check for headers option
			for ( i in s.headers ) {
				jqXHR.setRequestHeader( i, s.headers[ i ] );
			}

			// Allow custom headers/mimetypes and early abort
			if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
				// Abort if not done already and return
				return jqXHR.abort();
			}

			// aborting is no longer a cancellation
			strAbort = "abort";

			// Install callbacks on deferreds
			for ( i in { success: 1, error: 1, complete: 1 } ) {
				jqXHR[ i ]( s[ i ] );
			}

			// Get transport
			transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

			// If no transport, we auto-abort
			if ( !transport ) {
				done( -1, "No Transport" );
			} else {
				jqXHR.readyState = 1;

				// Send global event
				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
				}
				// Timeout
				if ( s.async && s.timeout > 0 ) {
					timeoutTimer = setTimeout(function() {
						jqXHR.abort("timeout");
					}, s.timeout );
				}

				try {
					state = 1;
					transport.send( requestHeaders, done );
				} catch ( e ) {
					// Propagate exception as error if not done
					if ( state < 2 ) {
						done( -1, e );
					// Simply rethrow otherwise
					} else {
						throw e;
					}
				}
			}

			// Callback for when everything is done
			function done( status, nativeStatusText, responses, headers ) {
				var isSuccess, success, error, response, modified,
					statusText = nativeStatusText;

				// Called once
				if ( state === 2 ) {
					return;
				}

				// State is "done" now
				state = 2;

				// Clear timeout if it exists
				if ( timeoutTimer ) {
					clearTimeout( timeoutTimer );
				}

				// Dereference transport for early garbage collection
				// (no matter how long the jqXHR object will be used)
				transport = undefined;

				// Cache response headers
				responseHeadersString = headers || "";

				// Set readyState
				jqXHR.readyState = status > 0 ? 4 : 0;

				// Determine if successful
				isSuccess = status >= 200 && status < 300 || status === 304;

				// Get response data
				if ( responses ) {
					response = ajaxHandleResponses( s, jqXHR, responses );
				}

				// Convert no matter what (that way responseXXX fields are always set)
				response = ajaxConvert( s, response, jqXHR, isSuccess );

				// If successful, handle type chaining
				if ( isSuccess ) {

					// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
					if ( s.ifModified ) {
						modified = jqXHR.getResponseHeader("Last-Modified");
						if ( modified ) {
							jQuery.lastModified[ cacheURL ] = modified;
						}
						modified = jqXHR.getResponseHeader("etag");
						if ( modified ) {
							jQuery.etag[ cacheURL ] = modified;
						}
					}

					// if no content
					if ( status === 204 ) {
						statusText = "nocontent";

					// if not modified
					} else if ( status === 304 ) {
						statusText = "notmodified";

					// If we have data, let's convert it
					} else {
						statusText = response.state;
						success = response.data;
						error = response.error;
						isSuccess = !error;
					}
				} else {
					// We extract error from statusText
					// then normalize statusText and status for non-aborts
					error = statusText;
					if ( status || !statusText ) {
						statusText = "error";
						if ( status < 0 ) {
							status = 0;
						}
					}
				}

				// Set data for the fake xhr object
				jqXHR.status = status;
				jqXHR.statusText = ( nativeStatusText || statusText ) + "";

				// Success/Error
				if ( isSuccess ) {
					deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
				} else {
					deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
				}

				// Status-dependent callbacks
				jqXHR.statusCode( statusCode );
				statusCode = undefined;

				if ( fireGlobals ) {
					globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
						[ jqXHR, s, isSuccess ? success : error ] );
				}

				// Complete
				completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

				if ( fireGlobals ) {
					globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
					// Handle the global AJAX counter
					if ( !( --jQuery.active ) ) {
						jQuery.event.trigger("ajaxStop");
					}
				}
			}

			return jqXHR;
		},

		getJSON: function( url, data, callback ) {
			return jQuery.get( url, data, callback, "json" );
		},

		getScript: function( url, callback ) {
			return jQuery.get( url, undefined, callback, "script" );
		}
	});

	jQuery.each( [ "get", "post" ], function( i, method ) {
		jQuery[ method ] = function( url, data, callback, type ) {
			// shift arguments if data argument was omitted
			if ( jQuery.isFunction( data ) ) {
				type = type || callback;
				callback = data;
				data = undefined;
			}

			return jQuery.ajax({
				url: url,
				type: method,
				dataType: type,
				data: data,
				success: callback
			});
		};
	});

	/* Handles responses to an ajax request:
	 * - finds the right dataType (mediates between content-type and expected dataType)
	 * - returns the corresponding response
	 */
	function ajaxHandleResponses( s, jqXHR, responses ) {

		var ct, type, finalDataType, firstDataType,
			contents = s.contents,
			dataTypes = s.dataTypes;

		// Remove auto dataType and get content-type in the process
		while( dataTypes[ 0 ] === "*" ) {
			dataTypes.shift();
			if ( ct === undefined ) {
				ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
			}
		}

		// Check if we're dealing with a known content-type
		if ( ct ) {
			for ( type in contents ) {
				if ( contents[ type ] && contents[ type ].test( ct ) ) {
					dataTypes.unshift( type );
					break;
				}
			}
		}

		// Check to see if we have a response for the expected dataType
		if ( dataTypes[ 0 ] in responses ) {
			finalDataType = dataTypes[ 0 ];
		} else {
			// Try convertible dataTypes
			for ( type in responses ) {
				if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
					finalDataType = type;
					break;
				}
				if ( !firstDataType ) {
					firstDataType = type;
				}
			}
			// Or just use first one
			finalDataType = finalDataType || firstDataType;
		}

		// If we found a dataType
		// We add the dataType to the list if needed
		// and return the corresponding response
		if ( finalDataType ) {
			if ( finalDataType !== dataTypes[ 0 ] ) {
				dataTypes.unshift( finalDataType );
			}
			return responses[ finalDataType ];
		}
	}

	/* Chain conversions given the request and the original response
	 * Also sets the responseXXX fields on the jqXHR instance
	 */
	function ajaxConvert( s, response, jqXHR, isSuccess ) {
		var conv2, current, conv, tmp, prev,
			converters = {},
			// Work with a copy of dataTypes in case we need to modify it for conversion
			dataTypes = s.dataTypes.slice();

		// Create converters map with lowercased keys
		if ( dataTypes[ 1 ] ) {
			for ( conv in s.converters ) {
				converters[ conv.toLowerCase() ] = s.converters[ conv ];
			}
		}

		current = dataTypes.shift();

		// Convert to each sequential dataType
		while ( current ) {

			if ( s.responseFields[ current ] ) {
				jqXHR[ s.responseFields[ current ] ] = response;
			}

			// Apply the dataFilter if provided
			if ( !prev && isSuccess && s.dataFilter ) {
				response = s.dataFilter( response, s.dataType );
			}

			prev = current;
			current = dataTypes.shift();

			if ( current ) {

			// There's only work to do if current dataType is non-auto
				if ( current === "*" ) {

					current = prev;

				// Convert response if prev dataType is non-auto and differs from current
				} else if ( prev !== "*" && prev !== current ) {

					// Seek a direct converter
					conv = converters[ prev + " " + current ] || converters[ "* " + current ];

					// If none found, seek a pair
					if ( !conv ) {
						for ( conv2 in converters ) {

							// If conv2 outputs current
							tmp = conv2.split( " " );
							if ( tmp[ 1 ] === current ) {

								// If prev can be converted to accepted input
								conv = converters[ prev + " " + tmp[ 0 ] ] ||
									converters[ "* " + tmp[ 0 ] ];
								if ( conv ) {
									// Condense equivalence converters
									if ( conv === true ) {
										conv = converters[ conv2 ];

									// Otherwise, insert the intermediate dataType
									} else if ( converters[ conv2 ] !== true ) {
										current = tmp[ 0 ];
										dataTypes.unshift( tmp[ 1 ] );
									}
									break;
								}
							}
						}
					}

					// Apply converter (if not an equivalence)
					if ( conv !== true ) {

						// Unless errors are allowed to bubble, catch and return them
						if ( conv && s[ "throws" ] ) {
							response = conv( response );
						} else {
							try {
								response = conv( response );
							} catch ( e ) {
								return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
							}
						}
					}
				}
			}
		}

		return { state: "success", data: response };
	}
	// Install script dataType
	jQuery.ajaxSetup({
		accepts: {
			script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
		},
		contents: {
			script: /(?:java|ecma)script/
		},
		converters: {
			"text script": function( text ) {
				jQuery.globalEval( text );
				return text;
			}
		}
	});

	// Handle cache's special case and crossDomain
	jQuery.ajaxPrefilter( "script", function( s ) {
		if ( s.cache === undefined ) {
			s.cache = false;
		}
		if ( s.crossDomain ) {
			s.type = "GET";
		}
	});

	// Bind script tag hack transport
	jQuery.ajaxTransport( "script", function( s ) {
		// This transport only deals with cross domain requests
		if ( s.crossDomain ) {
			var script, callback;
			return {
				send: function( _, complete ) {
					script = jQuery("<script>").prop({
						async: true,
						charset: s.scriptCharset,
						src: s.url
					}).on(
						"load error",
						callback = function( evt ) {
							script.remove();
							callback = null;
							if ( evt ) {
								complete( evt.type === "error" ? 404 : 200, evt.type );
							}
						}
					);
					document.head.appendChild( script[ 0 ] );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});
	var oldCallbacks = [],
		rjsonp = /(=)\?(?=&|$)|\?\?/;

	// Default jsonp settings
	jQuery.ajaxSetup({
		jsonp: "callback",
		jsonpCallback: function() {
			var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( ajax_nonce++ ) );
			this[ callback ] = true;
			return callback;
		}
	});

	// Detect, normalize options and install callbacks for jsonp requests
	jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

		var callbackName, overwritten, responseContainer,
			jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
				"url" :
				typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
			);

		// Handle iff the expected data type is "jsonp" or we have a parameter to set
		if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

			// Get callback name, remembering preexisting value associated with it
			callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
				s.jsonpCallback() :
				s.jsonpCallback;

			// Insert callback into url or form data
			if ( jsonProp ) {
				s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
			} else if ( s.jsonp !== false ) {
				s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
			}

			// Use data converter to retrieve json after script execution
			s.converters["script json"] = function() {
				if ( !responseContainer ) {
					jQuery.error( callbackName + " was not called" );
				}
				return responseContainer[ 0 ];
			};

			// force json dataType
			s.dataTypes[ 0 ] = "json";

			// Install callback
			overwritten = window[ callbackName ];
			window[ callbackName ] = function() {
				responseContainer = arguments;
			};

			// Clean-up function (fires after converters)
			jqXHR.always(function() {
				// Restore preexisting value
				window[ callbackName ] = overwritten;

				// Save back as free
				if ( s[ callbackName ] ) {
					// make sure that re-using the options doesn't screw things around
					s.jsonpCallback = originalSettings.jsonpCallback;

					// save the callback name for future use
					oldCallbacks.push( callbackName );
				}

				// Call if it was a function and we have a response
				if ( responseContainer && jQuery.isFunction( overwritten ) ) {
					overwritten( responseContainer[ 0 ] );
				}

				responseContainer = overwritten = undefined;
			});

			// Delegate to script
			return "script";
		}
	});
	jQuery.ajaxSettings.xhr = function() {
		try {
			return new XMLHttpRequest();
		} catch( e ) {}
	};

	var xhrSupported = jQuery.ajaxSettings.xhr(),
		xhrSuccessStatus = {
			// file protocol always yields status code 0, assume 200
			0: 200,
			// Support: IE9
			// #1450: sometimes IE returns 1223 when it should be 204
			1223: 204
		},
		// Support: IE9
		// We need to keep track of outbound xhr and abort them manually
		// because IE is not smart enough to do it all by itself
		xhrId = 0,
		xhrCallbacks = {};

	if ( window.ActiveXObject ) {
		jQuery( window ).on( "unload", function() {
			for( var key in xhrCallbacks ) {
				xhrCallbacks[ key ]();
			}
			xhrCallbacks = undefined;
		});
	}

	jQuery.support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
	jQuery.support.ajax = xhrSupported = !!xhrSupported;

	jQuery.ajaxTransport(function( options ) {
		var callback;
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( jQuery.support.cors || xhrSupported && !options.crossDomain ) {
			return {
				send: function( headers, complete ) {
					var i, id,
						xhr = options.xhr();
					xhr.open( options.type, options.url, options.async, options.username, options.password );
					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}
					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}
					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}
					// Set headers
					for ( i in headers ) {
						xhr.setRequestHeader( i, headers[ i ] );
					}
					// Callback
					callback = function( type ) {
						return function() {
							if ( callback ) {
								delete xhrCallbacks[ id ];
								callback = xhr.onload = xhr.onerror = null;
								if ( type === "abort" ) {
									xhr.abort();
								} else if ( type === "error" ) {
									complete(
										// file protocol always yields status 0, assume 404
										xhr.status || 404,
										xhr.statusText
									);
								} else {
									complete(
										xhrSuccessStatus[ xhr.status ] || xhr.status,
										xhr.statusText,
										// Support: IE9
										// #11426: When requesting binary data, IE9 will throw an exception
										// on any attempt to access responseText
										typeof xhr.responseText === "string" ? {
											text: xhr.responseText
										} : undefined,
										xhr.getAllResponseHeaders()
									);
								}
							}
						};
					};
					// Listen to events
					xhr.onload = callback();
					xhr.onerror = callback("error");
					// Create the abort callback
					callback = xhrCallbacks[( id = xhrId++ )] = callback("abort");
					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( options.hasContent && options.data || null );
				},
				abort: function() {
					if ( callback ) {
						callback();
					}
				}
			};
		}
	});
	var fxNow, timerId,
		rfxtypes = /^(?:toggle|show|hide)$/,
		rfxnum = new RegExp( "^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
		rrun = /queueHooks$/,
		animationPrefilters = [ defaultPrefilter ],
		tweeners = {
			"*": [function( prop, value ) {
				var end, unit,
					tween = this.createTween( prop, value ),
					parts = rfxnum.exec( value ),
					target = tween.cur(),
					start = +target || 0,
					scale = 1,
					maxIterations = 20;

				if ( parts ) {
					end = +parts[2];
					unit = parts[3] || ( jQuery.cssNumber[ prop ] ? "" : "px" );

					// We need to compute starting value
					if ( unit !== "px" && start ) {
						// Iteratively approximate from a nonzero starting point
						// Prefer the current property, because this process will be trivial if it uses the same units
						// Fallback to end or a simple constant
						start = jQuery.css( tween.elem, prop, true ) || end || 1;

						do {
							// If previous iteration zeroed out, double until we get *something*
							// Use a string for doubling factor so we don't accidentally see scale as unchanged below
							scale = scale || ".5";

							// Adjust and apply
							start = start / scale;
							jQuery.style( tween.elem, prop, start + unit );

						// Update scale, tolerating zero or NaN from tween.cur()
						// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
						} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
					}

					tween.unit = unit;
					tween.start = start;
					// If a +=/-= token was provided, we're doing a relative animation
					tween.end = parts[1] ? start + ( parts[1] + 1 ) * end : end;
				}
				return tween;
			}]
		};

	// Animations created synchronously will run synchronously
	function createFxNow() {
		setTimeout(function() {
			fxNow = undefined;
		});
		return ( fxNow = jQuery.now() );
	}

	function createTweens( animation, props ) {
		jQuery.each( props, function( prop, value ) {
			var collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
				index = 0,
				length = collection.length;
			for ( ; index < length; index++ ) {
				if ( collection[ index ].call( animation, prop, value ) ) {

					// we're done with this property
					return;
				}
			}
		});
	}

	function Animation( elem, properties, options ) {
		var result,
			stopped,
			index = 0,
			length = animationPrefilters.length,
			deferred = jQuery.Deferred().always( function() {
				// don't match elem in the :animated selector
				delete tick.elem;
			}),
			tick = function() {
				if ( stopped ) {
					return false;
				}
				var currentTime = fxNow || createFxNow(),
					remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
					// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
					temp = remaining / animation.duration || 0,
					percent = 1 - temp,
					index = 0,
					length = animation.tweens.length;

				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( percent );
				}

				deferred.notifyWith( elem, [ animation, percent, remaining ]);

				if ( percent < 1 && length ) {
					return remaining;
				} else {
					deferred.resolveWith( elem, [ animation ] );
					return false;
				}
			},
			animation = deferred.promise({
				elem: elem,
				props: jQuery.extend( {}, properties ),
				opts: jQuery.extend( true, { specialEasing: {} }, options ),
				originalProperties: properties,
				originalOptions: options,
				startTime: fxNow || createFxNow(),
				duration: options.duration,
				tweens: [],
				createTween: function( prop, end ) {
					var tween = jQuery.Tween( elem, animation.opts, prop, end,
							animation.opts.specialEasing[ prop ] || animation.opts.easing );
					animation.tweens.push( tween );
					return tween;
				},
				stop: function( gotoEnd ) {
					var index = 0,
						// if we are going to the end, we want to run all the tweens
						// otherwise we skip this part
						length = gotoEnd ? animation.tweens.length : 0;
					if ( stopped ) {
						return this;
					}
					stopped = true;
					for ( ; index < length ; index++ ) {
						animation.tweens[ index ].run( 1 );
					}

					// resolve when we played the last frame
					// otherwise, reject
					if ( gotoEnd ) {
						deferred.resolveWith( elem, [ animation, gotoEnd ] );
					} else {
						deferred.rejectWith( elem, [ animation, gotoEnd ] );
					}
					return this;
				}
			}),
			props = animation.props;

		propFilter( props, animation.opts.specialEasing );

		for ( ; index < length ; index++ ) {
			result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
			if ( result ) {
				return result;
			}
		}

		createTweens( animation, props );

		if ( jQuery.isFunction( animation.opts.start ) ) {
			animation.opts.start.call( elem, animation );
		}

		jQuery.fx.timer(
			jQuery.extend( tick, {
				elem: elem,
				anim: animation,
				queue: animation.opts.queue
			})
		);

		// attach callbacks from options
		return animation.progress( animation.opts.progress )
			.done( animation.opts.done, animation.opts.complete )
			.fail( animation.opts.fail )
			.always( animation.opts.always );
	}

	function propFilter( props, specialEasing ) {
		var index, name, easing, value, hooks;

		// camelCase, specialEasing and expand cssHook pass
		for ( index in props ) {
			name = jQuery.camelCase( index );
			easing = specialEasing[ name ];
			value = props[ index ];
			if ( jQuery.isArray( value ) ) {
				easing = value[ 1 ];
				value = props[ index ] = value[ 0 ];
			}

			if ( index !== name ) {
				props[ name ] = value;
				delete props[ index ];
			}

			hooks = jQuery.cssHooks[ name ];
			if ( hooks && "expand" in hooks ) {
				value = hooks.expand( value );
				delete props[ name ];

				// not quite $.extend, this wont overwrite keys already present.
				// also - reusing 'index' from above because we have the correct "name"
				for ( index in value ) {
					if ( !( index in props ) ) {
						props[ index ] = value[ index ];
						specialEasing[ index ] = easing;
					}
				}
			} else {
				specialEasing[ name ] = easing;
			}
		}
	}

	jQuery.Animation = jQuery.extend( Animation, {

		tweener: function( props, callback ) {
			if ( jQuery.isFunction( props ) ) {
				callback = props;
				props = [ "*" ];
			} else {
				props = props.split(" ");
			}

			var prop,
				index = 0,
				length = props.length;

			for ( ; index < length ; index++ ) {
				prop = props[ index ];
				tweeners[ prop ] = tweeners[ prop ] || [];
				tweeners[ prop ].unshift( callback );
			}
		},

		prefilter: function( callback, prepend ) {
			if ( prepend ) {
				animationPrefilters.unshift( callback );
			} else {
				animationPrefilters.push( callback );
			}
		}
	});

	function defaultPrefilter( elem, props, opts ) {
		/* jshint validthis: true */
		var index, prop, value, length, dataShow, toggle, tween, hooks, oldfire,
			anim = this,
			style = elem.style,
			orig = {},
			handled = [],
			hidden = elem.nodeType && isHidden( elem );

		// handle queue: false promises
		if ( !opts.queue ) {
			hooks = jQuery._queueHooks( elem, "fx" );
			if ( hooks.unqueued == null ) {
				hooks.unqueued = 0;
				oldfire = hooks.empty.fire;
				hooks.empty.fire = function() {
					if ( !hooks.unqueued ) {
						oldfire();
					}
				};
			}
			hooks.unqueued++;

			anim.always(function() {
				// doing this makes sure that the complete handler will be called
				// before this completes
				anim.always(function() {
					hooks.unqueued--;
					if ( !jQuery.queue( elem, "fx" ).length ) {
						hooks.empty.fire();
					}
				});
			});
		}

		// height/width overflow pass
		if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
			// Make sure that nothing sneaks out
			// Record all 3 overflow attributes because IE9-10 do not
			// change the overflow attribute when overflowX and
			// overflowY are set to the same value
			opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

			// Set display property to inline-block for height/width
			// animations on inline elements that are having width/height animated
			if ( jQuery.css( elem, "display" ) === "inline" &&
					jQuery.css( elem, "float" ) === "none" ) {

				style.display = "inline-block";
			}
		}

		if ( opts.overflow ) {
			style.overflow = "hidden";
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}


		// show/hide pass
		dataShow = data_priv.get( elem, "fxshow" );
		for ( index in props ) {
			value = props[ index ];
			if ( rfxtypes.exec( value ) ) {
				delete props[ index ];
				toggle = toggle || value === "toggle";
				if ( value === ( hidden ? "hide" : "show" ) ) {

					// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
					if( value === "show" && dataShow !== undefined && dataShow[ index ] !== undefined ) {
						hidden = true;
					} else {
						continue;
					}
				}
				handled.push( index );
			}
		}

		length = handled.length;
		if ( length ) {
			dataShow = data_priv.get( elem, "fxshow" ) || data_priv.access( elem, "fxshow", {} );
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}

			// store state if its toggle - enables .stop().toggle() to "reverse"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}
			if ( hidden ) {
				jQuery( elem ).show();
			} else {
				anim.done(function() {
					jQuery( elem ).hide();
				});
			}
			anim.done(function() {
				var prop;

				data_priv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			});
			for ( index = 0 ; index < length ; index++ ) {
				prop = handled[ index ];
				tween = anim.createTween( prop, hidden ? dataShow[ prop ] : 0 );
				orig[ prop ] = dataShow[ prop ] || jQuery.style( elem, prop );

				if ( !( prop in dataShow ) ) {
					dataShow[ prop ] = tween.start;
					if ( hidden ) {
						tween.end = tween.start;
						tween.start = prop === "width" || prop === "height" ? 1 : 0;
					}
				}
			}
		}
	}

	function Tween( elem, options, prop, end, easing ) {
		return new Tween.prototype.init( elem, options, prop, end, easing );
	}
	jQuery.Tween = Tween;

	Tween.prototype = {
		constructor: Tween,
		init: function( elem, options, prop, end, easing, unit ) {
			this.elem = elem;
			this.prop = prop;
			this.easing = easing || "swing";
			this.options = options;
			this.start = this.now = this.cur();
			this.end = end;
			this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
		},
		cur: function() {
			var hooks = Tween.propHooks[ this.prop ];

			return hooks && hooks.get ?
				hooks.get( this ) :
				Tween.propHooks._default.get( this );
		},
		run: function( percent ) {
			var eased,
				hooks = Tween.propHooks[ this.prop ];

			if ( this.options.duration ) {
				this.pos = eased = jQuery.easing[ this.easing ](
					percent, this.options.duration * percent, 0, 1, this.options.duration
				);
			} else {
				this.pos = eased = percent;
			}
			this.now = ( this.end - this.start ) * eased + this.start;

			if ( this.options.step ) {
				this.options.step.call( this.elem, this.now, this );
			}

			if ( hooks && hooks.set ) {
				hooks.set( this );
			} else {
				Tween.propHooks._default.set( this );
			}
			return this;
		}
	};

	Tween.prototype.init.prototype = Tween.prototype;

	Tween.propHooks = {
		_default: {
			get: function( tween ) {
				var result;

				if ( tween.elem[ tween.prop ] != null &&
					(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
					return tween.elem[ tween.prop ];
				}

				// passing an empty string as a 3rd parameter to .css will automatically
				// attempt a parseFloat and fallback to a string if the parse fails
				// so, simple values such as "10px" are parsed to Float.
				// complex values such as "rotate(1rad)" are returned as is.
				result = jQuery.css( tween.elem, tween.prop, "" );
				// Empty strings, null, undefined and "auto" are converted to 0.
				return !result || result === "auto" ? 0 : result;
			},
			set: function( tween ) {
				// use step hook for back compat - use cssHook if its there - use .style if its
				// available and use plain properties where available
				if ( jQuery.fx.step[ tween.prop ] ) {
					jQuery.fx.step[ tween.prop ]( tween );
				} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
					jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
				} else {
					tween.elem[ tween.prop ] = tween.now;
				}
			}
		}
	};

	// Support: IE9
	// Panic based approach to setting things on disconnected nodes

	Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
		set: function( tween ) {
			if ( tween.elem.nodeType && tween.elem.parentNode ) {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	};

	jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
		var cssFn = jQuery.fn[ name ];
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return speed == null || typeof speed === "boolean" ?
				cssFn.apply( this, arguments ) :
				this.animate( genFx( name, true ), speed, easing, callback );
		};
	});

	jQuery.fn.extend({
		fadeTo: function( speed, to, easing, callback ) {

			// show any hidden elements after setting opacity to 0
			return this.filter( isHidden ).css( "opacity", 0 ).show()

				// animate to the value specified
				.end().animate({ opacity: to }, speed, easing, callback );
		},
		animate: function( prop, speed, easing, callback ) {
			var empty = jQuery.isEmptyObject( prop ),
				optall = jQuery.speed( speed, easing, callback ),
				doAnimation = function() {
					// Operate on a copy of prop so per-property easing won't be lost
					var anim = Animation( this, jQuery.extend( {}, prop ), optall );
					doAnimation.finish = function() {
						anim.stop( true );
					};
					// Empty animations, or finishing resolves immediately
					if ( empty || data_priv.get( this, "finish" ) ) {
						anim.stop( true );
					}
				};
				doAnimation.finish = doAnimation;

			return empty || optall.queue === false ?
				this.each( doAnimation ) :
				this.queue( optall.queue, doAnimation );
		},
		stop: function( type, clearQueue, gotoEnd ) {
			var stopQueue = function( hooks ) {
				var stop = hooks.stop;
				delete hooks.stop;
				stop( gotoEnd );
			};

			if ( typeof type !== "string" ) {
				gotoEnd = clearQueue;
				clearQueue = type;
				type = undefined;
			}
			if ( clearQueue && type !== false ) {
				this.queue( type || "fx", [] );
			}

			return this.each(function() {
				var dequeue = true,
					index = type != null && type + "queueHooks",
					timers = jQuery.timers,
					data = data_priv.get( this );

				if ( index ) {
					if ( data[ index ] && data[ index ].stop ) {
						stopQueue( data[ index ] );
					}
				} else {
					for ( index in data ) {
						if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
							stopQueue( data[ index ] );
						}
					}
				}

				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
						timers[ index ].anim.stop( gotoEnd );
						dequeue = false;
						timers.splice( index, 1 );
					}
				}

				// start the next in the queue if the last step wasn't forced
				// timers currently will call their complete callbacks, which will dequeue
				// but only if they were gotoEnd
				if ( dequeue || !gotoEnd ) {
					jQuery.dequeue( this, type );
				}
			});
		},
		finish: function( type ) {
			if ( type !== false ) {
				type = type || "fx";
			}
			return this.each(function() {
				var index,
					data = data_priv.get( this ),
					queue = data[ type + "queue" ],
					hooks = data[ type + "queueHooks" ],
					timers = jQuery.timers,
					length = queue ? queue.length : 0;

				// enable finishing flag on private data
				data.finish = true;

				// empty the queue first
				jQuery.queue( this, type, [] );

				if ( hooks && hooks.cur && hooks.cur.finish ) {
					hooks.cur.finish.call( this );
				}

				// look for any active animations, and finish them
				for ( index = timers.length; index--; ) {
					if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
						timers[ index ].anim.stop( true );
						timers.splice( index, 1 );
					}
				}

				// look for any animations in the old queue and finish them
				for ( index = 0; index < length; index++ ) {
					if ( queue[ index ] && queue[ index ].finish ) {
						queue[ index ].finish.call( this );
					}
				}

				// turn off finishing flag
				delete data.finish;
			});
		}
	});

	// Generate parameters to create a standard animation
	function genFx( type, includeWidth ) {
		var which,
			attrs = { height: type },
			i = 0;

		// if we include width, step value is 1 to do all cssExpand values,
		// if we don't include width, step value is 2 to skip over Left and Right
		includeWidth = includeWidth? 1 : 0;
		for( ; i < 4 ; i += 2 - includeWidth ) {
			which = cssExpand[ i ];
			attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
		}

		if ( includeWidth ) {
			attrs.opacity = attrs.width = type;
		}

		return attrs;
	}

	// Generate shortcuts for custom animations
	jQuery.each({
		slideDown: genFx("show"),
		slideUp: genFx("hide"),
		slideToggle: genFx("toggle"),
		fadeIn: { opacity: "show" },
		fadeOut: { opacity: "hide" },
		fadeToggle: { opacity: "toggle" }
	}, function( name, props ) {
		jQuery.fn[ name ] = function( speed, easing, callback ) {
			return this.animate( props, speed, easing, callback );
		};
	});

	jQuery.speed = function( speed, easing, fn ) {
		var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
			complete: fn || !fn && easing ||
				jQuery.isFunction( speed ) && speed,
			duration: speed,
			easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
		};

		opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
			opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

		// normalize opt.queue - true/undefined/null -> "fx"
		if ( opt.queue == null || opt.queue === true ) {
			opt.queue = "fx";
		}

		// Queueing
		opt.old = opt.complete;

		opt.complete = function() {
			if ( jQuery.isFunction( opt.old ) ) {
				opt.old.call( this );
			}

			if ( opt.queue ) {
				jQuery.dequeue( this, opt.queue );
			}
		};

		return opt;
	};

	jQuery.easing = {
		linear: function( p ) {
			return p;
		},
		swing: function( p ) {
			return 0.5 - Math.cos( p*Math.PI ) / 2;
		}
	};

	jQuery.timers = [];
	jQuery.fx = Tween.prototype.init;
	jQuery.fx.tick = function() {
		var timer,
			timers = jQuery.timers,
			i = 0;

		fxNow = jQuery.now();

		for ( ; i < timers.length; i++ ) {
			timer = timers[ i ];
			// Checks the timer has not already been removed
			if ( !timer() && timers[ i ] === timer ) {
				timers.splice( i--, 1 );
			}
		}

		if ( !timers.length ) {
			jQuery.fx.stop();
		}
		fxNow = undefined;
	};

	jQuery.fx.timer = function( timer ) {
		if ( timer() && jQuery.timers.push( timer ) ) {
			jQuery.fx.start();
		}
	};

	jQuery.fx.interval = 13;

	jQuery.fx.start = function() {
		if ( !timerId ) {
			timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
		}
	};

	jQuery.fx.stop = function() {
		clearInterval( timerId );
		timerId = null;
	};

	jQuery.fx.speeds = {
		slow: 600,
		fast: 200,
		// Default speed
		_default: 400
	};

	// Back Compat <1.8 extension point
	jQuery.fx.step = {};

	if ( jQuery.expr && jQuery.expr.filters ) {
		jQuery.expr.filters.animated = function( elem ) {
			return jQuery.grep(jQuery.timers, function( fn ) {
				return elem === fn.elem;
			}).length;
		};
	}
	jQuery.fn.offset = function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== core_strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	};

	jQuery.offset = {

		setOffset: function( elem, options, i ) {
			var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
				position = jQuery.css( elem, "position" ),
				curElem = jQuery( elem ),
				props = {};

			// Set position first, in-case top/left are set even on static elem
			if ( position === "static" ) {
				elem.style.position = "relative";
			}

			curOffset = curElem.offset();
			curCSSTop = jQuery.css( elem, "top" );
			curCSSLeft = jQuery.css( elem, "left" );
			calculatePosition = ( position === "absolute" || position === "fixed" ) && ( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

			// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed
			if ( calculatePosition ) {
				curPosition = curElem.position();
				curTop = curPosition.top;
				curLeft = curPosition.left;

			} else {
				curTop = parseFloat( curCSSTop ) || 0;
				curLeft = parseFloat( curCSSLeft ) || 0;
			}

			if ( jQuery.isFunction( options ) ) {
				options = options.call( elem, i, curOffset );
			}

			if ( options.top != null ) {
				props.top = ( options.top - curOffset.top ) + curTop;
			}
			if ( options.left != null ) {
				props.left = ( options.left - curOffset.left ) + curLeft;
			}

			if ( "using" in options ) {
				options.using.call( elem, props );

			} else {
				curElem.css( props );
			}
		}
	};


	jQuery.fn.extend({

		position: function() {
			if ( !this[ 0 ] ) {
				return;
			}

			var offsetParent, offset,
				elem = this[ 0 ],
				parentOffset = { top: 0, left: 0 };

			// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
			if ( jQuery.css( elem, "position" ) === "fixed" ) {
				// We assume that getBoundingClientRect is available when computed position is fixed
				offset = elem.getBoundingClientRect();

			} else {
				// Get *real* offsetParent
				offsetParent = this.offsetParent();

				// Get correct offsets
				offset = this.offset();
				if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
					parentOffset = offsetParent.offset();
				}

				// Add offsetParent borders
				parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
			}

			// Subtract parent offsets and element margins
			return {
				top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
				left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
			};
		},

		offsetParent: function() {
			return this.map(function() {
				var offsetParent = this.offsetParent || docElem;

				while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position") === "static" ) ) {
					offsetParent = offsetParent.offsetParent;
				}

				return offsetParent || docElem;
			});
		}
	});


	// Create scrollLeft and scrollTop methods
	jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
		var top = "pageYOffset" === prop;

		jQuery.fn[ method ] = function( val ) {
			return jQuery.access( this, function( elem, method, val ) {
				var win = getWindow( elem );

				if ( val === undefined ) {
					return win ? win[ prop ] : elem[ method ];
				}

				if ( win ) {
					win.scrollTo(
						!top ? val : window.pageXOffset,
						top ? val : window.pageYOffset
					);

				} else {
					elem[ method ] = val;
				}
			}, method, val, arguments.length, null );
		};
	});

	function getWindow( elem ) {
		return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
	}
	// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
	jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
		jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
			// margin is only for outerHeight, outerWidth
			jQuery.fn[ funcName ] = function( margin, value ) {
				var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
					extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

				return jQuery.access( this, function( elem, type, value ) {
					var doc;

					if ( jQuery.isWindow( elem ) ) {
						// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
						// isn't a whole lot we can do. See pull request at this URL for discussion:
						// https://github.com/jquery/jquery/pull/764
						return elem.document.documentElement[ "client" + name ];
					}

					// Get document width or height
					if ( elem.nodeType === 9 ) {
						doc = elem.documentElement;

						// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
						// whichever is greatest
						return Math.max(
							elem.body[ "scroll" + name ], doc[ "scroll" + name ],
							elem.body[ "offset" + name ], doc[ "offset" + name ],
							doc[ "client" + name ]
						);
					}

					return value === undefined ?
						// Get width or height on the element, requesting but not forcing parseFloat
						jQuery.css( elem, type, extra ) :

						// Set width or height on the element
						jQuery.style( elem, type, value, extra );
				}, type, chainable ? margin : undefined, chainable, null );
			};
		});
	});
	// Limit scope pollution from any deprecated API
	// (function() {

	// The number of elements contained in the matched element set
	jQuery.fn.size = function() {
		return this.length;
	};

	jQuery.fn.andSelf = jQuery.fn.addBack;

	// })();

	// If there is a window object, that at least has a document property,
	// define jQuery and $ identifiers
	if ( typeof window === "object" && typeof window.document === "object" ) {
		window.jQuery = window.$ = jQuery;
	}

	})( window );
	
	// Raw jQuery does not return anything, so return it explicitly here.
	return jQuery.noConflict( true );
} );

			
/**
 * @license RequireJS domReady 2.0.0 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/domReady for details
 */
/*jslint */
/*global require: false, define: false, requirejs: false,
  window: false, clearInterval: false, document: false,
  self: false, setInterval: false */


timely.define('domReady',[],function () {
    

    var isBrowser = typeof window !== "undefined" && window.document,
        isPageLoaded = !isBrowser,
        doc = isBrowser ? document : null,
        readyCalls = [],
        isTop, testDiv, scrollIntervalId;

    function runCallbacks(callbacks) {
        var i;
        for (i = 0; i < callbacks.length; i++) {
            callbacks[i](doc);
        }
    }

    function callReady() {
        var callbacks = readyCalls;

        if (isPageLoaded) {
            //Call the DOM ready callbacks
            if (callbacks.length) {
                readyCalls = [];
                runCallbacks(callbacks);
            }
        }
    }

    /**
     * Sets the page as loaded.
     */
    function pageLoaded() {
        if (!isPageLoaded) {
            isPageLoaded = true;
            if (scrollIntervalId) {
                clearInterval(scrollIntervalId);
            }

            callReady();
        }
    }

    if (isBrowser) {
        if (document.addEventListener) {
            //Standards. Hooray! Assumption here that if standards based,
            //it knows about DOMContentLoaded.
            document.addEventListener("DOMContentLoaded", pageLoaded, false);
            window.addEventListener("load", pageLoaded, false);
        } else if (window.attachEvent) {
            window.attachEvent("onload", pageLoaded);

            testDiv = document.createElement('div');
            try {
                isTop = window.frameElement === null;
            } catch(e) {}

            //DOMContentLoaded approximation that uses a doScroll, as found by
            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,
            //but modified by other contributors, including jdalton
            if (testDiv.doScroll && isTop && window.external) {
                scrollIntervalId = setInterval(function () {
                    try {
                        testDiv.doScroll();
                        pageLoaded();
                    } catch (e) {}
                }, 30);
            }
        }

        //Check if document already complete, and if so, just trigger page load
        //listeners. Latest webkit browsers also use "interactive", and
        //will fire the onDOMContentLoaded before "interactive" but not after
        //entering "interactive" or "complete". More details:
        //http://dev.w3.org/html5/spec/the-end.html#the-end
        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded
        if (document.readyState === "complete" ||
            document.readyState === "interactive") {
            pageLoaded();
        }
    }

    /** START OF PUBLIC API **/

    /**
     * Registers a callback for DOM ready. If DOM is already ready, the
     * callback is called immediately.
     * @param {Function} callback
     */
    function domReady(callback) {
        if (isPageLoaded) {
            callback(doc);
        } else {
            readyCalls.push(callback);
        }
        return domReady;
    }

    domReady.version = '2.0.0';

    /**
     * Loader Plugin API method
     */
    domReady.load = function (name, req, onLoad, config) {
        if (config.isBuild) {
            onLoad(null);
        } else {
            domReady(onLoad);
        }
    };

    /** END OF PUBLIC API **/

    return domReady;
});

/* ========================================================================
 * Bootstrap: affix.js v3.1.1
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


timely.define('external_libs/bootstrap/affix', ["jquery_timely"], function( $ ) {  // jshint ;_;

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)
    this.$window = $(window)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      =
    this.unpin        =
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.RESET = 'ai1ec-affix ai1ec-affix-top ai1ec-affix-bottom'

  Affix.DEFAULTS = {
    offset: 0
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('ai1ec-affix')
    var scrollTop = this.$window.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
    var scrollTop    = this.$window.scrollTop()
    var position     = this.$element.offset()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom

    if (this.affixed == 'top') position.top += scrollTop

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.unpin   != null && (scrollTop + this.unpin <= position.top) ? false :
                offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ? 'bottom' :
                offsetTop    != null && (scrollTop <= offsetTop) ? 'top' : false

    if (this.affixed === affix) return
    if (this.unpin) this.$element.css('top', '')

    var affixType = 'ai1ec-affix' + (affix ? '-' + affix : '')
    var e         = $.Event(affixType + '.bs.affix')

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    this.affixed = affix
    this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

    this.$element
      .removeClass(Affix.RESET)
      .addClass(affixType)
      .trigger($.Event(affixType.replace('affix', 'affixed')))

    if (affix == 'bottom') {
      this.$element.offset({ top: scrollHeight - offsetBottom - this.$element.height() })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="ai1ec-affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom) data.offset.bottom = data.offsetBottom
      if (data.offsetTop)    data.offset.top    = data.offsetTop

      $spy.affix(data)
    })
  })

} )
;
timely.define('scripts/common_scripts/frontend/common_event_handlers',
	[
		"jquery_timely",
		"external_libs/bootstrap/affix",
	],
	function( $ ) {
	 // jshint ;_;

	/**
	 * Handler for popover trigger: mouseenter.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_popover_over = function( e ) {
		var $this = $( this ),
				$pop_content = $this.next( '.ai1ec-popup' ),
				el_content_data, el_classes_data, popover_placement;

		// If no popover found, quit.
		if ( $pop_content.length === 0 ) {
			return;
		}

		el_content_data = $pop_content.html();
		el_classes_data = $pop_content.attr( 'class' );

		// Position popover to the left only if there's room for it within the
		// bounds of the view (popovers are 182 pixels wide, a product of padding
		// and inner width as defined in style.less).
		var $bounds = $this.closest( '#ai1ec-calendar-view' );
		if ( $bounds.length === 0 ) {
			$bounds = $( 'body' );
		}
		if ( $this.offset().left - $bounds.offset().left > 182 ) {
			popover_placement = 'left';
		} else {
			popover_placement = 'right';
		}

		$this.constrained_popover( {
			content: el_content_data,
			title: '',
			placement: popover_placement,
			trigger: 'manual',
			html: true,
			template:
				'<div class="timely ai1ec-popover ' + el_classes_data + '">' +
					'<div class="ai1ec-arrow"></div>' +
					'<div class="ai1ec-popover-inner">' +
						'<div class="ai1ec-popover-content"><div></div></div>' +
					'</div>' +
				'</div>',
			container: 'body'
		}).constrained_popover( 'show' );
	};

	/**
	 * Handler for popover trigger: mouseleave. Remove popup if entering an
	 * element that is not the popup.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_popover_out = function( e ) {
		var $el = $( e.toElement || e.relatedTarget );
		// If an ancestor of element being entered is not a popup, hide popover.
		if ( $el.closest( '.ai1ec-popup' ).length === 0 ) {
			$( this ).constrained_popover( 'hide' );
		}
	};

	/**
	 * Handler for popover; remove the popover on mouseleave of itself. Hide popup
	 * if entering an element that is not a tooltip.
	 * Also remove any visible tooltip if removing popup.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_popover_self_out = function( e ) {
		var $el = $( e.toElement || e.relatedTarget );
		// If an ancestor of element being entered is not a tooltip, hide popover.
		if ( $el.closest( '.ai1ec-tooltip' ).length === 0 ) {
			$( this ).remove();
			$( 'body > .ai1ec-tooltip' ).remove();
		}
	};

	/**
	 * Manually handle tooltip mouseenter. Need to apply .timely namespace.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_tooltip_over = function( e ) {
		// Disable tooltips on mobile devices.
		if ( 'ontouchstart' in document.documentElement ) {
			e.preventDefault();
			return;
		}

		var $this = $( this ),
		    params = {
					template:
						'<div class="timely ai1ec-tooltip">' +
							'<div class="ai1ec-tooltip-arrow"></div>' +
							'<div class="ai1ec-tooltip-inner"></div>' +
						'</div>',
					trigger: 'manual',
					container: 'body'
				};

		// Don't add tooltips to category colour squares already contained in
		// descriptive category labels.
		if (
			$this.is( '.ai1ec-category .ai1ec-color-swatch' ) ||
			$this.is( '.ai1ec-custom-filter .ai1ec-color-swatch' )
		) {
			return;
		}
		if ( $this.is( '.ai1ec-tooltip-auto' ) ) {
			params.placement = get_placement_function( 250 );
		}
		$this.tooltip( params );
		$this.tooltip( 'show' );
	};

	/**
	 * Manually handle tooltip mouseleave.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_tooltip_out = function( e ) {
		$( this ).tooltip( 'hide' );
	};

	/**
	 * Handler for tooltip; remove the tooltip on mouseleave of itself, unless
	 * moving onto the tooltip trigger action. If moving onto an element that is
	 * not in a popup, hide any visible popup.
	 *
	 * @param  {object} e JS event object
	 */
	var handle_tooltip_self_out = function( e ) {
		var $el = $( e.toElement || e.relatedTarget );
		// If an ancestor of element being entered is not a tooltip trigger action,
		// hide tooltip.
		if ( $el.closest( '.ai1ec-tooltip-trigger' ).length === 0 ) {
			$( this ).remove();
		}
		// If an ancestor of element being entered is not a popup, hide any popup.
		if ( $el.closest( '.ai1ec-popup' ).length === 0 ) {
			$( 'body > .ai1ec-popup' ).remove();
		}
	};

	var get_placement_function = function( width ) {
		return function( tip, element ) {
				var left, right;

				var $element        = $( element );
				var defaultPosition = $element.attr( 'data-placement' );
				var pos             = $.extend( {}, $element.offset(), {
					width:  element.offsetWidth,
					height: element.offsetHeight
				} );

				var testLeft = function() {
					if ( false === left ) {
						return false;
					}
					left = ( ( pos.left - width ) >= 0 );
					return left ? 'left' : false;
				};

				var testRight = function() {
					if ( false === right ) {
						return false;
					}
					right = ( ( pos.left + width ) <= $( window ).width() );
					return right ? 'right' : false;
				};

				switch ( defaultPosition ) {
					case 'top'    : return 'top'; break;
					case 'bottom' : return 'bottom'; break;
					case 'left'   : if ( testLeft() )  { return 'left'  };
					case 'right'  : if ( testRight() ) { return 'right' };
					default:
						if ( testLeft() )  { return 'left'  };
						if ( testRight() ) { return 'right' };
						return defaultPosition;
				}
		}
	};

	return {
		handle_popover_over        : handle_popover_over,
		handle_popover_out         : handle_popover_out,
		handle_popover_self_out    : handle_popover_self_out,
		handle_tooltip_over        : handle_tooltip_over,
		handle_tooltip_out         : handle_tooltip_out,
		handle_tooltip_self_out    : handle_tooltip_self_out
	};
} );

timely.define('external_libs/modernizr',[], function() {
	/* Modernizr 2.5.3 (Custom Build) | MIT & BSD
	 * Build: http://modernizr.com/download/#-touch-cssclasses-teststyles-prefixes-load
	 */

	var Modernizr = (function( window, document, undefined ) {

	    var version = '2.5.3',

	    Modernizr = {},

	    enableClasses = true,

	    docElement = document.documentElement,

	    mod = 'modernizr',
	    modElem = document.createElement(mod),
	    mStyle = modElem.style,

	    inputElem  ,


	    toString = {}.toString,

	    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),



	    tests = {},
	    inputs = {},
	    attrs = {},

	    classes = [],

	    slice = classes.slice,

	    featureName, 


	    injectElementWithStyles = function( rule, callback, nodes, testnames ) {

	      var style, ret, node,
	          div = document.createElement('div'),
	                body = document.body, 
	                fakeBody = body ? body : document.createElement('body');

	      if ( parseInt(nodes, 10) ) {
	                      while ( nodes-- ) {
	              node = document.createElement('div');
	              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
	              div.appendChild(node);
	          }
	      }

	                style = ['&#173;','<style>', rule, '</style>'].join('');
	      div.id = mod;
	          (body ? div : fakeBody).innerHTML += style;
	      fakeBody.appendChild(div);
	      if(!body){
	                fakeBody.style.background = "";
	          docElement.appendChild(fakeBody);
	      }

	      ret = callback(div, rule);
	        !body ? fakeBody.parentNode.removeChild(fakeBody) : div.parentNode.removeChild(div);

	      return !!ret;

	    },
	    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProperty;

	    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
	      hasOwnProperty = function (object, property) {
	        return _hasOwnProperty.call(object, property);
	      };
	    }
	    else {
	      hasOwnProperty = function (object, property) { 
	        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
	      };
	    }


	    if (!Function.prototype.bind) {
	      Function.prototype.bind = function bind(that) {

	        var target = this;

	        if (typeof target != "function") {
	            throw new TypeError();
	        }

	        var args = slice.call(arguments, 1),
	            bound = function () {

	            if (this instanceof bound) {

	              var F = function(){};
	              F.prototype = target.prototype;
	              var self = new F;

	              var result = target.apply(
	                  self,
	                  args.concat(slice.call(arguments))
	              );
	              if (Object(result) === result) {
	                  return result;
	              }
	              return self;

	            } else {

	              return target.apply(
	                  that,
	                  args.concat(slice.call(arguments))
	              );

	            }

	        };

	        return bound;
	      };
	    }

	    function setCss( str ) {
	        mStyle.cssText = str;
	    }

	    function setCssAll( str1, str2 ) {
	        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
	    }

	    function is( obj, type ) {
	        return typeof obj === type;
	    }

	    function contains( str, substr ) {
	        return !!~('' + str).indexOf(substr);
	    }


	    function testDOMProps( props, obj, elem ) {
	        for ( var i in props ) {
	            var item = obj[props[i]];
	            if ( item !== undefined) {

	                            if (elem === false) return props[i];

	                            if (is(item, 'function')){
	                                return item.bind(elem || obj);
	                }

	                            return item;
	            }
	        }
	        return false;
	    }


	    var testBundle = (function( styles, tests ) {
	        var style = styles.join(''),
	            len = tests.length;

	        injectElementWithStyles(style, function( node, rule ) {
	            var style = document.styleSheets[document.styleSheets.length - 1],
	                                                    cssText = style ? (style.cssRules && style.cssRules[0] ? style.cssRules[0].cssText : style.cssText || '') : '',
	                children = node.childNodes, hash = {};

	            while ( len-- ) {
	                hash[children[len].id] = children[len];
	            }

	                       Modernizr['touch'] = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch || (hash['touch'] && hash['touch'].offsetTop) === 9; 
	                                }, len, tests);

	    })([
	                       ,['@media (',prefixes.join('touch-enabled),('),mod,')',
	                                '{#touch{top:9px;position:absolute}}'].join('')           ],
	      [
	                       ,'touch'                ]);



	    tests['touch'] = function() {
	        return Modernizr['touch'];
	    };



	    for ( var feature in tests ) {
	        if ( hasOwnProperty(tests, feature) ) {
	                                    featureName  = feature.toLowerCase();
	            Modernizr[featureName] = tests[feature]();

	            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);
	        }
	    }
	    setCss('');
	    modElem = inputElem = null;


	    Modernizr._version      = version;

	    Modernizr._prefixes     = prefixes;

	    Modernizr.testStyles    = injectElementWithStyles;    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, '$1$2') +

	                                                    (enableClasses ? ' js ' + classes.join(' ') : '');

	    return Modernizr;

	})(window, window.document);
	
	return Modernizr;
} );
/* ========================================================================
 * Bootstrap: tooltip.js v3.0.3
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


timely.define('external_libs/bootstrap/tooltip', ["jquery_timely"], function( $ ) {  // jshint ;_;

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.DEFAULTS = {
    animation: true
  , placement: 'top'
  , selector: false
  , template: '<div class="ai1ec-tooltip"><div class="ai1ec-tooltip-arrow"></div><div class="ai1ec-tooltip-inner"></div></div>'
  , trigger: 'hover focus'
  , title: ''
  , delay: 0
  , html: false
  , container: false
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled  = true
    this.type     = type
    this.$element = $(element)
    this.options  = this.getOptions(options)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focus'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay
      , hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type)

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.'+ this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      var $tip = this.tip()

      this.setContent()

      if (this.options.animation) $tip.addClass('ai1ec-fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass("ai1ec-" + placement)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var $parent = this.$element.parent()

        var orgPlacement = placement
        var docScroll    = document.documentElement.scrollTop || document.body.scrollTop
        var parentWidth  = this.options.container == 'body' ? window.innerWidth  : $parent.outerWidth()
        var parentHeight = this.options.container == 'body' ? window.innerHeight : $parent.outerHeight()
        var parentLeft   = this.options.container == 'body' ? 0 : $parent.offset().left

        placement = placement == 'bottom' && pos.top   + pos.height  + actualHeight - docScroll > parentHeight  ? 'top'    :
                    placement == 'top'    && pos.top   - docScroll   - actualHeight < 0                         ? 'bottom' :
                    placement == 'right'  && pos.right + actualWidth > parentWidth                              ? 'left'   :
                    placement == 'left'   && pos.left  - actualWidth < parentLeft                               ? 'right'  :
                    placement

        $tip
          .removeClass("ai1ec-" + orgPlacement)
          .addClass("ai1ec-" + placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)
      this.$element.trigger('shown.bs.' + this.type)
    }
  }

  Tooltip.prototype.applyPlacement = function(offset, placement) {
    var replace
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    $tip
      .offset(offset)
      .addClass('ai1ec-in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      replace = true
      offset.top = offset.top + height - actualHeight
    }

    if (/bottom|top/.test(placement)) {
      var delta = 0

      if (offset.left < 0) {
        delta       = offset.left * -2
        offset.left = 0

        $tip.offset(offset)

        actualWidth  = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight
      }

      this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')
    } else {
      this.replaceArrow(actualHeight - height, actualHeight, 'top')
    }

    if (replace) $tip.offset(offset)
  }

  Tooltip.prototype.replaceArrow = function(delta, dimension, position) {
    this.arrow().css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.ai1ec-tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('ai1ec-fade ai1ec-in ai1ec-top ai1ec-bottom ai1ec-left ai1ec-right')
  }

  Tooltip.prototype.hide = function () {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('ai1ec-in')

    $.support.transition && this.$tip.hasClass('ai1ec-fade') ?
      $tip
        .one($.support.transition.end, complete)
        .emulateTransitionEnd(150) :
      complete()

    this.$element.trigger('hidden.bs.' + this.type)

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function () {
    var el = this.$element[0]
    return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
      width: el.offsetWidth
    , height: el.offsetHeight
    }, this.$element.offset())
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.tip = function () {
    return this.$tip = this.$tip || $(this.options.template)
  }

  Tooltip.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.ai1ec-tooltip-arrow')
  }

  Tooltip.prototype.validate = function () {
    if (!this.$element[0].parentNode) {
      this.hide()
      this.$element = null
      this.options  = null
    }
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = e ? $(e.currentTarget)[this.type](this.getDelegateOptions()).data('bs.' + this.type) : this
    self.tip().hasClass('ai1ec-in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    this.hide().$element.off('.' + this.type).removeData('bs.' + this.type)
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  var old = $.fn.tooltip

  $.fn.tooltip = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

} );

/* ========================================================================
 * Bootstrap: popover.js v3.0.3
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


timely.define('external_libs/bootstrap/popover', ["jquery_timely", "external_libs/bootstrap/tooltip"], function( $ ) {  // jshint ;_;

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.DEFAULTS = $.extend({} , $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right'
  , trigger: 'click'
  , content: ''
  , template: '<div class="ai1ec-popover"><div class="ai1ec-arrow"></div><h3 class="ai1ec-popover-title"></h3><div class="ai1ec-popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.ai1ec-popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.ai1ec-popover-content')[this.options.html ? 'html' : 'text'](content)

    $tip.removeClass('ai1ec-fade ai1ec-top ai1ec-bottom ai1ec-left ai1ec-right ai1ec-in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.ai1ec-popover-title').html()) $tip.find('.ai1ec-popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return this.$arrow = this.$arrow || this.tip().find('.ai1ec-arrow')
  }

  Popover.prototype.tip = function () {
    if (!this.$tip) this.$tip = $(this.options.template)
    return this.$tip
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  var old = $.fn.popover

  $.fn.popover = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

} );

timely.define('external_libs/constrained_popover',
	[
		"jquery_timely",
		"external_libs/bootstrap/popover"
	],
	function( $ ) {

	 // jshint ;_;

	/* CONSTRAINED_POPOVER PUBLIC CLASS DEFINITION
	 * =========================================== */

	var ConstrainedPopover = function( element, options ) {
		this.init( 'constrained_popover', element, options );
	};

	ConstrainedPopover.DEFAULTS = $.extend(
		{},
		$.fn.popover.Constructor.DEFAULTS,
		{
			container: '',
			content: this.options
		}
	);

	// Note: ConstrainedPopover extends Bootstrap's Popover.

	ConstrainedPopover.prototype =
		$.extend( {}, $.fn.popover.Constructor.prototype );

	ConstrainedPopover.prototype.constructor = ConstrainedPopover;

	ConstrainedPopover.prototype.getDefaults = function () {
		return ConstrainedPopover.DEFAULTS
	};

	/**
	 * Extends Popover.prototype.applyPlacement by repositioning popover within
	 * constrained bounds, after it has been otherwise positioned naturally.
	 */
	ConstrainedPopover.prototype.applyPlacement =
		function( offset, placement ) {
			$.fn.popover.Constructor.prototype.applyPlacement.call( this, offset, placement );

			var $tip     = this.tip(),
			    actualWidth = $tip[0].offsetWidth,
			    actualHeight = $tip[0].offsetHeight,
			    pos      = this.getPosition(),
			    finalPos = {};

			switch ( placement ) {
				case 'left':
					newPos = this.defineBounds( pos );
					if ( typeof newPos.top === "undefined" ) {
						finalPos["top"] = pos.top + pos.height / 2 - actualHeight / 2;
					} else {
						finalPos["top"] = newPos.top - actualHeight / 2;
					}
					if ( typeof newPos.left === "undefined" ) {
						finalPos["left"] = pos.left - actualWidth;
					} else {
						finalPos["left"] = newPos.left - actualWidth;
					}
					$tip.offset( finalPos );
					break;

				case 'right':
					newPos = this.defineBounds( pos );
					if ( typeof newPos.top === "undefined" ) {
						finalPos["top"] = pos.top + pos.height / 2 - actualHeight / 2;
					} else {
						finalPos["top"] = newPos.top - actualHeight / 2;
					}
					if ( typeof newPos.left === "undefined" ) {
						finalPos["left"] = pos.left + pos.width;
					} else {
						finalPos["left"] = newPos.left + pos.width;
					}
					$tip.offset( finalPos );
					break;
			}
		};

	ConstrainedPopover.prototype.defineBounds = function( pos ) {
		var containerOffset,
		    boundTop,
		    boundLeft,
		    boundBottom,
		    boundRight,
		    newPos = {},
		    $container = $( 'body' === this.options.container  ? document : this.options.container );

		if ( $container.length ) {
			containerOffset = $container.offset() || { top: 0, left: 0 };

			boundTop = containerOffset.top;
			boundLeft = containerOffset.left;
			boundBottom = boundTop + $container.height();
			boundRight = boundLeft + $container.width();

			// Constrain y-axis overflow
			if ( pos.top + ( pos.height / 2 ) < boundTop ) {
				newPos['top'] = boundTop;
			}
			if ( pos.top + ( pos.height / 2 ) > boundBottom ) {
				newPos['top'] = boundBottom;
			}

			// Constrain x-axis overflow
			if ( pos.left - ( pos.width / 2 ) < boundLeft ) {
				newPos['left'] = boundLeft;
			}
			if ( pos.left - ( pos.width / 2 ) > boundRight ) {
				newPos['left'] = boundRight;
			}
			return newPos;
		}
		return false;
	};

	// CONSTRAINED_POPOVER PLUGIN DEFINITION
	// =====================================

	var old = $.fn.popover

	$.fn.constrained_popover = function( option ) {
		return this.each( function () {
			var $this = $(this),
			    data = $this.data('ai1ec.constrained_popover'),
			    options = typeof option == 'object' && option;

			if ( !data ) {
				$this.data(
					'ai1ec.constrained_popover',
					( data = new ConstrainedPopover( this, options ) )
				);
			}
			if ( typeof option == 'string' ) {
				data[option]();
			}
		})
	}

	$.fn.constrained_popover.Constructor = ConstrainedPopover;

	// CONSTRAINED_POPOVER NO CONFLICT
	// ===============================

	$.fn.constrained_popover.noConflict = function () {
		$.fn.constrained_popover = old;
		return this;
	}

} );

/* ========================================================================
 * Bootstrap: dropdown.js v3.0.3
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */


timely.define('external_libs/bootstrap/dropdown', ["jquery_timely"], function( $ ) {  // jshint ;_;

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.ai1ec-dropdown-backdrop'
  var toggle   = '[data-toggle=ai1ec-dropdown]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.ai1ec-disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('ai1ec-open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.ai1ec-navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $('<div class="ai1ec-dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
      }

      $parent.trigger(e = $.Event('show.bs.dropdown'))

      if (e.isDefaultPrevented()) return

      $parent
        .toggleClass('ai1ec-open')
        .trigger('shown.bs.dropdown')

      $this.focus()
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27)/.test(e.keyCode)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.ai1ec-disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('ai1ec-open')

    if (!isActive || (isActive && e.keyCode == 27)) {
      if (e.which == 27) $parent.find(toggle).focus()
      return $this.click()
    }

    var $items = $('[role=menu] li:not(.ai1ec-divider):visible a', $parent)

    if (!$items.length) return

    var index = $items.index($items.filter(':focus'))

    if (e.keyCode == 38 && index > 0)                 index--                        // up
    if (e.keyCode == 40 && index < $items.length - 1) index++                        // down
    if (!~index)                                      index=0

    $items.eq(index).focus()
  }

  function clearMenus() {
    $(backdrop).remove()
    $(toggle).each(function (e) {
      var $parent = getParent($(this))
      if (!$parent.hasClass('ai1ec-open')) return
      $parent.trigger(e = $.Event('hide.bs.dropdown'))
      if (e.isDefaultPrevented()) return
      $parent.removeClass('ai1ec-open').trigger('hidden.bs.dropdown')
    })
  }

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  var old = $.fn.dropdown

  $.fn.dropdown = function (option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.ai1ec-dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)

} );

timely.define('scripts/common_scripts/frontend/common_frontend',
	[
		"jquery_timely",
		"domReady",
		"scripts/common_scripts/frontend/common_event_handlers",
		"ai1ec_calendar",
		"external_libs/modernizr",
		"external_libs/bootstrap/tooltip",
		"external_libs/constrained_popover",
		"external_libs/bootstrap/dropdown"
	],
	function( $, domReady, event_handlers, ai1ec_calendar, Modernizr ) {

	 // jshint ;_;

	var event_listeners_attached = false;

	var attach_event_handlers_frontend = function() {
		event_listeners_attached = true;
		$( document ).on( 'mouseenter', '.ai1ec-popup-trigger',
			event_handlers.handle_popover_over );
		$( document ).on( 'mouseleave', '.ai1ec-popup-trigger',
			event_handlers.handle_popover_out );
		$( document ).on( 'mouseleave', '.ai1ec-popup',
			event_handlers.handle_popover_self_out );
		$( document ).on( 'mouseenter', '.ai1ec-tooltip-trigger',
			event_handlers.handle_tooltip_over );
		$( document ).on( 'mouseleave', '.ai1ec-tooltip-trigger',
			event_handlers.handle_tooltip_out );
		$( document ).on( 'mouseleave', '.ai1ec-tooltip',
			event_handlers.handle_tooltip_self_out );
	};

	/**
	 * Initialize page.
	 */
	var start = function() {
		domReady( function() {
			attach_event_handlers_frontend();
		} );
	};

	/**
	 * Returns whether event listeners have been attached.
	 *
	 * @return {boolean}
	 */
	var are_event_listeners_attached = function() {
		return event_listeners_attached;
	};

	return {
		start                        : start,
		are_event_listeners_attached : are_event_listeners_attached
	};
} );


			// start up the widget
			timely.require(
		[
		 'scripts/calendar',
		 'scripts/calendar/load_views',
		 'scripts/event',
		 'scripts/common_scripts/frontend/common_frontend',
		 'domReady',
		 'jquery_timely',
		 'ai1ec_calendar',
		 'ai1ec_config',
		 'libs/utils',
		 'libs/gmaps'
		 ],
function( page, load_views, evt, common, domReady, $, calendar, config, utils ) {
	 // jshint ;_;

	// Prevent double initialisation for legacy code snippets.
	if ( window.timely.js_widgets_inited ) {
		return;
	}
	window.timely['js_widgets_inited'] = 1;

	var
		loading_html = '<h2 class="ai1ec-widget-loading ai1ec-text-center"><small>\
			<i class="ai1ec-fa ai1ec-fa-lg ai1ec-fa-fw ai1ec-fa-spin\
				ai1ec-fa-spinner"></i> ' + config.calendar_loading + '</small></h2>',
		fade_out_loading = function( $parent ) {
			$parent.find( '.ai1ec-widget-loading' ).fadeOut(
				'slow',
				function() { $( this ).remove(); }
			);
		},
		create_url = function( data ) {
			var configurable = config.javascript_widgets[data.widget];
			if ( ! configurable ) {
				return false;
			}
			var url = (
					// We serve Calendar widgets from the Calendar page.
					data.widget.match( /superwidget/ )
					? calendar.full_calendar_url
					: config.site_url
				)
				+ '?ai1ec_js_widget='
				+ data.widget + '&render=true';

			$.each( configurable, function( el, i ) {
				if ( undefined !== data[el] ) {
					url += '&' + el + '=' + data[el];
				}
			} );
			// Load the view specified in hash.
			var view_hash  = location.hash.match( /^#view\|(.+)/ );
			if ( view_hash && data.widget.match( /superwidget/ ) ) {
				url = calendar.calendar_url
					+ '?' + view_hash[1].replace( /\|/g, '&' ).replace( /\~/g, '=' );
				history.pushState( null, document.title, location.pathname );
			}
			return url;
		},
		// It can be triggered from a `popstate` event
		// (then additional arguments are specified)
		// or by clicking an event link.
		load_event_through_jsonp = function( e, href, instance_id, event_name ) {
			var
				$this       = $( this ),
				href        = href || $this.attr( 'href' ),
				type        = 'jsonp',
				$timely_div = $this.closest( '.timely' ),
				query       = {
					request_type     : type,
					ai1ec_doing_ajax : true,
					ai1ec            : utils.create_ai1ec_to_send( $timely_div )
				},
				$modal      = $( '#ai1ec-event-modal' ),
				$event      = $this.closest( '.ai1ec-event, .ai1ec-popover' ).length
					? $this.closest( '.ai1ec-event, .ai1ec-popover' ) : $this,
				instance_id = instance_id || $event.attr( 'class' )
					.match( /ai1ec-event-instance-id-(\d+)/ )[1],
				event_name  = event_name || function() {
					var name = href.match( /\/event\/([\w-]+)/ );
					if ( ! name ) {
						name = href.match( /\?ai1ec_event=([\w-]+)&/ );
					}
					return name ? name[1] : undefined;
				},
				eventURL    = '#event|' + event_name() + '|' + instance_id;

			// Show modal with event title
			$modal
				.modal( 'show' )
				.find( '.ai1ec-modal-body' )
					.html( loading_html );

			// Hide popovers
			$( '.ai1ec-popup' ).hide();

			// Change URL.
			if ( location.hash != eventURL ) {
				History.pushState( instance_id, event_name, eventURL );
			}

			// Fetch AJAX result
			$.ajax( {
				url         : href,
				dataType    : type,
				data        : query,
				method      : 'get',
				crossDomain : true,
				success     : function( data ) {
					// Place event details into modal.
					$modal
						.modal( 'show' )
						.find( '.ai1ec-modal-body' )
							.append( data.html );

					// Hide the subscribe buttons.
					$( '.ai1ec-subscribe-container', $modal ).hide();

					// Neutralize links for categories and tags.
					$( 'a.ai1ec-category, a.ai1ec-tag', $modal )
						.each( function() {
							$( this ).removeAttr( 'href' );
						} );

					// Make calendar links close the modal.
					$( '.ai1ec-calendar-link', $modal )
						.attr( 'data-dismiss', 'ai1ec-modal' );

					// Start event details page.
					timely.require( ['scripts/event'], function( event ) {
						event.start();
					} );
				},
				complete    : function() { fade_out_loading( $modal ); }
			} );
			return false;
		},
		prevent_injection = function() {
			$( '.ai1ec-load-view, .ai1ec-clear-filter' )
				.each( function() {
					var
						$this       = $( this ),
						widget_type = $this
							.closest( '.timely-widget' )
								.attr( 'data-widget-type' ),
						href        = $this.attr( 'href' ) || $this.attr( 'data-href' ),
						new_href    = utils.add_query_arg(
							href, ['ai1ec_source', widget_type]
						);

					$this.attr( {
						'href'      : new_href,
						'data-href' : new_href
					} );
				} );
		};

	domReady( function() {
		// Create only one shared event details modal for all loaded calendars.
		if ( ! $( '#ai1ec-event-modal' ).length ) {
			$( 'body' ).append(
				'<div id="ai1ec-event-modal" class="timely ai1ec-modal ai1ec-fade"\
					role="dialog" aria-hidden="true" tabindex="-1">\
					<div class="ai1ec-modal-dialog">\
						<div class="ai1ec-modal-content">\
							<button data-dismiss="ai1ec-modal" class="ai1ec-close ai1ec-pull-right">&times;</button>\
							<div class="ai1ec-modal-body ai1ec-clearfix single-ai1ec_event">\
							</div>\
						</div>\
					</div>\
				</div>'
			);
		}

		// Load each widget.
		// Create an array of promises ( notice the return ).
		var promises = $( '[data-widget^="ai1ec"]' ).not( '[data-added]' )
			.map( function( i, el ) {
				var
					$el         = $( el ),
					widget_type = $el.data( 'widget' ),
					$timely     = $( '<div />', {
						'class': 'timely timely-widget'
						+ (
							widget_type.match( /ai1ec(_|-)superwidget/ )
							? ' timely-calendar'
							: ''
						)
					} )
						.attr( 'data-widget-type', widget_type )
						.html( loading_html )
						.insertAfter( $el )
						.css( -1 < $.inArray(
								widget_type,
								['ai1ec_superwidget', 'ai1ecfe_fe_widget']
							)
							? {
								'min-height' : '392px'
							}
							: {}
						),
					url         = create_url( $el.data() ),
					data        = {
						ai1ec_doing_ajax : true,
						request_type     : 'jsonp',
						ai1ec            : utils.create_ai1ec_to_send( el ),
						ai1ec_source     : widget_type
					}

				// Do not render widget if it's not defined in config.
				if ( false === url ) {
					// Remove block with spinner.
					$el.remove();
					$timely.remove();
					return false;
				}
				$timely
					.on( 'click', '.ai1ec-cog-item-name a', load_event_through_jsonp );

				return $.ajax( {
					url      : url,
					dataType : 'jsonp',
					data     : data,
					success  : function( data ) {
						$timely.append( data.html );
						$el.attr( 'data-added', 1 );
						page.initialize_view( $timely.find( '.ai1ec-calendar' ) );
					},
					error    : function() {
						$timely.append( '<p>An error occurred while retrieving the data.</p>' );
					},
					complete    : function() { fade_out_loading( $timely ); }
				} );
			} ).get();

		// When all the promises have fired their success callbacks, act.
		$.when.apply( $, promises ).done( function() {
			// The common library might be already loaded
			// if we are embedding the calendar
			// in a wordpress page with our plugin installed.

			if ( ! common.are_event_listeners_attached() ) {
				common.start();
			}

			$.each( calendar.extension_urls, function( index, el ) {
				timely.require( [ el.url ] );
			} );

			prevent_injection();
			top.postMessage( 'ai1ec-widget-loaded', top.document.URL );
			$( document )
				.trigger( 'page_ready.ai1ec' )
				// If event hadlers are not inited yet, this flag can be used.
				.data( 'ai1ec-widget-loaded', 1 );
	 	} );

	 	var initial_title = document.title;
		$( document )
			.on( 'click', 'a.ai1ec-load-event', load_event_through_jsonp )
			.on( 'initialize_view.ai1ec', prevent_injection )
			.on( 'hide.bs.modal', '#ai1ec-event-modal', function() {
				if ( location.hash ) {
					history.pushState( null, initial_title, location.pathname );
				}
			} );

		// If hash matches the defined pattern - show the event.
		var load_event_from_hash = function() {
			var
				event_hash = decodeURIComponent( location.hash ),
				view_hash  = event_hash;

			event_hash = event_hash.match( /^#event\|([\w-]+)\|(\d+)/ );
			view_hash  = view_hash.match( /^#view\|(.+)/ );
			if ( event_hash ) {
				var
					event_name  = function() { return event_hash[1]},
					instance_id = event_hash[2];

				if ( calendar.permalinks_structure ) {
					href = config.site_url
						+ 'event/' + event_name()
						+ '/?instance_id=' + instance_id;
				} else {
					href = config.site_url
						+ '?ai1ec_event=' + event_name()
						+ '&instance_id=' +  instance_id;
				}
				load_event_through_jsonp( null, href, instance_id, event_name );
			} else if ( view_hash ) {
			} else {
				$( '#ai1ec-event-modal' ).modal( 'hide' );
			}
		}
		load_event_from_hash();
		History.Adapter.bind( window, 'popstate', function( e ) {
			if ( e.originalEvent ) {
				load_event_from_hash();
			}
		} );
	} );
} );

		})(); // We call our anonymous function immediately